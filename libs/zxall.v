primitive adfulso_udp_1( S, A, B, CI );
output S;
input A, B, CI;

// Full adder sum term.

table
  //    A    B   CI :  S

        0    0    0 :  0;
        0    0    1 :  1;
        0    1    0 :  1;
        0    1    1 :  0;
        1    0    0 :  1;
        1    0    1 :  0;
        1    1    0 :  0; 
        1    1    1 :  1;

endtable
endprimitive           


primitive adfulco_udp_1( CO, A, B, CI );
output CO;
input A, B, CI;

// Full adder carry out term.

table
  //    A    B   CI :  CO

        1    1    ? :  1;
        1    ?    1 :  1;
        ?    1    1 :  1;
        0    0    ? :  0;
        0    ?    0 :  0;
        ?    0    0 :  0;

endtable
endprimitive

                     
//Don't trust this.  Tim Hunkler 9/24/96
primitive oa33_udp_1( Y, A, B, C, D, E, F );
output Y;
input A, B, C, D, E, F;

// OR-AND 3 3

table
  //    A    B    C    C    D    E :  Y

        0    0    0    ?    ?    ? :  0;
        ?    ?    ?    0    0    0 :  0;
        1    ?    ?    1    ?    ? :  1;
        1    ?    ?    ?    1    ? :  1;
        1    ?    ?    ?    ?    1 :  1;
        ?    1    ?    1    ?    ? :  1;
        ?    1    ?    ?    1    ? :  1;
        ?    1    ?    ?    ?    1 :  1;
        ?    ?    1    1    ?    ? :  1;
        ?    ?    1    ?    1    ? :  1;
        ?    ?    1    ?    ?    1 :  1;

endtable
endprimitive

primitive aoi211_udp_1( Y, A, B, C, D );
output Y;
input A, B, C, D;

// AND-OR-INVERT 2 1 1

table
  //    A    B    C    D  :  Y

        1    1    ?    ?  :  0;
        ?    ?    1    ?  :  0;
        ?    ?    ?    1  :  0;
        0    ?    0    0  :  1;
        ?    0    0    0  :  1;

endtable
endprimitive


primitive aoi22_udp_1( Y, A, B, C, D );
output Y;             
input A, B, C, D;

// AND-OR-INVERT 2 2

table
  //    A    B    C    D  :  Y

        1    1    ?    ?  :  0;
        ?    ?    1    1  :  0;
        0    ?    0    ?  :  1;
        ?    0    ?    0  :  1;
        0    ?    ?    0  :  1;
        ?    0    0    ?  :  1;

endtable
endprimitive
       
primitive oai222_udp_1( Y, A, B, C, D, E, F );
output Y;
input A, B, C, D, E, F;

// OR-AND-INVERT 2 2 2

table
  //    A    B    C    D    E    F  :  Y

        0    0    ?    ?    ?    ?  :  1;
        ?    ?    0    0    ?    ?  :  1;
        ?    ?    ?    ?    0    0  :  1;
        1    ?    1    ?    1    ?  :  0;
        1    ?    1    ?    ?    1  :  0;
        ?    1    ?    1    1    ?  :  0;
        ?    1    ?    1    ?    1  :  0;
        1    ?    ?    1    1    ?  :  0;
        1    ?    ?    1    ?    1  :  0;
        ?    1    1    ?    1    ?  :  0;
        ?    1    1    ?    ?    1  :  0;

endtable
endprimitive

primitive aoi31_udp_1( Y, A, B, C, D );
output Y;
input A, B, C, D;

// AND-OR-INVERT 3 1

table
  //    A    B    C    D  :  Y

        1    1    1    ?  :  0;
        ?    ?    ?    1  :  0;
        0    ?    ?    0  :  1;
        ?    0    ?    0  :  1;
        ?    ?    0    0  :  1;

endtable
endprimitive


primitive oai211_udp_1( Y, A, B, C, D );
output Y;            
input A, B, C, D;

// OR-AND-INVERT 2 1 1

table
  //    A    B    C    D  :  Y

        0    0    ?    ?  :  1;
        ?    ?    0    ?  :  1;
        ?    ?    ?    0  :  1;
        1    ?    1    1  :  0;
        ?    1    1    1  :  0;

endtable
endprimitive


primitive oai22_udp_1( Y, A, B, C, D );
output Y;             
input A, B, C, D;

// OR-AND-INVERT 2 2

table
  //    A    B    C    D  :  Y

        0    0    ?    ?  :  1;
        ?    ?    0    0  :  1;
        1    ?    1    ?  :  0;
        ?    1    ?    1  :  0;
        1    ?    ?    1  :  0;
        ?    1    1    ?  :  0;

endtable
endprimitive


primitive oai31_udp_1( Y, A, B, C, D );
output Y;
input A, B, C, D;

// OR-AND-INVERT 3 1

table
  //    A    B    C    D  :  Y

        0    0    0    ?  :  1;
        ?    ?    ?    0  :  1;
        1    ?    ?    1  :  0;
        ?    1    ?    1  :  0;
        ?    ?    1    1  :  0;

endtable
endprimitive

primitive oai33_udp_1( Y, A, B, C, D, E, F );
output Y;
input A, B, C, D, E, F;

// OR-AND-INVERT 3 3

table
  //    A    B    C    D    E    F :  Y

        0    0    0    ?    ?    ? :  1;
        ?    ?    ?    0    0    0 :  1;
        1    ?    ?    1    ?    ? :  0;
        1    ?    ?    ?    1    ? :  0;
        1    ?    ?    ?    ?    1 :  0;
        ?    1    ?    1    ?    ? :  0;
        ?    1    ?    ?    1    ? :  0;
        ?    1    ?    ?    ?    1 :  0;
        ?    ?    1    1    ?    ? :  0;
        ?    ?    1    ?    1    ? :  0;
        ?    ?    1    ?    ?    1 :  0;

endtable
endprimitive

// Added by Tim Hunkler
primitive oai333_udp_1( Y, A, B, C, D, E, F, G, H, I );
output Y;
input A, B, C, D, E, F, G, H, I;

// OR-AND-INVERT 3 3 3

table
// A   B   C   D   E   F   G   H   I  :    Y
// ------------------------------------------
   ?   ?   ?   ?   ?   ?   0   0   0  :    1;
   ?   ?   ?   0   0   0   ?   ?   ?  :    1;
   0   0   0   ?   ?   ?   ?   ?   ?  :    1;
   ?   ?   1   ?   ?   1   ?   ?   1  :    0;
   ?   ?   1   ?   ?   1   ?   1   ?  :    0;
   ?   ?   1   ?   ?   1   1   ?   ?  :    0;
   ?   ?   1   ?   1   ?   ?   ?   1  :    0;
   ?   ?   1   ?   1   ?   ?   1   ?  :    0;
   ?   ?   1   ?   1   ?   1   ?   ?  :    0;
   ?   ?   1   1   ?   ?   ?   ?   1  :    0;
   ?   ?   1   1   ?   ?   ?   1   ?  :    0;
   ?   ?   1   1   ?   ?   1   ?   ?  :    0;
   ?   1   ?   ?   ?   1   ?   ?   1  :    0;
   ?   1   ?   ?   ?   1   ?   1   ?  :    0;
   ?   1   ?   ?   ?   1   1   ?   ?  :    0;
   ?   1   ?   ?   1   ?   ?   ?   1  :    0;
   ?   1   ?   ?   1   ?   ?   1   ?  :    0;
   ?   1   ?   ?   1   ?   1   ?   ?  :    0;
   ?   1   ?   1   ?   ?   ?   ?   1  :    0;
   ?   1   ?   1   ?   ?   ?   1   ?  :    0;
   ?   1   ?   1   ?   ?   1   ?   ?  :    0;
   1   ?   ?   ?   ?   1   ?   ?   1  :    0;
   1   ?   ?   ?   ?   1   ?   1   ?  :    0;
   1   ?   ?   ?   ?   1   1   ?   ?  :    0;
   1   ?   ?   ?   1   ?   ?   ?   1  :    0;
   1   ?   ?   ?   1   ?   ?   1   ?  :    0;
   1   ?   ?   ?   1   ?   1   ?   ?  :    0;
   1   ?   ?   1   ?   ?   ?   ?   1  :    0;
   1   ?   ?   1   ?   ?   ?   1   ?  :    0;
   1   ?   ?   1   ?   ?   1   ?   ?  :    0;
endtable
endprimitive


primitive mux2_udp_1( Q, A, B, SL );
output Q;
input A, B, SL;
// Two to one mux.
// Set output to unknown for unknown on SL(select) input.
table
  //    A    B   SL :  Q

        0    0    ? :  0;
        1    1    ? :  1;

        0    ?    0 :  0;
        1    ?    0 :  1;

        ?    0    1 :  0;
        ?    1    1 :  1;

endtable               
endprimitive
 
primitive scaninp_udp_1( Q, D, SDI, SE );
output Q;
input D, SDI, SE;


table
  //    A    B   SL :  Q

        0    0    ? :  0;
        1    1    ? :  1;

        0    ?    0 :  0;
        1    ?    0 :  1;

        ?    0    1 :  0;
        ?    1    1 :  1;

endtable 
endprimitive
           

primitive p_lat_rs( Q, D, CK, RB, SB);
output Q;	reg Q;
input D, CK, RB, SB;

// This P_LAT_RS primitive is used for the first latch stage of
// all D flip flops.
                                                                           
table
  //   Q_int  CK    RB    SB      :  Qt  : Qt+1                                  
                                                                                         
// clock transitions

        0    (?0)    ?     1      :   ?  :    0; // data avail. on
        1    (?0)    ?     ?      :   ?  :    1; // latch o/p                                

        0    (1x)    ?     1      :   0  :    -; // unknown clock
        1    (1x)    1     ?      :   1  :    -;
        ?    (0x)    1     ?      :   ?  :    -; // as long as reset is off o/p will
        0    (0x)    ?     1      :   0  :    -; // not change, but no set & possible reset,
                                                 // only q=data=0 can be guaranteed to
                                                 // not change o/p
        ?    (?1)    1     ?      :   ?  :    -; // data latched
        ?    (?1)    ?     0      :   1  :    -; // set dominates
        ?    (?1)    0     1      :   ?  :    0; // reset comes thru tgate2
        ?    (?1)    x     1      :   0  :    -; // possible reset

        ?     *      ?     0      :   1  :    -; // clock changes in set mode doesn't
                                                 // change output
// reset transitions

        ?     1    (?0)    1      :   ?  :    0; // reset when set is off and tgate2 is on
        ?     0    (?0)    1      :   ?  :    -; // tgate2 off
        0     x    (?0)    1      :   ?  :    0; // d=0 and rb=0, therefore it does not matter
                                                 // which tgate is on

        ?     1    (?x)    1      :   0  :    -; // reset going x is ignored if tgate2 on
        ?     0    (?x)    ?      :   ?  :    -; // if tgate2 off, reset doesn't change o/p
        0     ?    (?x)    1      :   0  :    -; // data=qprev=0,gate doesn't matter
        ?     ?    (?x)    0      :   1  :    -; // set dominates

        ?     ?    (?1)    ?      :   ?  :    -; // reset going 1 doesn't matter
	
        ?     ?     *      0      :   1  :    1; // set dominates

// set transitions

        ?     ?     ?    (?0)     :   ?  :    1; // falling edge on set results
	   		                         // in set. Set dominates

        ?     1     1    (?x)     :   1  :    -; // set transition to x is ignored
        1     ?     1    (?x)     :   1  :    -; // if already in set state and reset is off
                                                 
        1     0     ?    (?x)     :   ?  :    1; // set goes x but transparent mode

        ?     1     1    (?1)     :   ?  :    -; // set going 1 doesn't matter if tgate1 off
        1     ?     1    (?1)     :   1  :    -; // reset off d=qprev=1
        ?     1     0    (?1)     :   ?  :    0; // tgate2 on, reset regains effect
	   		          	       
        1     0     ?    (?1)     :   ?  :    1; // transparent mode when set disabled
                                                 // note that reset doesn't matter since
                                                 // tgate2 is off
        0     0     ?    (?1)     :   ?  :    0; // transparent mode when set disabled
                                                 // note that reset doesn't matter since 
                                                 // tgate2 is off

        0     ?     0    (?1)     :   ?  :    0; // d=0,rb=0, ck doesn't matter because
                                                 // latch either in transparent or reset mode

// Data transitions

       (?0)   x     1      1      :   0  :    -; // data changing to state same as 
       (?0)   x     x      1      :   0  :    -; // prev state clock doesn't matter
       (?0)   x     0      1      :   ?  :    0; // d=0, rb=0, ck doesn't matter because
                                                 // latch either in transparent or reset mode

       (?1)   x     1      1      :   1  :    -; // data=qprev clock and set
       (?1)   x     1      x      :   1  :    -; // don't matter

        *     1     ?      ?      :   ?  :    -; // data changes in latched mode

        *     ?     ?      0      :   1  :    -; // data changes in set mode
	
       (?0)   0     ?      1      :   ?  :    0; // data changes in transp. mode
       (?1)   0     ?      ?      :   ?  :    1;


endtable
endprimitive

primitive n_lat_rs( Q, D, CK, RB, SB, notify_reg);
output Q;	reg Q;
input D, CK, RB, SB, notify_reg;

// this N_LAT_RS udp is used for the second stage of all
// D flip flops, as well as for all "LATP" and "LATN" type
// single latch implementations.

                                                                           
table
  //   Q_int  CK    RB    SB      n_r   :  Qt  : Qt+1                                  
                                                                                         
// clock transitions

        0    (?1)    ?     ?      ?     :   ?  :    0; // data avail. on latch o/p
                                                       // note that set doesn't matter since
                                                       // tgate2 is off
        1    (?1)    1     ?      ?     :   ?  :    1; //                  

        0    (0x)    ?     1      ?     :   0  :    -; // unknown clock
        1    (0x)    1     ?      ?     :   1  :    -;
        ?    (1x)    ?     1      ?     :   ?  :    -; // as long as set is off o/p will
        1    (1x)    1     ?      ?     :   1  :    -; // not change, but no reset & possible set,
                                                       // only q=data=1 can be guaranteed to
                                                       // not change o/p

        ?    (?0)    ?     1      ?     :   ?  :    -; // data latched
        ?    (?0)    0     ?      ?     :   0  :    -; // reset dominates
        ?    (?0)    1     0      ?     :   ?  :    1; // set comes thru tgate2
        ?    (?0)    1     x      ?     :   1  :    -; // possible set

        ?     *      0     ?      ?     :   0  :    -; // clk change in reset mode doesn't
                                                       // output
// set transitions

        ?     0      1    (?0)    ?     :   ?  :    1; // set when reset is off and tgate2 is on
        ?     1      ?    (?0)    ?     :   ?  :    -; // tgate2 off, set has no effect
        1     x      1    (?0)    ?     :   ?  :    1; // d=1 when set occurs. clock doesn't matter

        ?     0      1    (?x)    ?     :   1  :    -; // set going x is ignored if tgate2 on
        ?     1      ?    (?x)    ?     :   ?  :    -; // if tgate2 off, set doesn't change o/p
        1     ?      1    (?x)    ?     :   1  :    -; // data=qprev=1,gate doesn't matter
        ?     ?      0    (?x)    ?     :   0  :    -; // reset dominates

        ?     ?      ?    (?1)    ?     :   ?  :    -; // set going 1 doesn't matter
	
        ?     ?      0     *      ?     :   0  :    -; // reset dominates

// reset transitions

        ?     ?    (?0)    ?      ?     :   ?  :    0; // falling edge on reset results
	   		                               // in reset. Reset dominates

        ?     0    (?x)    1      ?     :   0  :    -; // reset transition to x is ignored
        0     1    (?x)    ?      ?     :   0  :    -; // transparent mode, set does not matter
        0     x    (?x)    1      ?     :   0  :    -; // transparent or latched mode                                                 
        ?     0    (?1)    1      ?     :   ?  :    -; // reset going 1 doesn't matter if tgate1 off

        0     1    (?1)    ?      ?     :   0  :    -; // transparent mode, set does not matter
        0     x    (?1)    1      ?     :   0  :    -; // either transparent mode or latched mode
 
        ?     0    (?1)    0      ?     :   ?  :    1; // tgate2 on, set regains effect
	   		          	       
        1     1    (?1)    ?      ?     :   ?  :    1; // transparent mode when reset disabled
                                                       // note that set doesn't matter since
                                                       // tgate2 is off
        1     ?    (?1)    0      ?     :   ?  :    1; // transparent if ck=1, else no change from
                                                       // set because reset inactive. 

// Data transitions

       (?0)   x     1      1      ?     :   0  :    -; // data changing to state same as 
       (?1)   x     1      1      ?     :   1  :    -; // prev state does not matter even
                                                       // if clock is unknown.
        *     0     ?      ?      ?     :   ?  :    -; // data changes in latched mode

        *     ?     0      ?      ?     :   0  :    -; // data changes in reset mode
       (?1)   1     1      0      ?     :   ?  :    1; // data change caused by active set. Needed for ck=1 or x
       (?1)   x     1      0      ?     :   ?  :    1;
	
       (?0)   1     ?      ?      ?     :   ?  :    0; // data changes in transp. mode
       (?1)   1     1      ?      ?     :   ?  :    1;

// notify_reg transitions

        ?     ?     ?      ?      *     :   ?  :    x; 
endtable
endprimitive

primitive l1lssd_lat (Q, D, SCK, SDI, ACK, notify_reg);
output Q; reg Q;
input D, SCK, SDI, ACK, notify_reg;

table

/*
D      SCK     SDI     ACK     n_r             Qprev            Q
*/
                                                                                   
(?1)	1	?	0	?	:	?	:	1;	// System clocked data.     	

1	(?1)	?	0	?	:	?	:	1;	// System clocked data.     	

1	1	*	0	?	:	?	:	1;	// System clocked data.     	

1	1	?	(?0)	?	:	?	:	1;	// System clocked data.     	

(?0)	1	?	0	?	:	?	:	0;	        	

0	(?1)	?	0	?	:	?	:	0;	        	

0	1	*	0	?	:	?	:	0;	        	

0	1	?	(?0)	?	:	?	:	0;	        	

                                                                                   
*	0	1	1	?	:	?	:	1;	// Shift clocked data.     	

?	(?0)	1	1	?	:	?	:	1;	// Shift clocked data.     	

?	0	(?1)	1	?	:	?	:	1;	// Shift clocked data.     	

?	0	1	(?1)	?	:	?	:	1;	// Shift clocked data.     	

*	0	0	1	?	:	?	:	0;	        	

?	(?0)	0	1	?	:	?	:	0;	        	

?	0	(?0)	1	?	:	?	:	0;	        	

?	0	0	(?1)	?	:	?	:	0;	        	

                                                                                   
(?1)	x	?	0	?	:	1	:	1;	// possible system clock enabled.    	

1	(?x)	?	0	?	:	1	:	1;	// possible system clock enabled.    	

1	x	*	0	?	:	1	:	1;	// possible system clock enabled.    	

1	x	?	(?0)	?	:	1	:	1;	// possible system clock enabled.    	

(?0)	x	?	0	?	:	0	:	0;	        	

0	(?x)	?	0	?	:	0	:	0;	        	

0	x	*	0	?	:	0	:	0;	        	

0	x	?	(?0)	?	:	0	:	0;	        	

                                                                                   
*	0	1	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	(?0)	1	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	0	(?1)	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	0	1	(?x)	?	:	1	:	1;	// possible shift clock enabled.    	

*	0	0	x	?	:	0	:	0;	        	

?	(?0)	0	x	?	:	0	:	0;	        	

?	0	(?0)	x	?	:	0	:	0;	        	

?	0	0	(?x)	?	:	0	:	0;	        	

                                                                                   
(?1)	x	1	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	(?x)	1	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	x	(?1)	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	x	1	(?x)	?	:	1	:	1;	// possible both clocks enabled.    	

(?0)	x	0	x	?	:	0	:	0;	        	

0	(?x)	0	x	?	:	0	:	0;	        	

0	x	(?0)	x	?	:	0	:	0;	        	

0	x	0	(?x)	?	:	0	:	0;	        	

                                                                                   
                                                                                   
*	0	?	0	?	:	?	:	-;	// both clocks off.     	

?	(?0)	?	0	?	:	?	:	-;	// both clocks off.     	

?	0	*	0	?	:	?	:	-;	// both clocks off.     	

?	0	?	(?0)	?	:	?	:	-;	// both clocks off.     	

                                                                                   
(?1)	1	?	?	?	:	?	:	1;	// GDA added. If Both clocks are active, 	

1	(?1)	?	?	?	:	?	:	1;	// GDA added. If Both clocks are active, 	

1	1	*	?	?	:	?	:	1;	// GDA added. If Both clocks are active, 	

1	1	?	*	?	:	?	:	1;	// GDA added. If Both clocks are active, 	

*	?	1	1	?	:	?	:	1;	// GDA added      	

?	*	1	1	?	:	?	:	1;	// GDA added      	

?	?	(?1)	1	?	:	?	:	1;	// GDA added      	

?	?	1	(?1)	?	:	?	:	1;	// GDA added      	

                                                                                   
(?0)	1	0	1	?	:	?	:	0;	// GDA added      	

0	(?1)	0	1	?	:	?	:	0;	// GDA added      	

0	1	(?0)	1	?	:	?	:	0;	// GDA added      	

0	1	0	(?1)	?	:	?	:	0;	// GDA added      	

?	?	?	?	*	:	?	:	x;

endtable
endprimitive


primitive lssd1a_lat  (Q, D, SCK, SDI, ACK, notify_reg);

output Q;
input D, SCK, SDI, ACK, notify_reg;

reg Q;

table
/*
D   	SCK   	SDI   	ACK  	n_r	:  	Qt  	:  	Qt+1
*/


(?1)	1	?	0	?	:	?	:	1;	// System clocked data.     	

1	(?1)	?	0	?	:	?	:	1;	// System clocked data.     	

1	1	*	0	?	:	?	:	1;	// System clocked data.     	

1	1	?	(?0)	?	:	?	:	1;	// System clocked data.     	

(?0)	1	?	0	?	:	?	:	0;	        	

0	(?1)	?	0	?	:	?	:	0;	        	

0	1	*	0	?	:	?	:	0;	        	

0	1	?	(?0)	?	:	?	:	0;	        	


*	0	1	1	?	:	?	:	1;	// Shift clocked data.     	

?	(?0)	1	1	?	:	?	:	1;	// Shift clocked data.     	

?	0	(?1)	1	?	:	?	:	1;	// Shift clocked data.     	

?	0	1	(?1)	?	:	?	:	1;	// Shift clocked data.     	

*	0	0	1	?	:	?	:	0;	        	

?	(?0)	0	1	?	:	?	:	0;	        	

?	0	(?0)	1	?	:	?	:	0;	        	

?	0	0	(?1)	?	:	?	:	0;	        	


(?1)	x	?	0	?	:	1	:	1;	// possible system clock enabled.    	

1	(?x)	?	0	?	:	1	:	1;	// possible system clock enabled.    	

1	x	*	0	?	:	1	:	1;	// possible system clock enabled.    	

1	x	?	(?0)	?	:	1	:	1;	// possible system clock enabled.    	

(?0)	x	?	0	?	:	0	:	0;	        	

0	(?x)	?	0	?	:	0	:	0;	        	

0	x	*	0	?	:	0	:	0;	        	

0	x	?	(?0)	?	:	0	:	0;	        	


*	0	1	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	(?0)	1	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	0	(?1)	x	?	:	1	:	1;	// possible shift clock enabled.    	

?	0	1	(?x)	?	:	1	:	1;	// possible shift clock enabled.    	

*	0	0	x	?	:	0	:	0;	        	

?	(?0)	0	x	?	:	0	:	0;	        	

?	0	(?0)	x	?	:	0	:	0;	        	

?	0	0	(?x)	?	:	0	:	0;	        	


(?1)	x	1	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	(?x)	1	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	x	(?1)	x	?	:	1	:	1;	// possible both clocks enabled.    	

1	x	1	(?x)	?	:	1	:	1;	// possible both clocks enabled.    	

(?0)	x	0	x	?	:	0	:	0;	        	

0	(?x)	0	x	?	:	0	:	0;	        	

0	x	(?0)	x	?	:	0	:	0;	        	

0	x	0	(?x)	?	:	0	:	0;	        	


*	0	?	0	?	:	?	:	-;	// both clocks off.     	

?	(?0)	?	0	?	:	?	:	-;	// both clocks off.     	

?	0	*	0	?	:	?	:	-;	// both clocks off.     	

?	0	?	(?0)	?	:	?	:	-;	// both clocks off.     	


(?1)	1	?	1	?	:	?	:	1;	// ISS: SCLK DOMINATES ACLK    	

1	(?1)	?	1	?	:	?	:	1;	// ISS: SCLK DOMINATES ACLK    	

1	1	*	1	?	:	?	:	1;	// ISS: SCLK DOMINATES ACLK    	

1	1	?	(?1)	?	:	?	:	1;	// ISS: SCLK DOMINATES ACLK    	

(?0)	1	?	1	?	:	?	:	0;	//        	

0	(?1)	?	1	?	:	?	:	0;	//        	

0	1	*	1	?	:	?	:	0;	//        	

0	1	?	(?1)	?	:	?	:	0;	//        	


(?1)	1	?	x	?	:	?	:	1;	// ISS: added 11/8/89     	

1	(?1)	?	x	?	:	?	:	1;	// ISS: added 11/8/89     	

1	1	*	x	?	:	?	:	1;	// ISS: added 11/8/89     	

1	1	?	(?x)	?	:	?	:	1;	// ISS: added 11/8/89     	

(?0)	1	?	x	?	:	?	:	0;	        	

0	(?1)	?	x	?	:	?	:	0;	        	

0	1	*	x	?	:	?	:	0;	        	

0	1	?	(?x)	?	:	?	:	0;	        	


(?0)	x	0	1	?	:	?	:	0;	// [6]       	

0	(?x)	0	1	?	:	?	:	0;	// [6]       	

0	x	(?0)	1	?	:	?	:	0;	// [6]       	

0	x	0	(?1)	?	:	?	:	0;	// [6]       	

(?1)	x	1	1	?	:	?	:	1;	        	

1	(?x)	1	1	?	:	?	:	1;	        	

1	x	(?1)	1	?	:	?	:	1;	        	

1	x	1	(?1)	?	:	?	:	1;	        	


          
?	?	?	?	*	:	?	:	x;

endtable
endprimitive
primitive lssd2_lat (Q, D1, SCLK1, D2, SCLK2, SDI, ACK, NR);

output Q;
input D1, SCLK1, D2, SCLK2, SDI, ACK, NR;
reg Q;

table
/*
D1  	SCLK1  	D2  	SCLK2  	SDI  	ACK  	NR	:  	Qt  	: Qt+1
*/

(?1)	1	?	0	?	0	?	:	?	: 1; // System(1) clocked data.   	

1	(?1)	?	0	?	0	?	:	?	: 1; // System(1) clocked data.   	

1	1	*	0	?	0	?	:	?	: 1; // System(1) clocked data.   	

1	1	?	(?0)	?	0	?	:	?	: 1; // System(1) clocked data.   	

1	1	?	0	*	0	?	:	?	: 1; // System(1) clocked data.   	

1	1	?	0	?	(?0)	?	:	?	: 1; // System(1) clocked data.   	

(?0)	1	?	0	?	0	?	:	?	: 0;       	

0	(?1)	?	0	?	0	?	:	?	: 0;       	

0	1	*	0	?	0	?	:	?	: 0;       	

0	1	?	(?0)	?	0	?	:	?	: 0;       	

0	1	?	0	*	0	?	:	?	: 0;       	

0	1	?	0	?	(?0)	?	:	?	: 0;       	


*	0	1	1	?	0	?	:	?	: 1; // System(2) clocked data.   	

?	(?0)	1	1	?	0	?	:	?	: 1; // System(2) clocked data.   	

?	0	(?1)	1	?	0	?	:	?	: 1; // System(2) clocked data.   	

?	0	1	(?1)	?	0	?	:	?	: 1; // System(2) clocked data.   	

?	0	1	1	*	0	?	:	?	: 1; // System(2) clocked data.   	

?	0	1	1	?	(?0)	?	:	?	: 1; // System(2) clocked data.   	

*	0	0	1	?	0	?	:	?	: 0;       	

?	(?0)	0	1	?	0	?	:	?	: 0;       	

?	0	(?0)	1	?	0	?	:	?	: 0;       	

?	0	0	(?1)	?	0	?	:	?	: 0;       	

?	0	0	1	*	0	?	:	?	: 0;       	

?	0	0	1	?	(?0)	?	:	?	: 0;       	


*	0	?	0	1	1	?	:	?	: 1; // Shift clocked data.   	

?	(?0)	?	0	1	1	?	:	?	: 1; // Shift clocked data.   	

?	0	*	0	1	1	?	:	?	: 1; // Shift clocked data.   	

?	0	?	(?0)	1	1	?	:	?	: 1; // Shift clocked data.   	

?	0	?	0	(?1)	1	?	:	?	: 1; // Shift clocked data.   	

?	0	?	0	1	(?1)	?	:	?	: 1; // Shift clocked data.   	

*	0	?	0	0	1	?	:	?	: 0;       	

?	(?0)	?	0	0	1	?	:	?	: 0;       	

?	0	*	0	0	1	?	:	?	: 0;       	

?	0	?	(?0)	0	1	?	:	?	: 0;       	

?	0	?	0	(?0)	1	?	:	?	: 0;       	

?	0	?	0	0	(?1)	?	:	?	: 0;       	



(?1)	x	?	0	?	0	?	:	1	: 1; // possible system(1) clock   	

1	(?x)	?	0	?	0	?	:	1	: 1; // possible system(1) clock   	

1	x	*	0	?	0	?	:	1	: 1; // possible system(1) clock   	

1	x	?	(?0)	?	0	?	:	1	: 1; // possible system(1) clock   	

1	x	?	0	*	0	?	:	1	: 1; // possible system(1) clock   	

1	x	?	0	?	(?0)	?	:	1	: 1; // possible system(1) clock   	

(?0)	x	?	0	?	0	?	:	0	: 0;       	

0	(?x)	?	0	?	0	?	:	0	: 0;       	

0	x	*	0	?	0	?	:	0	: 0;       	

0	x	?	(?0)	?	0	?	:	0	: 0;       	

0	x	?	0	*	0	?	:	0	: 0;       	

0	x	?	0	?	(?0)	?	:	0	: 0;       	


*	0	1	x	?	0	?	:	1	: 1; // possible system(2) clock   	

?	(?0)	1	x	?	0	?	:	1	: 1; // possible system(2) clock   	

?	0	(?1)	x	?	0	?	:	1	: 1; // possible system(2) clock   	

?	0	1	(?x)	?	0	?	:	1	: 1; // possible system(2) clock   	

?	0	1	x	*	0	?	:	1	: 1; // possible system(2) clock   	

?	0	1	x	?	(?0)	?	:	1	: 1; // possible system(2) clock   	

*	0	0	x	?	0	?	:	0	: 0;       	

?	(?0)	0	x	?	0	?	:	0	: 0;       	

?	0	(?0)	x	?	0	?	:	0	: 0;       	

?	0	0	(?x)	?	0	?	:	0	: 0;       	

?	0	0	x	*	0	?	:	0	: 0;       	

?	0	0	x	?	(?0)	?	:	0	: 0;       	


*	0	?	0	1	x	?	:	1	: 1; // possible shift clock   	

?	(?0)	?	0	1	x	?	:	1	: 1; // possible shift clock   	

?	0	*	0	1	x	?	:	1	: 1; // possible shift clock   	

?	0	?	(?0)	1	x	?	:	1	: 1; // possible shift clock   	

?	0	?	0	(?1)	x	?	:	1	: 1; // possible shift clock   	

?	0	?	0	1	(?x)	?	:	1	: 1; // possible shift clock   	

*	0	?	0	0	x	?	:	0	: 0; // enabled     	

?	(?0)	?	0	0	x	?	:	0	: 0; // enabled     	

?	0	*	0	0	x	?	:	0	: 0; // enabled     	

?	0	?	(?0)	0	x	?	:	0	: 0; // enabled     	

?	0	?	0	(?0)	x	?	:	0	: 0; // enabled     	

?	0	?	0	0	(?x)	?	:	0	: 0; // enabled     	


(?1)	x	1	x	?	0	?	:	1	: 1; // possible SCLK1 and SCLK2  	

1	(?x)	1	x	?	0	?	:	1	: 1; // possible SCLK1 and SCLK2  	

1	x	(?1)	x	?	0	?	:	1	: 1; // possible SCLK1 and SCLK2  	

1	x	1	(?x)	?	0	?	:	1	: 1; // possible SCLK1 and SCLK2  	

1	x	1	x	*	0	?	:	1	: 1; // possible SCLK1 and SCLK2  	

1	x	1	x	?	(?0)	?	:	1	: 1; // possible SCLK1 and SCLK2  	

(?0)	x	0	x	?	0	?	:	0	: 0; // enabled     	

0	(?x)	0	x	?	0	?	:	0	: 0; // enabled     	

0	x	(?0)	x	?	0	?	:	0	: 0; // enabled     	

0	x	0	(?x)	?	0	?	:	0	: 0; // enabled     	

0	x	0	x	*	0	?	:	0	: 0; // enabled     	

0	x	0	x	?	(?0)	?	:	0	: 0; // enabled     	


(?1)	1	1	1	?	0	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

1	(?1)	1	1	?	0	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

1	1	(?1)	1	?	0	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

1	1	1	(?1)	?	0	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

1	1	1	1	*	0	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

1	1	1	1	?	(?0)	?	:	?	: 1; // SCLK1 and SCLK2 enabled.  	

(?0)	1	0	1	?	0	?	:	?	: 0;       	

0	(?1)	0	1	?	0	?	:	?	: 0;       	

0	1	(?0)	1	?	0	?	:	?	: 0;       	

0	1	0	(?1)	?	0	?	:	?	: 0;       	

0	1	0	1	*	0	?	:	?	: 0;       	

0	1	0	1	?	(?0)	?	:	?	: 0;       	


*	0	0	1	0	1	?	:	?	: 0; // [6]     	

?	(?0)	0	1	0	1	?	:	?	: 0; // [6]     	

?	0	(?0)	1	0	1	?	:	?	: 0; // [6]     	

?	0	0	(?1)	0	1	?	:	?	: 0; // [6]     	

?	0	0	1	(?0)	1	?	:	?	: 0; // [6]     	

?	0	0	1	0	(?1)	?	:	?	: 0; // [6]     	

*	0	1	1	1	1	?	:	?	: 1;       	

?	(?0)	1	1	1	1	?	:	?	: 1;       	

?	0	(?1)	1	1	1	?	:	?	: 1;       	

?	0	1	(?1)	1	1	?	:	?	: 1;       	

?	0	1	1	(?1)	1	?	:	?	: 1;       	

?	0	1	1	1	(?1)	?	:	?	: 1;       	


*	0	0	x	0	1	?	:	?	: 0; // [7]     	

?	(?0)	0	x	0	1	?	:	?	: 0; // [7]     	

?	0	(?0)	x	0	1	?	:	?	: 0; // [7]     	

?	0	0	(?x)	0	1	?	:	?	: 0; // [7]     	

?	0	0	x	(?0)	1	?	:	?	: 0; // [7]     	

?	0	0	x	0	(?1)	?	:	?	: 0; // [7]     	

*	0	1	x	1	1	?	:	?	: 1;       	

?	(?0)	1	x	1	1	?	:	?	: 1;       	

?	0	(?1)	x	1	1	?	:	?	: 1;       	

?	0	1	(?x)	1	1	?	:	?	: 1;       	

?	0	1	x	(?1)	1	?	:	?	: 1;       	

?	0	1	x	1	(?1)	?	:	?	: 1;       	


*	0	0	1	0	x	?	:	?	: 0; // [9]     	

?	(?0)	0	1	0	x	?	:	?	: 0; // [9]     	

?	0	(?0)	1	0	x	?	:	?	: 0; // [9]     	

?	0	0	(?1)	0	x	?	:	?	: 0; // [9]     	

?	0	0	1	(?0)	x	?	:	?	: 0; // [9]     	

?	0	0	1	0	(?x)	?	:	?	: 0; // [9]     	

*	0	1	1	1	x	?	:	?	: 1;       	

?	(?0)	1	1	1	x	?	:	?	: 1;       	

?	0	(?1)	1	1	x	?	:	?	: 1;       	

?	0	1	(?1)	1	x	?	:	?	: 1;       	

?	0	1	1	(?1)	x	?	:	?	: 1;       	

?	0	1	1	1	(?x)	?	:	?	: 1;       	


*	0	0	x	0	x	?	:	0	: -; // [10]     	

?	(?0)	0	x	0	x	?	:	0	: -; // [10]     	

?	0	(?0)	x	0	x	?	:	0	: -; // [10]     	

?	0	0	(?x)	0	x	?	:	0	: -; // [10]     	

?	0	0	x	(?0)	x	?	:	0	: -; // [10]     	

?	0	0	x	0	(?x)	?	:	0	: -; // [10]     	

*	0	1	x	1	x	?	:	1	: -;       	

?	(?0)	1	x	1	x	?	:	1	: -;       	

?	0	(?1)	x	1	x	?	:	1	: -;       	

?	0	1	(?x)	1	x	?	:	1	: -;       	

?	0	1	x	(?1)	x	?	:	1	: -;       	

?	0	1	x	1	(?x)	?	:	1	: -;       	


(?0)	1	0	x	?	0	?	:	?	: 0; // [13]     	

0	(?1)	0	x	?	0	?	:	?	: 0; // [13]     	

0	1	(?0)	x	?	0	?	:	?	: 0; // [13]     	

0	1	0	(?x)	?	0	?	:	?	: 0; // [13]     	

0	1	0	x	*	0	?	:	?	: 0; // [13]     	

0	1	0	x	?	(?0)	?	:	?	: 0; // [13]     	

(?1)	1	1	x	?	0	?	:	?	: 1;       	

1	(?1)	1	x	?	0	?	:	?	: 1;       	

1	1	(?1)	x	?	0	?	:	?	: 1;       	

1	1	1	(?x)	?	0	?	:	?	: 1;       	

1	1	1	x	*	0	?	:	?	: 1;       	

1	1	1	x	?	(?0)	?	:	?	: 1;       	


(?0)	1	?	0	0	1	?	:	?	: 0; // [14]     	

0	(?1)	?	0	0	1	?	:	?	: 0; // [14]     	

0	1	*	0	0	1	?	:	?	: 0; // [14]     	

0	1	?	(?0)	0	1	?	:	?	: 0; // [14]     	

0	1	?	0	(?0)	1	?	:	?	: 0; // [14]     	

0	1	?	0	0	(?1)	?	:	?	: 0; // [14]     	

(?1)	1	?	0	1	1	?	:	?	: 1;       	

1	(?1)	?	0	1	1	?	:	?	: 1;       	

1	1	*	0	1	1	?	:	?	: 1;       	

1	1	?	(?0)	1	1	?	:	?	: 1;       	

1	1	?	0	(?1)	1	?	:	?	: 1;       	

1	1	?	0	1	(?1)	?	:	?	: 1;       	


(?0)	1	0	1	0	1	?	:	?	: 0; // [15]     	

0	(?1)	0	1	0	1	?	:	?	: 0; // [15]     	

0	1	(?0)	1	0	1	?	:	?	: 0; // [15]     	

0	1	0	(?1)	0	1	?	:	?	: 0; // [15]     	

0	1	0	1	(?0)	1	?	:	?	: 0; // [15]     	

0	1	0	1	0	(?1)	?	:	?	: 0; // [15]     	

(?1)	1	1	1	1	1	?	:	?	: 1;       	

1	(?1)	1	1	1	1	?	:	?	: 1;       	

1	1	(?1)	1	1	1	?	:	?	: 1;       	

1	1	1	(?1)	1	1	?	:	?	: 1;       	

1	1	1	1	(?1)	1	?	:	?	: 1;       	

1	1	1	1	1	(?1)	?	:	?	: 1;       	


(?0)	1	0	x	0	1	?	:	?	: 0; // [16]     	

0	(?1)	0	x	0	1	?	:	?	: 0; // [16]     	

0	1	(?0)	x	0	1	?	:	?	: 0; // [16]     	

0	1	0	(?x)	0	1	?	:	?	: 0; // [16]     	

0	1	0	x	(?0)	1	?	:	?	: 0; // [16]     	

0	1	0	x	0	(?1)	?	:	?	: 0; // [16]     	

(?1)	1	1	x	1	1	?	:	?	: 1;       	

1	(?1)	1	x	1	1	?	:	?	: 1;       	

1	1	(?1)	x	1	1	?	:	?	: 1;       	

1	1	1	(?x)	1	1	?	:	?	: 1;       	

1	1	1	x	(?1)	1	?	:	?	: 1;       	

1	1	1	x	1	(?1)	?	:	?	: 1;       	


(?0)	1	?	0	0	x	?	:	?	: 0; // [17]     	

0	(?1)	?	0	0	x	?	:	?	: 0; // [17]     	

0	1	*	0	0	x	?	:	?	: 0; // [17]     	

0	1	?	(?0)	0	x	?	:	?	: 0; // [17]     	

0	1	?	0	(?0)	x	?	:	?	: 0; // [17]     	

0	1	?	0	0	(?x)	?	:	?	: 0; // [17]     	

(?1)	1	?	0	1	x	?	:	?	: 1;       	

1	(?1)	?	0	1	x	?	:	?	: 1;       	

1	1	*	0	1	x	?	:	?	: 1;       	

1	1	?	(?0)	1	x	?	:	?	: 1;       	

1	1	?	0	(?1)	x	?	:	?	: 1;       	

1	1	?	0	1	(?x)	?	:	?	: 1;       	


(?0)	1	0	1	0	x	?	:	?	: 0; // [18]     	

0	(?1)	0	1	0	x	?	:	?	: 0; // [18]     	

0	1	(?0)	1	0	x	?	:	?	: 0; // [18]     	

0	1	0	(?1)	0	x	?	:	?	: 0; // [18]     	

0	1	0	1	(?0)	x	?	:	?	: 0; // [18]     	

0	1	0	1	0	(?x)	?	:	?	: 0; // [18]     	

(?1)	1	1	1	1	x	?	:	?	: 1;       	

1	(?1)	1	1	1	x	?	:	?	: 1;       	

1	1	(?1)	1	1	x	?	:	?	: 1;       	

1	1	1	(?1)	1	x	?	:	?	: 1;       	

1	1	1	1	(?1)	x	?	:	?	: 1;       	

1	1	1	1	1	(?x)	?	:	?	: 1;       	


(?0)	1	0	x	0	x	?	:	?	: 0; // [19]     	

0	(?1)	0	x	0	x	?	:	?	: 0; // [19]     	

0	1	(?0)	x	0	x	?	:	?	: 0; // [19]     	

0	1	0	(?x)	0	x	?	:	?	: 0; // [19]     	

0	1	0	x	(?0)	x	?	:	?	: 0; // [19]     	

0	1	0	x	0	(?x)	?	:	?	: 0; // [19]     	

(?1)	1	1	x	1	x	?	:	?	: 1;       	

1	(?1)	1	x	1	x	?	:	?	: 1;       	

1	1	(?1)	x	1	x	?	:	?	: 1;       	

1	1	1	(?x)	1	x	?	:	?	: 1;       	

1	1	1	x	(?1)	x	?	:	?	: 1;       	

1	1	1	x	1	(?x)	?	:	?	: 1;       	


(?0)	x	0	1	?	0	?	:	?	: 0; // [21]     	

0	(?x)	0	1	?	0	?	:	?	: 0; // [21]     	

0	x	(?0)	1	?	0	?	:	?	: 0; // [21]     	

0	x	0	(?1)	?	0	?	:	?	: 0; // [21]     	

0	x	0	1	*	0	?	:	?	: 0; // [21]     	

0	x	0	1	?	(?0)	?	:	?	: 0; // [21]     	

(?1)	x	1	1	?	0	?	:	?	: 1;       	

1	(?x)	1	1	?	0	?	:	?	: 1;       	

1	x	(?1)	1	?	0	?	:	?	: 1;       	

1	x	1	(?1)	?	0	?	:	?	: 1;       	

1	x	1	1	*	0	?	:	?	: 1;       	

1	x	1	1	?	(?0)	?	:	?	: 1;       	


(?0)	x	?	0	0	1	?	:	?	: 0; // [23]     	

0	(?x)	?	0	0	1	?	:	?	: 0; // [23]     	

0	x	*	0	0	1	?	:	?	: 0; // [23]     	

0	x	?	(?0)	0	1	?	:	?	: 0; // [23]     	

0	x	?	0	(?0)	1	?	:	?	: 0; // [23]     	

0	x	?	0	0	(?1)	?	:	?	: 0; // [23]     	

(?1)	x	?	0	1	1	?	:	?	: 1;       	

1	(?x)	?	0	1	1	?	:	?	: 1;       	

1	x	*	0	1	1	?	:	?	: 1;       	

1	x	?	(?0)	1	1	?	:	?	: 1;       	

1	x	?	0	(?1)	1	?	:	?	: 1;       	

1	x	?	0	1	(?1)	?	:	?	: 1;       	


(?0)	x	0	1	0	1	?	:	?	: 0; // [24]     	

0	(?x)	0	1	0	1	?	:	?	: 0; // [24]     	

0	x	(?0)	1	0	1	?	:	?	: 0; // [24]     	

0	x	0	(?1)	0	1	?	:	?	: 0; // [24]     	

0	x	0	1	(?0)	1	?	:	?	: 0; // [24]     	

0	x	0	1	0	(?1)	?	:	?	: 0; // [24]     	

(?1)	x	1	1	1	1	?	:	?	: 1;       	

1	(?x)	1	1	1	1	?	:	?	: 1;       	

1	x	(?1)	1	1	1	?	:	?	: 1;       	

1	x	1	(?1)	1	1	?	:	?	: 1;       	

1	x	1	1	(?1)	1	?	:	?	: 1;       	

1	x	1	1	1	(?1)	?	:	?	: 1;       	


(?0)	x	0	x	0	1	?	:	?	: 0; // [25]     	

0	(?x)	0	x	0	1	?	:	?	: 0; // [25]     	

0	x	(?0)	x	0	1	?	:	?	: 0; // [25]     	

0	x	0	(?x)	0	1	?	:	?	: 0; // [25]     	

0	x	0	x	(?0)	1	?	:	?	: 0; // [25]     	

0	x	0	x	0	(?1)	?	:	?	: 0; // [25]     	

(?1)	x	1	x	1	1	?	:	?	: 1;       	

1	(?x)	1	x	1	1	?	:	?	: 1;       	

1	x	(?1)	x	1	1	?	:	?	: 1;       	

1	x	1	(?x)	1	1	?	:	?	: 1;       	

1	x	1	x	(?1)	1	?	:	?	: 1;       	

1	x	1	x	1	(?1)	?	:	?	: 1;       	


(?0)	x	?	0	0	x	?	:	0	: -; // [26]     	

0	(?x)	?	0	0	x	?	:	0	: -; // [26]     	

0	x	*	0	0	x	?	:	0	: -; // [26]     	

0	x	?	(?0)	0	x	?	:	0	: -; // [26]     	

0	x	?	0	(?0)	x	?	:	0	: -; // [26]     	

0	x	?	0	0	(?x)	?	:	0	: -; // [26]     	

(?1)	x	?	0	1	x	?	:	1	: -;       	

1	(?x)	?	0	1	x	?	:	1	: -;       	

1	x	*	0	1	x	?	:	1	: -;       	

1	x	?	(?0)	1	x	?	:	1	: -;       	

1	x	?	0	(?1)	x	?	:	1	: -;       	

1	x	?	0	1	(?x)	?	:	1	: -;       	


(?0)	x	0	1	0	x	?	:	?	: 0; // [27]     	

0	(?x)	0	1	0	x	?	:	?	: 0; // [27]     	

0	x	(?0)	1	0	x	?	:	?	: 0; // [27]     	

0	x	0	(?1)	0	x	?	:	?	: 0; // [27]     	

0	x	0	1	(?0)	x	?	:	?	: 0; // [27]     	

0	x	0	1	0	(?x)	?	:	?	: 0; // [27]     	

(?1)	x	1	1	1	x	?	:	?	: 1;       	

1	(?x)	1	1	1	x	?	:	?	: 1;       	

1	x	(?1)	1	1	x	?	:	?	: 1;       	

1	x	1	(?1)	1	x	?	:	?	: 1;       	

1	x	1	1	(?1)	x	?	:	?	: 1;       	

1	x	1	1	1	(?x)	?	:	?	: 1;       	


*	0	?	0	?	0	?	:	?	: -; // all clocks off.   	

?	(?0)	?	0	?	0	?	:	?	: -; // all clocks off.   	

?	0	*	0	?	0	?	:	?	: -; // all clocks off.   	

?	0	?	(?0)	?	0	?	:	?	: -; // all clocks off.   	

?	0	?	0	*	0	?	:	?	: -; // all clocks off.   	

?	0	?	0	?	(?0)	?	:	?	: -; // all clocks off.   	


?	?	?	?	?	?	*	:	?	: x;


endtable
endprimitive
/*
MACROCELL NAME : adfull_1 (delay model)
FUNCTION       : full adder 1x drive               
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    :  
VERSION       : 2.00
REVISION      : Copied h4c ADFULHA.V from dsee GW 11/15/91 and modified the name.
@(#) adfull_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


TRUTH TABLE   :    ------------------------
                    A   B   CI  |   S   CO  
                   ------------------------
                    L   L   L       L   L
                    L   H   L       H   L   
                    H   L   L       H   L
                    H   H   L       L   H
        
                    L   L   H       H   L
                    L   H   H       L   H
                    H   L   H       L   H   
                    H   H   H       H   H
                   ------------------------
REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.66   (Date Printed  6/21/1988)	

*/

/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module  adfull_1 (co, s, a, b, ci);        
    output  s, co;
    input   a, b, ci;
//
// functional block
//
    
    adfulso_udp_1     fulladd_s (s, a, b, ci); 
    adfulco_udp_1     fulladd_co (co, a, b, ci);
 
// delay block 
    specify

     // specify path delays

        (a => s)   = 1, 1;
        (b => s)   = 1, 1;
        (ci => s)  = 1, 1;
        (a => co)  = 1, 1;
        (b => co)  = 1, 1;
        (ci => co) = 1, 1;
 
    endspecify

endmodule                          // adfull_1
`endcelldefine
/*
MACROCELL NAME : adfull_2 (delay model)
FUNCTION       : full adder 2x drive               
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    :  
VERSION       : 2.00
REVISION      : Copied h4c ADFULHA.V from dsee GW 11/15/91 and modified the name.
@(#) adfull_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


TRUTH TABLE   :    ------------------------
                    A   B   CI  |   S   CO  
                   ------------------------
                    L   L   L       L   L
                    L   H   L       H   L   
                    H   L   L       H   L
                    H   H   L       L   H
        
                    L   L   H       H   L
                    L   H   H       L   H
                    H   L   H       L   H   
                    H   H   H       H   H
                   ------------------------
REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.66   (Date Printed  6/21/1988)	

*/

/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module  adfull_2 (co, s, a, b, ci);        
    output  s, co;
    input   a, b, ci;
//
// functional block
//
    
    adfulso_udp_1     fulladd_s (s, a, b, ci); 
    adfulco_udp_1     fulladd_co (co, a, b, ci);
 
// delay block 
    specify

     // specify path delays

        (a => s)   = 1, 1;
        (b => s)   = 1, 1;
        (ci => s)  = 1, 1;
        (a => co)  = 1, 1;
        (b => co)  = 1, 1;
        (ci => co) = 1, 1;
 
    endspecify

endmodule                          // adfull_2
`endcelldefine
/*
MACROCELL NAME : adfullm_1 (delay model)
FUNCTION       : full adder 1x drive               
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    :  
VERSION       : 2.00
REVISION      : Copied h4c ADFULHA.V from dsee GW 11/15/91 and modified the name.
@(#) adfull_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


TRUTH TABLE   :    ------------------------
                    A   B   CI  |   S   CO  
                   ------------------------
                    L   L   L       L   L
                    L   H   L       H   L   
                    H   L   L       H   L
                    H   H   L       L   H
        
                    L   L   H       H   L
                    L   H   H       L   H
                    H   L   H       L   H   
                    H   H   H       H   H
                   ------------------------
REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.66   (Date Printed  6/21/1988)	

*/

/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module  adfullm_1 (co, s, a, b, ci);        
    output  s, co;
    input   a, b, ci;
//
// functional block
//
    
    adfulso_udp_1     fulladd_s (s, a, b, ci); 
    adfulco_udp_1     fulladd_co (co, a, b, ci);
 
// delay block 
    specify

     // specify path delays

        (a => s)   = 1, 1;
        (b => s)   = 1, 1;
        (ci => s)  = 1, 1;
        (a => co)  = 1, 1;
        (b => co)  = 1, 1;
        (ci => co) = 1, 1;
 
    endspecify

endmodule                          // adfull_1
`endcelldefine
/*
MACROCELL NAME : adfullm_2 (delay model)
FUNCTION       : full adder 2x drive               
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    :  
VERSION       : 2.00
REVISION      : Copied h4c ADFULHA.V from dsee GW 11/15/91 and modified the name.
@(#) adfull_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


TRUTH TABLE   :    ------------------------
                    A   B   CI  |   S   CO  
                   ------------------------
                    L   L   L       L   L
                    L   H   L       H   L   
                    H   L   L       H   L
                    H   H   L       L   H
        
                    L   L   H       H   L
                    L   H   H       L   H
                    H   L   H       L   H   
                    H   H   H       H   H
                   ------------------------
REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.66   (Date Printed  6/21/1988)	

*/

/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module  adfullm_2 (co, s, a, b, ci);        
    output  s, co;
    input   a, b, ci;
//
// functional block
//
    
    adfulso_udp_1     fulladd_s (s, a, b, ci); 
    adfulco_udp_1     fulladd_co (co, a, b, ci);
 
// delay block 
    specify

     // specify path delays

        (a => s)   = 1, 1;
        (b => s)   = 1, 1;
        (ci => s)  = 1, 1;
        (a => co)  = 1, 1;
        (b => co)  = 1, 1;
        (ci => co) = 1, 1;
 
    endspecify

endmodule                          // adfull_2
`endcelldefine
/*
MACROCELL NAME : adhalf_1 (delay model)
FUNCTION       : half adder 1x drive              
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    : 
VERSION        : 2.00
REVISION       :
               Copied from ADHALFH h4c model 1-11-96 GW.

TRUTH TABLE    :   --------------------
                    A   B   |   S   CO
                   --------------------
                    L   L       L   L
                    L   H       H   L
                    H   L       H   L
                    H   H       L   H
                   -------------------
REFERENCES    :
                1. Motorola High Density Array Preliminary
                   Design Manual p.67 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module  adhalf_1 (co, s, a, b);
//
// delay model using udp's
//

    output  s, co;                     // sum, carry
    input   a, b;

    xor (s, a, b);
    and (co, a, b);

// delay block
    specify

     // specify path delays

        (a => s) = 1, 1;
        (b => s) = 1, 1;
        (a => co) = 1, 1;
        (b => co) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : adhalf_2 (delay model)
FUNCTION       : half adder 2x drive              
DESIGNED BY    : 
TESTED   BY    : 
VERIFIED BY    : 
VERSION        : 2.00
REVISION       :
               Copied from ADHALFH h4c model 1-11-96 GW.

TRUTH TABLE    :   --------------------
                    A   B   |   S   CO
                   --------------------
                    L   L       L   L
                    L   H       H   L
                    H   L       H   L
                    H   H       L   H
                   -------------------
REFERENCES    :
                1. Motorola High Density Array Preliminary
                   Design Manual p.67 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module  adhalf_2 (co, s, a, b);
//
// delay model using udp's
//

    output  s, co;                     // sum, carry
    input   a, b;

    xor (s, a, b);
    and (co, a, b);

// delay block
    specify

     // specify path delays

        (a => s) = 1, 1;
        (b => s) = 1, 1;
        (a => co) = 1, 1;
        (b => co) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME : and2_1                       
FUNCTION      : 2-INPUT AND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_1( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_2                       
FUNCTION      : 2-INPUT AND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_2( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_3                       
FUNCTION      : 2-INPUT AND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_3( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_4                       
FUNCTION      : 2-INPUT AND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_4( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_5                       
FUNCTION      : 2-INPUT AND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_5( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_6                       
FUNCTION      : 2-INPUT AND GATE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_6( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and2_8                       
FUNCTION      : 2-INPUT AND GATE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 


@(#) AND2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B   X
			--------
			L  L   L
			L  H   L
			H  L   L
			H  H   H


This model was copied from CMAN20 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.68   (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and2_8( x, a, b);
	input a, b;
	output x;

//	functional section.

	and ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3_1                       
FUNCTION      : 3-INPUT AND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  X  X    L
			X  L  X    L
			X  X  L    L
			H  H  H    H


This model was copied from CMAN30 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3_1( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3_2                       
FUNCTION      : 3-INPUT AND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  X  X    L
			X  L  X    L
			X  X  L    L
			H  H  H    H


This model was copied from CMAN30 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3_2( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3_3                       
FUNCTION      : 3-INPUT AND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  X  X    L
			X  L  X    L
			X  X  L    L
			H  H  H    H


This model was copied from CMAN30 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3_3( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3_4                       
FUNCTION      : 3-INPUT AND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  X  X    L
			X  L  X    L
			X  X  L    L
			H  H  H    H


This model was copied from CMAN30 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3_4( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3_5                       
FUNCTION      : 3-INPUT AND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  X  X    L
			X  L  X    L
			X  X  L    L
			H  H  H    H


This model was copied from CMAN30 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3_5( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3i_1                       
FUNCTION      : 3-INPUT AND GATE WITH ONE INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3I_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  L  L    L
			L  L  H    L
			L  H  L    L
			L  H  H    H
			H  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3i_1( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, aint, b, c );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3i_2                       
FUNCTION      : 3-INPUT AND GATE WITH ONE INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  L  L    L
			L  L  H    L
			L  H  L    L
			L  H  H    H
			H  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3i_2( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, aint, b, c );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3i_3                       
FUNCTION      : 3-INPUT AND GATE WITH ONE INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3I_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  L  L    L
			L  L  H    L
			L  H  L    L
			L  H  H    H
			H  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3i_3( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, aint, b, c );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3i_4                       
FUNCTION      : 3-INPUT AND GATE WITH ONE INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3I_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  L  L    L
			L  L  H    L
			L  H  L    L
			L  H  H    H
			H  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3i_4( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, aint, b, c );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME : and3i_5                       
FUNCTION      : 3-INPUT AND GATE WITH ONE INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   : 
TESTED BY     : 
VERIFIED BY   : 
VERSION       : 2.00
REVISION      : 
@(#) AND3I_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C    X
			------------
			L  L  L    L
			L  L  H    L
			L  H  L    L
			L  H  H    H
			H  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.69   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and3i_5( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	and ( x, aint, b, c );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4_1                       
FUNCTION      : 4-INPUT AND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  X  X  X    L
			X  L  X  X    L
  			X  X  L  X    L
			X  X  X  L    L
			H  H  H  H    H


This model was copied from CMAN40 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4_1( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4_2                       
FUNCTION      : 4-INPUT AND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AND4_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  X  X  X    L
			X  L  X  X    L
  			X  X  L  X    L
			X  X  X  L    L
			H  H  H  H    H


This model was copied from CMAN40 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4_2( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4_3                       
FUNCTION      : 4-INPUT AND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  X  X  X    L
			X  L  X  X    L
  			X  X  L  X    L
			X  X  X  L    L
			H  H  H  H    H


This model was copied from CMAN40 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4_3( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4_4                       
FUNCTION      : 4-INPUT AND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AND4_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  X  X  X    L
			X  L  X  X    L
  			X  X  L  X    L
			X  X  X  L    L
			H  H  H  H    H


This model was copied from CMAN40 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4_4( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4_5                       
FUNCTION      : 4-INPUT AND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  X  X  X    L
			X  L  X  X    L
  			X  X  L  X    L
			X  X  X  L    L
			H  H  H  H    H


This model was copied from CMAN40 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4_5( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4i_1                       
FUNCTION      : 4-INPUT AND GATE WITH ONE INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4I_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  L  L  L    L
			L  L  L  H    L
  			L  L  H  L    L
			L  L  H  H    L
			L  H  L  L    L
  			L  H  L  H    L
			L  H  H  L    L
			L  H  H  H    H
			H  X  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4i_1( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, aint, b, c, d );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4i_2                       
FUNCTION      : 4-INPUT AND GATE WITH ONE INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  L  L  L    L
			L  L  L  H    L
  			L  L  H  L    L
			L  L  H  H    L
			L  H  L  L    L
  			L  H  L  H    L
			L  H  H  L    L
			L  H  H  H    H
			H  X  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4i_2( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, aint, b, c, d );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4i_3                       
FUNCTION      : 4-INPUT AND GATE WITH ONE INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4I_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  L  L  L    L
			L  L  L  H    L
  			L  L  H  L    L
			L  L  H  H    L
			L  H  L  L    L
  			L  H  L  H    L
			L  H  H  L    L
			L  H  H  H    H
			H  X  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4i_3( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, aint, b, c, d );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4i_4                       
FUNCTION      : 4-INPUT AND GATE WITH ONE INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4I_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  L  L  L    L
			L  L  L  H    L
  			L  L  H  L    L
			L  L  H  H    L
			L  H  L  L    L
  			L  H  L  H    L
			L  H  H  L    L
			L  H  H  H    H
			H  X  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4i_4( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, aint, b, c, d );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : and4i_5                       
FUNCTION      : 4-INPUT AND GATE WITH ONE INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) AND4I_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			L  L  L  L    L
			L  L  L  H    L
  			L  L  H  L    L
			L  L  H  H    L
			L  H  L  L    L
  			L  H  L  H    L
			L  H  H  L    L
			L  H  H  H    H
			H  X  X  X    L


REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.70   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module and4i_5( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	and ( x, aint, b, c, d );
	not ( aint, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao211_1                      
FUNCTION      : 2-1-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO211_1 Jody Everett, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  X    H
			X  X  X  H    H
			L  X  L  L    L
			X  L  L  L    L
                        ---------------


This model was copied from AO22 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao211_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for ao211 (and-or 2 1 1)

  	and ( a_and_b, a, b );



	or ( x, a_and_b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao211_2                      
FUNCTION      : 2-1-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO211_2 Jody Everett, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  X    H
			X  X  X  H    H
			L  X  L  L    L
			X  L  L  L    L
                        ---------------


This model was copied from AO22 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao211_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for ao211 (and-or 2 1 1)

  	and ( a_and_b, a, b );



	or ( x, a_and_b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao211_3                      
FUNCTION      : 2-1-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO211_3 Jody Everett, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  X    H
			X  X  X  H    H
			L  X  L  L    L
			X  L  L  L    L
                        ---------------


This model was copied from AO22 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao211_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for ao211 (and-or 2 1 1)

  	and ( a_and_b, a, b );



	or ( x, a_and_b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao211_4                      
FUNCTION      : 2-1-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO211_4 Jody Everett, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  X    H
			X  X  X  H    H
			L  X  L  L    L
			X  L  L  L    L
                        ---------------


This model was copied from AO22 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao211_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for ao211 (and-or 2 1 1)

  	and ( a_and_b, a, b );



	or ( x, a_and_b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao211_5                      
FUNCTION      : 2-1-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO211_5 Jody Everett, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  X    H
			X  X  X  H    H
			L  X  L  L    L
			X  L  L  L    L
                        ---------------


This model was copied from AO22 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao211_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for ao211 (and-or 2 1 1)

  	and ( a_and_b, a, b );



	or ( x, a_and_b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_1                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_1 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_2                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_2 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_3                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_3 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_4                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_4 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_5                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_5 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao21_6                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO21_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  X  X    H
		  X  X  H  H    H
		  X  L  L  X    L
		  L  X  X  L    L
                  H  L  H  L    L
                  L  H  L  H    L

This model was copied from CMAO17 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao21_6 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	and ( a_and_b, a, b );
	or ( x, a_and_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao221_1
FUNCTION      : 2-2-1 INPUT AND, INTO 3-INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO221_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  X
			----------------
			H  H  X  X  X  H
			X  X  H  H  X  H
			X  X  X  X  H  H
			L  X  X  L  L  L
			L  X  L  X  L  L
			X  L  X  L  L  L
			X  L  L  X  L  L
                        ----------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao221_1 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

// functional block for ao221 (and-or 2 2 1)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );

	or ( x, a_and_b, c_and_d, e );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao221_2                      
FUNCTION      : 2-2-1 INPUT AND, INTO 3-INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO221_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  X
			----------------
			H  H  X  X  X  H
			X  X  H  H  X  H
			X  X  X  X  H  H
			L  X  X  L  L  L
			L  X  L  X  L  L
			X  L  X  L  L  L
			X  L  L  X  L  L
                        ----------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao221_2 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

// functional block for ao221 (and-or 2 2 1)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );

	or ( x, a_and_b, c_and_d, e );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao221_3
FUNCTION      : 2-2-1 INPUT AND, INTO 3-INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO221_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  X
			----------------
			H  H  X  X  X  H
			X  X  H  H  X  H
			X  X  X  X  H  H
			L  X  X  L  L  L
			L  X  L  X  L  L
			X  L  X  L  L  L
			X  L  L  X  L  L
                        ----------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao221_3 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

// functional block for ao221 (and-or 2 2 1)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );

	or ( x, a_and_b, c_and_d, e );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao221_4                      
FUNCTION      : 2-2-1 INPUT AND, INTO 3-INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO221_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  X
			----------------
			H  H  X  X  X  H
			X  X  H  H  X  H
			X  X  X  X  H  H
			L  X  X  L  L  L
			L  X  L  X  L  L
			X  L  X  L  L  L
			X  L  L  X  L  L
                        ----------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao221_4 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

// functional block for ao221 (and-or 2 2 1)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );

	or ( x, a_and_b, c_and_d, e );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao221_5
FUNCTION      : 2-2-1 INPUT AND, INTO 3-INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO221_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  X
			----------------
			H  H  X  X  X  H
			X  X  H  H  X  H
			X  X  X  X  H  H
			L  X  X  L  L  L
			L  X  L  X  L  L
			X  L  X  L  L  L
			X  L  L  X  L  L
                        ----------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao221_5 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

// functional block for ao221 (and-or 2 2 1)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );

	or ( x, a_and_b, c_and_d, e );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao222_1                      
FUNCTION      : 2-2-2 INPUT AND, INTO 3-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO222_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  F  X
			-------------------
			H  H  X  X  X  X  H
			X  X  H  H  X  X  H
			X  X  X  X  H  H  H
			L  X  X  L  X  L  L
			L  X  X  L  L  X  L
			L  X  L  X  X  L  L
			L  X  L  X  L  X  L
			X  L  X  L  X  L  L
			X  L  X  L  L  X  L
			X  L  L  X  X  L  L
			X  L  L  X  L  X  L
                        -------------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao222_1 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

// functional block for ao222 (and-or 2 2 2)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );
  	and ( e_and_f, e, f );

	or ( x, a_and_b, c_and_d, e_and_f );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao222_2                      
FUNCTION      : 2-2-2 INPUT AND, INTO 3-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO222_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  F  X
			-------------------
			H  H  X  X  X  X  H
			X  X  H  H  X  X  H
			X  X  X  X  H  H  H
			L  X  X  L  X  L  L
			L  X  X  L  L  X  L
			L  X  L  X  X  L  L
			L  X  L  X  L  X  L
			X  L  X  L  X  L  L
			X  L  X  L  L  X  L
			X  L  L  X  X  L  L
			X  L  L  X  L  X  L
                        -------------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao222_2 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

// functional block for ao222 (and-or 2 2 2)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );
  	and ( e_and_f, e, f );

	or ( x, a_and_b, c_and_d, e_and_f );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao222_3                      
FUNCTION      : 2-2-2 INPUT AND, INTO 3-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO222_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  F  X
			-------------------
			H  H  X  X  X  X  H
			X  X  H  H  X  X  H
			X  X  X  X  H  H  H
			L  X  X  L  X  L  L
			L  X  X  L  L  X  L
			L  X  L  X  X  L  L
			L  X  L  X  L  X  L
			X  L  X  L  X  L  L
			X  L  X  L  L  X  L
			X  L  L  X  X  L  L
			X  L  L  X  L  X  L
                        -------------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao222_3 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

// functional block for ao222 (and-or 2 2 2)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );
  	and ( e_and_f, e, f );

	or ( x, a_and_b, c_and_d, e_and_f );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao222_4                      
FUNCTION      : 2-2-2 INPUT AND, INTO 3-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO222_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  F  X
			-------------------
			H  H  X  X  X  X  H
			X  X  H  H  X  X  H
			X  X  X  X  H  H  H
			L  X  X  L  X  L  L
			L  X  X  L  L  X  L
			L  X  L  X  X  L  L
			L  X  L  X  L  X  L
			X  L  X  L  X  L  L
			X  L  X  L  L  X  L
			X  L  L  X  X  L  L
			X  L  L  X  L  X  L
                        -------------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao222_4 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

// functional block for ao222 (and-or 2 2 2)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );
  	and ( e_and_f, e, f );

	or ( x, a_and_b, c_and_d, e_and_f );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao222_5                      
FUNCTION      : 2-2-2 INPUT AND, INTO 3-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO222_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  E  F  X
			-------------------
			H  H  X  X  X  X  H
			X  X  H  H  X  X  H
			X  X  X  X  H  H  H
			L  X  X  L  X  L  L
			L  X  X  L  L  X  L
			L  X  L  X  X  L  L
			L  X  L  X  L  X  L
			X  L  X  L  X  L  L
			X  L  X  L  L  X  L
			X  L  L  X  X  L  L
			X  L  L  X  L  X  L
                        -------------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao222_5 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

// functional block for ao222 (and-or 2 2 2)

  	and ( a_and_b, a, b );
  	and ( c_and_d, c, d );
  	and ( e_and_f, e, f );

	or ( x, a_and_b, c_and_d, e_and_f );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_1                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_2                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_3                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_4                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_5                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao22_6                      
FUNCTION      : 2-1 INPUT AND, 2 WIDE, INTO 2-INPUT, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) AO22_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D    X
			---------------
			H  H  X  X    H
			X  X  H  H    H
			X  L  L  X    L
			L  X  X  L    L
			H  L  H  L    L
			L  H  L  H    L


This model was copied from CMAO18 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao22_6 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	aoi22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_1                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_1 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_1 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_2                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_2 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_2 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_3                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_3 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_3 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_4                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_4 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_4 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_5                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_5 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_5 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao23_6                      
FUNCTION      : 2-3 INPUT AND, INTO 2-INPUT OR, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO23_6 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E   X
		  -----------------
		  L  X  L  X  X   L
		  L  X  X  L  X   L
		  L  X  X  X  L   L
		  X  L  L  X  X   L
		  X  L  X  L  X   L
		  X  L  X  X  L   L
		  H  H  X  X  X   H
                  X  X  H  H  H   H
		  -----------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao23_6 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	or ( x, a_and_b, c_and_d_and_e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_1                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_1 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_2                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_2 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_3                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_3 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_4                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_4 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_5                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_5 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao31_6                      
FUNCTION      : 3-1 INPUT AND, 2 WIDE, INTO 2-INPUT OR, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO31_6 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D    X
		  ---------------
		  H  H  H  X    H
		  X  X  X  H    H
		  X  X  L  L    L
		  L  X  X  L    L
                  X  L  X  L    L
		  ---------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao31_6 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	and ( a_and_b_and_c, a, b, c );
	or ( x, a_and_b_and_c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_1                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_1 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_1 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_2                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_2 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_2 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_3                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_3 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_3 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_4                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_4 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_4 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_5                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_5 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_5 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao33_6                      
FUNCTION      : 3-3 INPUT AND, INTO 2-INPUT OR, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO33_6 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  X
		  -------------------
		  L  X  X  L  X  X  L
		  L  X  X  X  L  X  L
		  L  X  X  X  X  L  L
		  X  L  X  L  X  X  L
		  X  L  X  X  L  X  L
		  X  L  X  X  X  L  L
		  X  X  L  L  X  X  L
		  X  X  L  X  L  X  L
		  X  X  L  X  X  L  L
		  H  H  H  X  X  X  H
                  X  X  X  H  H  H  H
		  -------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao33_6 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

  	and ( a_and_b_and_c, a, b, c );
        and ( d_and_e_and_f, d, e, f );
	or ( x, a_and_b_and_c, d_and_e_and_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_1                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_1 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_1 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_2                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_2 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_2 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_3                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_3 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_3 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_4                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_4 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_4 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_5                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_5 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_5 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : ao44_6                      
FUNCTION      : 4-4 INPUT AND, INTO 2-INPUT OR, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 1.00
REVISION      : 
@(#) AO44_6 Jody Everett. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  A  B  C  D  E  F  G  H  X
		  -------------------------
		  L  X  X  X  L  X  X  X  L
		  L  X  X  X  X  L  X  X  L
		  L  X  X  X  X  X  L  X  L
		  L  X  X  X  X  X  X  L  L
		  X  L  X  X  L  X  X  X  L
		  X  L  X  X  X  L  X  X  L
		  X  L  X  X  X  X  L  X  L
		  X  L  X  X  X  X  X  L  L
		  X  X  L  X  L  X  X  X  L
	          X  X  L  X  X  L  X  X  L
		  X  X  L  X  X  X  L  X  L
  		  X  X  L  X  X  X  X  L  L
		  X  X  X  L  L  X  X  X  L
		  X  X  X  L  X  L  X  X  L
  		  X  X  X  L  X  X  L  X  L
  		  X  X  X  L  X  X  X  L  L
		  H  H  H  H  X  X  X  X  H
                  X  X  X  X  H  H  H  H  H
		  -------------------------

This model was copied from ao21 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 72  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module ao44_6 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h;

//	functional section.

  	and ( a_and_b_and_c_and_d, a, b, c, d );
        and ( e_and_f_and_g_and_h, e, f, g, h );
	or ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
                (d => x) = (1, 1);
                (e => x) = (1, 1);
                (f => x) = (1, 1);
                (g => x) = (1, 1);
                (h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :  aoai211_1 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, AND-OR-AND-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOAI211_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   X   L   H
                    X   L   L   X   H
                    L   X   L   X   H
                    X   X   H   H   L
                    H   H   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine

module aoai211_1 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    and ( a_and_b, a, b );
    or  ( a_and_b_or_c, a_and_b, c );
    and ( xint, a_and_b_or_c, d );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoai211_2 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, AND-OR-AND-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOAI211_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   X   L   H
                    X   L   L   X   H
                    L   X   L   X   H
                    X   X   H   H   L
                    H   H   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine

module aoai211_2 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    and ( a_and_b, a, b );
    or  ( a_and_b_or_c, a_and_b, c );
    and ( xint, a_and_b_or_c, d );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoai211_3 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, AND-OR-AND-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOAI211_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   X   L   H
                    X   L   L   X   H
                    L   X   L   X   H
                    X   X   H   H   L
                    H   H   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine

module aoai211_3 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    and ( a_and_b, a, b );
    or  ( a_and_b_or_c, a_and_b, c );
    and ( xint, a_and_b_or_c, d );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoai211_4 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, AND-OR-AND-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOAI211_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   X   L   H
                    X   L   L   X   H
                    L   X   L   X   H
                    X   X   H   H   L
                    H   H   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine

module aoai211_4 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    and ( a_and_b, a, b );
    or  ( a_and_b_or_c, a_and_b, c );
    and ( xint, a_and_b_or_c, d );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoai211_5 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, AND-OR-AND-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOAI211_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   X   L   H
                    X   L   L   X   H
                    L   X   L   X   H
                    X   X   H   H   L
                    H   H   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine

module aoai211_5 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    and ( a_and_b, a, b );
    or  ( a_and_b_or_c, a_and_b, c );
    and ( xint, a_and_b_or_c, d );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi211_1 (delay model)        
FUNCTION       :  2 - 1 - 1 Input, AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI211_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    H   H   X   X   L
                    L   H   L   L   H
                    H   L   L   L   H
                    X   X   H   X   L
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi211_1 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi211_2 (delay model)        
FUNCTION       :  2 - 1 - 1 Input, AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI211_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    H   H   X   X   L
                    L   H   L   L   H
                    H   L   L   L   H
                    X   X   H   X   L
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi211_2 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi211_3 (delay model)        
FUNCTION       :  2 - 1 - 1 Input, AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI211_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    H   H   X   X   L
                    L   H   L   L   H
                    H   L   L   L   H
                    X   X   H   X   L
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi211_3 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi211_4 (delay model)        
FUNCTION       :  2 - 1 - 1 Input, AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI211_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    H   H   X   X   L
                    L   H   L   L   H
                    H   L   L   L   H
                    X   X   H   X   L
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi211_4 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi211_5 (delay model)        
FUNCTION       :  2 - 1 - 1 Input, AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI211_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    H   H   X   X   L
                    L   H   L   L   H
                    H   L   L   L   H
                    X   X   H   X   L
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi211_5 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_1 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_1 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_2 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_2 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_3 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_3 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_4 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_4 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_5 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_5 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi21_6 (delay model)        
FUNCTION       :  2 - 1 Input, AND-OR-INVERT 6X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI21_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C      X            x - don't care state
                   -------------------
                    x   x   1      0
                    1   1   x      0
                    x   0   0      1
                    0   x   0      1
                   -------------------


This model was copied from CMAO00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi21_6 (x, a, b, c);

    output  x;
    input   a, b, c;

// delay model

    aoi211_udp_1   am1 (x, a, b, c, 1'b0);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi221_1 (delay model)
FUNCTION       :  AND-OR-INVERT 1X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI221_1 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     A   B   C   D   E      X
                    -------------------------
                     H   H   X   X   X      L
                     X   X   H   H   X      L
                     X   X   X   X   H      L
                     L   X   L   X   L      H
                     X   L   L   X   L      H
                     X   L   X   L   L      H
                     L   X   X   L   L      H
                    -------------------------


This model was copied from aoi222_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi221_1 (x, a, b, c, d, e );

//
//  function : and or invert gate 2 2 1
//
    output x;
    input  a, b, c, d, e;

// functional block for aoi221 (and-or-invert 2 2 1)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	nor ( x, a_and_b, c_and_d, e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi221_2 (delay model)
FUNCTION       :  AND-OR-INVERT 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI221_2 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     A   B   C   D   E      X
                    -------------------------
                     H   H   X   X   X      L
                     X   X   H   H   X      L
                     X   X   X   X   H      L
                     L   X   L   X   L      H
                     X   L   L   X   L      H
                     X   L   X   L   L      H
                     L   X   X   L   L      H
                    -------------------------


This model was copied from aoi221_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi221_2 (x, a, b, c, d, e );

//
//  function : and or invert gate 2 2 1
//
    output x;
    input  a, b, c, d, e;

// functional block for aoi221 (and-or-invert 2 2 1)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	nor ( x, a_and_b, c_and_d, e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi221_3 (delay model)
FUNCTION       :  AND-OR-INVERT 3X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI221_3 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     A   B   C   D   E      X
                    -------------------------
                     H   H   X   X   X      L
                     X   X   H   H   X      L
                     X   X   X   X   H      L
                     L   X   L   X   L      H
                     X   L   L   X   L      H
                     X   L   X   L   L      H
                     L   X   X   L   L      H
                    -------------------------


This model was copied from aoi222_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi221_3 (x, a, b, c, d, e );

//
//  function : and or invert gate 2 2 1
//
    output x;
    input  a, b, c, d, e;

// functional block for aoi221 (and-or-invert 2 2 1)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	nor ( x, a_and_b, c_and_d, e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi221_4 (delay model)
FUNCTION       :  AND-OR-INVERT 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI221_4 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     A   B   C   D   E      X
                    -------------------------
                     H   H   X   X   X      L
                     X   X   H   H   X      L
                     X   X   X   X   H      L
                     L   X   L   X   L      H
                     X   L   L   X   L      H
                     X   L   X   L   L      H
                     L   X   X   L   L      H
                    -------------------------


This model was copied from aoi221_3 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi221_4 (x, a, b, c, d, e );

//
//  function : and or invert gate 2 2 1
//
    output x;
    input  a, b, c, d, e;

// functional block for aoi221 (and-or-invert 2 2 1)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	nor ( x, a_and_b, c_and_d, e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi221_5 (delay model)
FUNCTION       :  AND-OR-INVERT 5X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI221_5 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     A   B   C   D   E      X
                    -------------------------
                     H   H   X   X   X      L
                     X   X   H   H   X      L
                     X   X   X   X   H      L
                     L   X   L   X   L      H
                     X   L   L   X   L      H
                     X   L   X   L   L      H
                     L   X   X   L   L      H
                    -------------------------


This model was copied from aoi222_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi221_5 (x, a, b, c, d, e );

//
//  function : and or invert gate 2 2 1
//
    output x;
    input  a, b, c, d, e;

// functional block for aoi221 (and-or-invert 2 2 1)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	nor ( x, a_and_b, c_and_d, e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi222_1 (delay model)
FUNCTION       :  AND-OR-INVERT 1X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI222_1 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     A   B   C   D   E   F      X
                    -----------------------------
                     H   H   X   X   X   X      L
                     X   X   H   H   X   X      L
                     X   X   X   X   H   H      L
                     L   X   X   L   X   L      H
                     X   L   X   L   X   L      H
                     L   X   L   X   X   L      H
                     X   L   L   X   X   L      H
                     L   X   X   L   L   X      H
                     X   L   X   L   L   X      H
                     L   X   L   X   L   X      H
                     X   L   L   X   L   X      H 
                    -----------------------------


This model was copied from aoi22_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi222_1 (x, a, b, c, d, e, f);

//
//  function : and or invert gate 2 2 2
//
    output x;
    input  a, b, c, d, e, f;

// functional block for aoi222 (and-or-invert 2 2 2)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	and ( e_and_f, e, f );

	nor ( x, a_and_b, c_and_d, e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi222_2 (delay model)
FUNCTION       :  AND-OR-INVERT 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI222_2 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     A   B   C   D   E   F      X
                    -----------------------------
                     H   H   X   X   X   X      L
                     X   X   H   H   X   X      L
                     X   X   X   X   H   H      L
                     L   X   X   L   X   L      H
                     X   L   X   L   X   L      H
                     L   X   L   X   X   L      H
                     X   L   L   X   X   L      H
                     L   X   X   L   L   X      H
                     X   L   X   L   L   X      H
                     L   X   L   X   L   X      H
                     X   L   L   X   L   X      H 
                    -----------------------------


This model was copied from aoi222_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi222_2 (x, a, b, c, d, e, f);

//
//  function : and or invert gate 2 2 2
//
    output x;
    input  a, b, c, d, e, f;

// functional block for aoi222 (and-or-invert 2 2 2)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	and ( e_and_f, e, f );

	nor ( x, a_and_b, c_and_d, e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi222_3 (delay model)
FUNCTION       :  AND-OR-INVERT 3X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI222_3 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     A   B   C   D   E   F      X
                    -----------------------------
                     H   H   X   X   X   X      L
                     X   X   H   H   X   X      L
                     X   X   X   X   H   H      L
                     L   X   X   L   X   L      H
                     X   L   X   L   X   L      H
                     L   X   L   X   X   L      H
                     X   L   L   X   X   L      H
                     L   X   X   L   L   X      H
                     X   L   X   L   L   X      H
                     L   X   L   X   L   X      H
                     X   L   L   X   L   X      H 
                    -----------------------------


This model was copied from aoi22_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi222_3 (x, a, b, c, d, e, f);

//
//  function : and or invert gate 2 2 2
//
    output x;
    input  a, b, c, d, e, f;

// functional block for aoi222 (and-or-invert 2 2 2)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	and ( e_and_f, e, f );

	nor ( x, a_and_b, c_and_d, e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi222_4 (delay model)
FUNCTION       :  AND-OR-INVERT 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI222_4 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     A   B   C   D   E   F      X
                    -----------------------------
                     H   H   X   X   X   X      L
                     X   X   H   H   X   X      L
                     X   X   X   X   H   H      L
                     L   X   X   L   X   L      H
                     X   L   X   L   X   L      H
                     L   X   L   X   X   L      H
                     X   L   L   X   X   L      H
                     L   X   X   L   L   X      H
                     X   L   X   L   L   X      H
                     L   X   L   X   L   X      H
                     X   L   L   X   L   X      H 
                    -----------------------------


This model was copied from aoi222_3 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi222_4 (x, a, b, c, d, e, f);

//
//  function : and or invert gate 2 2 2
//
    output x;
    input  a, b, c, d, e, f;

// functional block for aoi222 (and-or-invert 2 2 2)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	and ( e_and_f, e, f );

	nor ( x, a_and_b, c_and_d, e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi222_5 (delay model)
FUNCTION       :  AND-OR-INVERT 5X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 1.00
REVISION       : 
@(#) AOI222_5 Jody Everett,  Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     A   B   C   D   E   F      X
                    -----------------------------
                     H   H   X   X   X   X      L
                     X   X   H   H   X   X      L
                     X   X   X   X   H   H      L
                     L   X   X   L   X   L      H
                     X   L   X   L   X   L      H
                     L   X   L   X   X   L      H
                     X   L   L   X   X   L      H
                     L   X   X   L   L   X      H
                     X   L   X   L   L   X      H
                     L   X   L   X   L   X      H
                     X   L   L   X   L   X      H 
                    -----------------------------


This model was copied from aoi22_1 8-19-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi222_5 (x, a, b, c, d, e, f);

//
//  function : and or invert gate 2 2 2
//
    output x;
    input  a, b, c, d, e, f;

// functional block for aoi222 (and-or-invert 2 2 2)

  	and ( a_and_b, a, b );
        and ( c_and_d, c, d );
	and ( e_and_f, e, f );

	nor ( x, a_and_b, c_and_d, e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_1 (delay model)
FUNCTION       :  AND-OR-INVERT 1X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_1 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_2 (delay model)
FUNCTION       :  AND-OR-INVERT 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_2 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_3 (delay model)
FUNCTION       :  AND-OR-INVERT 3X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_3 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_4 (delay model)
FUNCTION       :  AND-OR-INVERT 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_4 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_5 (delay model)
FUNCTION       :  AND-OR-INVERT 5X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_5 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi22_6 (delay model)
FUNCTION       :  AND-OR-INVERT 6X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI22_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------
                     A   B   C   D      Y
                    ----------------------
                     H   H   X   X      L
                     X   X   H   H      L
                     L   X   L   X      H
                     X   L   X   L      H
                     L   X   X   L      H
                     X   L   L   X      H
                    ----------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi22_6 (x, a, b, c, d);

//
//  function : and or invert gate 2 2
//
    output x;
    input  a, b, c, d;

// functional block for aoi22 (and-or-invert 2 2)

   aoi22_udp_1  ga1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_1 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_1 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_2 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_2 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_3 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_3 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_4 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_4 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_5 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_5 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi23_6 (delay model)        
FUNCTION       :  2 - 3  Input, AND-OR-INVERT 6X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI23_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                   A  B  C  D  E  X              x - don't care state
                   -----------------
		   L  X  L  X  X   H
		   L  X  X  L  X   H
		   L  X  X  X  L   H
		   X  L  L  X  X   H
		   X  L  X  L  X   H
		   X  L  X  X  L   H
		   H  H  X  X  X   L
                   X  X  H  H  H   L
                   -----------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi23_6 (x, a, b, c, d, e);

    output  x;
    input   a, b, c, d, e;

// delay model

	and ( a_and_b, a, b );
	and ( c_and_d_and_e, c, d, e );
	nor ( x, a_and_b, c_and_d_and_e );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_1 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_1 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_2 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_2 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_3 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_3 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_4 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_4 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_5 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_5 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi31_6 (delay model)        
FUNCTION       :  3 - 1  Input, AND-OR-INVERT 6X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI31_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    L   X   X   L   H
                    X   L   X   L   H
                    X   X   L   L   H
                    X   X   X   H   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi31_6 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    aoi31_udp_1   am1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_1 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 1X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_1 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_2 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_2 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_3 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 3X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_3 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_4 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_4 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_5 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 5X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_5 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi33_6 (delay model)
FUNCTION       :  3-3-AND-OR-INVERT 6X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI33_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     A  B  C  D  E  F  X
		     -------------------
		     L  X  X  L  X  X  H
		     L  X  X  X  L  X  H
		     L  X  X  X  X  L  H
		     X  L  X  L  X  X  H
		     X  L  X  X  L  X  H
		     X  L  X  X  X  L  H
		     X  X  L  L  X  X  H
		     X  X  L  X  L  X  H
		     X  X  L  X  X  L  H
		     H  H  H  X  X  X  L
                     X  X  X  H  H  H  L
		     -------------------


This model was copied from CMAO02 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 78  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi33_6 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

//
//  function : and or invert gate 3 3
//

// functional block for aoi33 (and-or-invert 3 3)

	and ( a_and_b_and_c, a, b, c );
	and ( d_and_e_and_f, d, e, f );
	nor ( x, a_and_b_and_c, d_and_e_and_f );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_1 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_1 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_2 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_2 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_3 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_3 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_4 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_4 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_5 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_5 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  aoi44_6 (delay model)        
FUNCTION       :  4 - 4  Input, AND-OR-INVERT 6X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) AOI44_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                  A  B  C  D  E  F  G  H  X      x - don't care state
		  -------------------------
		  L  X  X  X  L  X  X  X  H
		  L  X  X  X  X  L  X  X  H
		  L  X  X  X  X  X  L  X  H
		  L  X  X  X  X  X  X  L  H
		  X  L  X  X  L  X  X  X  H
		  X  L  X  X  X  L  X  X  H
		  X  L  X  X  X  X  L  X  H
		  X  L  X  X  X  X  X  L  H
		  X  X  L  X  L  X  X  X  H
	          X  X  L  X  X  L  X  X  H
		  X  X  L  X  X  X  L  X  H
  		  X  X  L  X  X  X  X  L  H
		  X  X  X  L  L  X  X  X  H
		  X  X  X  L  X  L  X  X  H
  		  X  X  X  L  X  X  L  X  H
  		  X  X  X  L  X  X  X  L  H
		  H  H  H  H  X  X  X  X  L
                  X  X  X  X  H  H  H  H  L
		  -------------------------

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module aoi44_6 (x, a, b, c, d, e, f, g, h);

    output  x;
    input   a, b, c, d, e, f, g, h;

// delay model

	and ( a_and_b_and_c_and_d, a, b, c, d );
	and ( e_and_f_and_g_and_h, e, f, g, h );
	nor ( x, a_and_b_and_c_and_d, e_and_f_and_g_and_h );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;
        (g => x) = 1, 1;
        (h => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : buf_1                        
FUNCTION      : NON-INVERTING BUFFER, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_1( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_10                        
FUNCTION      : NON-INVERTING BUFFER, 10X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_10 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_10( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_12                        
FUNCTION      : NON-INVERTING BUFFER, 12X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_12 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.


This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_12( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_14                        
FUNCTION      : NON-INVERTING BUFFER, 14X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_14 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_14( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_16                        
FUNCTION      : NON-INVERTING BUFFER, 16X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_16 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_16( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_2                        
FUNCTION      : NON-INVERTING BUFFER, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_2( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_3                        
FUNCTION      : NON-INVERTING BUFFER, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_3( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_4                        
FUNCTION      : NON-INVERTING BUFFER, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_4( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_5                        
FUNCTION      : NON-INVERTING BUFFER, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_5( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_6                        
FUNCTION      : NON-INVERTING BUFFER, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_6( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_7                        
FUNCTION      : NON-INVERTING BUFFER, 7X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_7 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_7( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : buf_8                        
FUNCTION      : NON-INVERTING BUFFER, 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) BUF_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMBF10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 79  (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module buf_8( x, a );
	input a;
	output x;

//	functional section.

	buf ( x, a );

//	timimg section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
`celldefine
module bushold ( x );
inout x ;

not i1 (fb, x);
not (weak1,weak0)(x , fb) ;
// the assign works but is not accelerateable for back annotation
// assign (weak1,weak0) x = x;
endmodule
`endcelldefine
/*
MACROCELL NAME : deche4_1                      
FUNCTION      : 1 OF 4 DECODER, ACTIVE HIGH OUTPUTS 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) DECHE4_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

  
*/
/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module deche4_1 (x0, x1, x2, x3, sl0, sl1, en);

	output	x0, x1, x2, x3;
	input	sl0, sl1, en;

//	functional section.

	not ( sl1b, sl1 );
	not ( sl0b, sl0 );

	and ( x0, sl1b, sl0b, en );
	and ( x1, sl1b, sl0, en );
	and ( x2, sl1, sl0b, en );
	and ( x3, sl1, sl0, en );

//	timing section.

	specify

     // specify path delays

		(sl1 => x0) = (1, 1);
		(sl1 => x1) = (1, 1);
		(sl1 => x2) = (1, 1);
		(sl1 => x3) = (1, 1);
		(sl0 => x0) = (1, 1);
		(sl0 => x1) = (1, 1);
		(sl0 => x2) = (1, 1);
		(sl0 => x3) = (1, 1);
		(en => x0) = (1, 1);
		(en => x1) = (1, 1);
		(en => x2) = (1, 1);
		(en => x3) = (1, 1);
	endspecify
endmodule	//deche4_1
`endcelldefine
/*
MACROCELL NAME : deche4_2                      
FUNCTION      : 1 OF 4 DECODER, ACTIVE HIGH OUTPUTS 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) DECHE4_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.
  
*/
/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module deche4_2 (x0, x1, x2, x3, sl0, sl1, en);

	output	x0, x1, x2, x3;
	input	sl0, sl1, en;

//	functional section.

	not ( sl1b, sl1 );
	not ( sl0b, sl0 );

	and ( x0, sl1b, sl0b, en );
	and ( x1, sl1b, sl0, en );
	and ( x2, sl1, sl0b, en );
	and ( x3, sl1, sl0, en );

//	timing section.

	specify

     // specify path delays

		(sl1 => x0) = (1, 1);
		(sl1 => x1) = (1, 1);
		(sl1 => x2) = (1, 1);
		(sl1 => x3) = (1, 1);
		(sl0 => x0) = (1, 1);
		(sl0 => x1) = (1, 1);
		(sl0 => x2) = (1, 1);
		(sl0 => x3) = (1, 1);
		(en => x0) = (1, 1);
		(en => x1) = (1, 1);
		(en => x2) = (1, 1);
		(en => x3) = (1, 1);
	endspecify
endmodule	//deche4_2
`endcelldefine
/*
MACROCELL NAME : deche4_4                      
FUNCTION      : 1 OF 4 DECODER, ACTIVE HIGH OUTPUTS 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) DECHE4_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

  
*/
/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module deche4_4 (x0, x1, x2, x3, sl0, sl1, en);

	output	x0, x1, x2, x3;
	input	sl0, sl1, en;

//	functional section.

	not ( sl1b, sl1 );
	not ( sl0b, sl0 );

	and ( x0, sl1b, sl0b, en );
	and ( x1, sl1b, sl0, en );
	and ( x2, sl1, sl0b, en );
	and ( x3, sl1, sl0, en );

//	timing section.

	specify

     // specify path delays

		(sl1 => x0) = (1, 1);
		(sl1 => x1) = (1, 1);
		(sl1 => x2) = (1, 1);
		(sl1 => x3) = (1, 1);
		(sl0 => x0) = (1, 1);
		(sl0 => x1) = (1, 1);
		(sl0 => x2) = (1, 1);
		(sl0 => x3) = (1, 1);
		(en => x0) = (1, 1);
		(en => x1) = (1, 1);
		(en => x2) = (1, 1);
		(en => x3) = (1, 1);
	endspecify
endmodule	//deche4_4
`endcelldefine
/*
MACROCELL NAME : deche4_8                      
FUNCTION      : 1 OF 4 DECODER, ACTIVE HIGH OUTPUTS 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 


@(#) DECHE4_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

  
*/
/****************************************************************** 
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  * 
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   * 
 * customers under strict non-disclosure agreements.              * 
 * Use or disclosure of this information is permissible only      * 
 * under the terms of the existing non-disclosure agreement.      * 
 ******************************************************************/ 

`celldefine
module deche4_8 (x0, x1, x2, x3, sl0, sl1, en);

	output	x0, x1, x2, x3;
	input	sl0, sl1, en;

//	functional section.

	not ( sl1b, sl1 );
	not ( sl0b, sl0 );

	and ( x0, sl1b, sl0b, en );
	and ( x1, sl1b, sl0, en );
	and ( x2, sl1, sl0b, en );
	and ( x3, sl1, sl0, en );

//	timing section.

	specify

     // specify path delays

		(sl1 => x0) = (1, 1);
		(sl1 => x1) = (1, 1);
		(sl1 => x2) = (1, 1);
		(sl1 => x3) = (1, 1);
		(sl0 => x0) = (1, 1);
		(sl0 => x1) = (1, 1);
		(sl0 => x2) = (1, 1);
		(sl0 => x3) = (1, 1);
		(en => x0) = (1, 1);
		(en => x1) = (1, 1);
		(en => x2) = (1, 1);
		(en => x3) = (1, 1);
	endspecify
endmodule	//deche4_8
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_1 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_1 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_2 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_2 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_3 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_3 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_4 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_4 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_6 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_6 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffn_8 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFN_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CKB    Q   QB
                    --------------------
                          _
                     L     \_    L   H
                          _
                     H     \_    H   L
                            _
                     X    _/     Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffn_8 (q, qb, d, ckb);

    input   d, ckb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
    `endif
    
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dD, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (negedge ckb => (q +: d)) = (1, 1);
        (negedge ckb=> (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , , ckbD, dD );
        `else
            $setuphold( negedge ckb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_1
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_1  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_1 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_2
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_2  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_2 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_3
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_3  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_3 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_4
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_4  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_4 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_6
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_6  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_6 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffnh_8
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFNH_8  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CKB   G   Q   QB
                    ----------------------
                          _
                     L     \_   H   L   H
                          _
                     H     \_   H   H   L
                            _
                     X    _/    H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffnh_8 (q, qb, d, ckb, g);

    input   d, ckb, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( gD, g );
    `endif
    not (ck, ckbD);
    p_lat_rs lat1 (iq, dint, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g)
        (negedge ckb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g, ckbD, dD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , , ckbD, gD );
        `else
            $setuphold( negedge ckb &&& g, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_1 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);


    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_2 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_3 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_4 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_6 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffnr_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFNR_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CKB    RB     Q   QB
                    ---------------------------
                          _
                     L     \_    H     L   H
                          _
                     H     \_    H     H   L
                            _
                     X    _/     H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffnr_8 (q, qb, rb, d, ckb);

    input   rb, d, ckb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckbD, ckb );
    `endif

        not (ck, ckbD);
   	p_lat_rs lat1 ( qint, dD, ck, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ck, rb, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (rb)
     		(negedge ckb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rb, ckbD, dD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_1 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_1 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_2 (delay model)
FUNCTION       :  D FLIP-FLOP 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_2 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_3 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_3 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_4 (delay model)
FUNCTION       :  D FLIP-FLOP 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_4 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_6 (delay model)
FUNCTION       :  D FLIP-FLOP 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_6 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffp_8 (delay model)
FUNCTION       :  D FLIP-FLOP 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFP_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------
                     D    CK     Q   QB
                    --------------------
                            _
                     L    _/     L   H
                            _
                     H    _/     H   L
                          _
                     X     \_    Q   QB

                    --------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffp_8 (q, qb, d, ck);

    input   d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
    `endif

    p_lat_rs lat1 (iq, dD, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

        (posedge ck => (q +: d)) = (1, 1);
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , , ckD, dD );
        `else
            $setuphold( posedge ck, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_1 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_2 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_3 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_4 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_6 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpc_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPC_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------
                     CLB    D    CK     Q   QB
                    --------------------------
                                   _
                      L     X    _/     L   H
                                   _
                      X     L    _/     L   H
                                   _
                      H     H    _/     H   L
                                 _
                      X     X     \_    Q   QB

                    --------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpc_8 (q, qb, d, ck, clb);

    input   d, ck, clb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( ckD, ck );
    `endif

    and a1 (dint, dD, clbD);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (clb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , d, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , clb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& clb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_1
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_1  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_1 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_2
FUNCTION       : D FLIP-FLOP, with HOLD function, 2X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_2  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_2 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_3
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_3  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_3 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_4
FUNCTION       : D FLIP-FLOP, with HOLD function, 4X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_4  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_4 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_6
FUNCTION       : D FLIP-FLOP, with HOLD function, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_6  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_6 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : dffph_8
FUNCTION       : D FLIP-FLOP, with HOLD function, 8X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#) DFFPH_8  Copyright 1991, Motorola Inc.


TRUTH TABLE    :    ----------------------
                     D    CK    G   Q   QB
                    ----------------------
                            _
                     L    _/    H   L   H
                            _
                     H    _/    H   H   L
                          _
                     X     \_   H   Q   QB

                     X     X    L   Q   QB

                    ----------------------



REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/


`celldefine
module dffph_8 (q, qb, d, ck, g);

    input   d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( gD, g );
    `endif

    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);
    mux2_udp_1 ( dint, q, dD, gD );

    specify

     // specify path delays

    if (g)
        (posedge ck => (q +: d)) = (1, 1);
    if (g)
        (posedge ck => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& g, d, 0, 0, notify_reg);
            $setuphold( posedge ck, g, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_1 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_2 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_3 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_4 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_6 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffphc_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH HOLD, WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPHC_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------
                     CLB   D    CK    G   Q   QB
                    ----------------------------
                                  _
                     L     X    _/    X   L   H
                                  _
                     H     X    _/    L   Q   QB
                                  _
                     H     L    _/    H   L   H
                                  _
                     H     H    _/    H   H   L
                                _
                     X     X     \_   X   Q   QB

                   -----------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffphc_8 (q, qb, clb, d, ck, g);

    input   clb, d, ck, g;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, clbD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( clbD, clb );
        buf( gD, g );
        buf( ckD, ck );
    `endif

    and a1 (dint, id, clbD);
    mux2_udp_1 ( id, q, dD, gD );
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

  // Signals for conditioning timing checks
    and a2 (engclb, gD, clbD);
    and a3 (engd, gD, dD);

    specify

     // specify path delays

     if (clb && g)
        (posedge ck => (q +: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
        
     if (clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , engd, ckD, clbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , engclb, ckD, dD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , , ckD, gD );
        `else
            $setuphold( posedge ck &&& engd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& engclb, d, 0, 0, notify_reg);  
            $setuphold( posedge ck, g, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_1 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_2 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_3 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_4 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_6 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpr_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPR_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ---------------------------
                     D    CK    RB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     L   H

                    ---------------------------

This model was copied from CMDF05 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.100 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:11 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpr_8 (q, qb, rb, d, ck);

    input   rb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, ckD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, 1'b1 );
	n_lat_rs r (iq, qint, ckD, rbD, 1'b1, notify_reg );



   not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_1 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_2 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_3 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_4 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_6 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffprs_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET AND RESET 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPRS_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     D    CK    RB   SB      Q   QB
                    --------------------------------
                            _
                     L    _/     H    H      L   H
                            _
                     H    _/     H    H      H   L
                          _
                     X     \_    H    H      Q   QB

                     X     X     L    H      L   H

                     X     X     H    L      H   L

                     X     X     L    L      L   L

                    --------------------------------


This model was copied from DFFRSPHB 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.104 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffprs_8 (q, qb, sb, d, ck, rb);

    input   sb, d, ck, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( rbD, rb );
    `endif

   	p_lat_rs lat1 ( qint, dD, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

	buf (q, iq);
   not n1 (iq1,iq);
   and a2 (qb, iq1,sbD);

   and (enrs, rbD, sbD);

    specify

     // specify path delays

        if (rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enrs, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enrs, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] ck &&& enrs, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_1 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_1 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_2 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_2 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_3 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_3 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_4 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_4 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_6 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_6 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffps_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  DFFPS_8 Veritool Model Rev. 1.00 Copyright 1993, Motorola Inc.

			TPWIDTHH_SB=0 as dummy.  <GBH>
TRUTH TABLE    :    ---------------------------
                     D    CK    SB     Q   QB
                    ---------------------------
                            _
                     L    _/     H     L   H
                            _
                     H    _/     H     H   L
                          _
                     X     \_    H     Q   QB

                     X     X     L     H   L

                    ---------------------------


This model was copied from CMDF20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.109 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffps_8 (q, qb, sb, d, ck);

    input   sb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
    `endif

    	p_lat_rs lat1 ( qint, dD, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    specify

     // specify path delays

        if (sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (sb)
     		(posedge ck => (qb -: d)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , sb, ckD, dD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& sb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_1 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_2 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_3 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_4 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_6 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  dffpt_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SYNCHRONOUS PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) DFFPT_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -------------------------
                     SETB  D    CK     Q   QB
                    -------------------------
                                  _
                     L     X    _/     H   L
                                  _
                     H     L    _/     L   H
                                  _
                     X     H    _/     H   L
                                _
                     X     X     \_    Q   QB

                    -------------------------

This model was copied from CMDF00 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.96 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module dffpt_8 (q, qb, setb, d, ck);

    input   setb, d, ck;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( setbD, setb );
        buf( ckD, ck );
    `endif

    not n2 (set, setbD);
    or o1 (dint, dD, set);
    
    p_lat_rs lat1 (iq, dint, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    
    buf (q, qint);
    not n1 (qb, qint);

    specify

     // specify path delays

     if (setb)
        (posedge ck => (q +: d)) = (1, 1);
     if (!setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
        
     if (setb)
        (posedge ck => (qb -: d)) = (1, 1);
     if (!setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , d, ckD, setbD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , setb, ckD, dD );
        `else
            $setuphold( posedge ck &&& d, setb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& setb, d, 0, 0, notify_reg);  
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_1 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 1X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_1 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_1

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_2 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_2 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_2

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_3 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 3X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_3 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_3

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_4 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_4 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_4

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_5 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 5X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_5 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_5

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_6 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 6X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_6 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_6

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  exnor2_8 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE NOR 8X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXNOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    H
                     L   H    L
                     H   L    L
                     H   H    H
                    ------------

This model was copied from CMEN20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.117 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor2_8 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exnor2_8

        xnor xn1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exnor3_1 (delay model)
FUNCTION       :  EXCLUSIVE NOR 1X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXNOR3_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     H
                     L   L   H     L
                     L   H   L     L
                     L   H   H     H
                     H   L   L     L
                     H   L   H     H
                     H   H   L     H
                     H   H   H     L
                    -----------------

This model was copied from EXNOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.118 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor3_1 ( x, a, b, c );

//
//  function : 3 input exclusive nor gate
//
    output x;
    input  a, b, c;

// functional block

        xnor xn1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exnor3_2 (delay model)
FUNCTION       :  EXCLUSIVE NOR 2X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXNOR3_2 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     H
                     L   L   H     L
                     L   H   L     L
                     L   H   H     H
                     H   L   L     L
                     H   L   H     H
                     H   H   L     H
                     H   H   H     L
                    -----------------

This model was copied from EXNOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.118 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor3_2 ( x, a, b, c );

//
//  function : 3 input exclusive nor gate
//
    output x;
    input  a, b, c;

// functional block

        xnor xn1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exnor3_3 (delay model)
FUNCTION       :  EXCLUSIVE NOR 3X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXNOR3_3 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     H
                     L   L   H     L
                     L   H   L     L
                     L   H   H     H
                     H   L   L     L
                     H   L   H     H
                     H   H   L     H
                     H   H   H     L
                    -----------------

This model was copied from EXNOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.118 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor3_3 ( x, a, b, c );

//
//  function : 3 input exclusive nor gate
//
    output x;
    input  a, b, c;

// functional block

        xnor xn1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exnor3_4 (delay model)
FUNCTION       :  EXCLUSIVE NOR 4X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXNOR3_4 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     H
                     L   L   H     L
                     L   H   L     L
                     L   H   H     H
                     H   L   L     L
                     H   L   H     H
                     H   H   L     H
                     H   H   H     L
                    -----------------

This model was copied from EXNOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.118 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor3_4 ( x, a, b, c );

//
//  function : 3 input exclusive nor gate
//
    output x;
    input  a, b, c;

// functional block

        xnor xn1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exnor3_5 (delay model)
FUNCTION       :  EXCLUSIVE NOR 5X DRIVE 
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXNOR3_5 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     H
                     L   L   H     L
                     L   H   L     L
                     L   H   H     H
                     H   L   L     L
                     H   L   H     H
                     H   H   L     H
                     H   H   H     L
                    -----------------

This model was copied from EXNOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.118 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exnor3_5 ( x, a, b, c );

//
//  function : 3 input exclusive nor gate
//
    output x;
    input  a, b, c;

// functional block

        xnor xn1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_1 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 1X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_1 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_1

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_2 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 2X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_2 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_2

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_3 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 3X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_3 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_3

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_4 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 4X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_4 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_4

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_5 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 5X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_5 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_5

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_6 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 6X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_6 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_6

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor2_8 (delay model)
FUNCTION       :  2 INPUT EXCLUSIVE OR 8X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) EXOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ------------
                     A   B    X
                    ------------
                     L   L    L
                     L   H    H
                     H   L    H
                     H   H    L
                    ------------

This model was copied from CMEO20 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.119 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor2_8 ( x, a, b );

//
//  function : 2 input exclusive nor gate
//
    output x;
    input  a, b;

// functional block for macro exor2_8

        xor x1 (x, a, b);

// delay block
    specify

     // specify path delays

        (a => x) = (1, 1);
        (b => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor3_1 (delay model)
FUNCTION       :  EXCLUSIVE OR 1X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXOR3_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     L
                     L   L   H     H
                     L   H   L     H
                     L   H   H     L
                     H   L   L     H
                     H   L   H     L
                     H   H   L     L
                     H   H   H     H
                    -----------------

This model was copied from EXOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.120 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor3_1 (x, a, b, c);

//
//  function : 3 input exclusive or gate
//
    output x;
    input  a, b, c;

// functional block for macro exor3_1

        xor x1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor3_2 (delay model)
FUNCTION       :  EXCLUSIVE OR 2X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXOR3_2 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     L
                     L   L   H     H
                     L   H   L     H
                     L   H   H     L
                     H   L   L     H
                     H   L   H     L
                     H   H   L     L
                     H   H   H     H
                    -----------------

This model was copied from EXOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.120 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor3_2 (x, a, b, c);

//
//  function : 3 input exclusive or gate
//
    output x;
    input  a, b, c;

// functional block for macro exor3_2

        xor x1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor3_3 (delay model)
FUNCTION       :  EXCLUSIVE OR 3X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXOR3_3 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     L
                     L   L   H     H
                     L   H   L     H
                     L   H   H     L
                     H   L   L     H
                     H   L   H     L
                     H   H   L     L
                     H   H   H     H
                    -----------------

This model was copied from EXOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.120 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor3_3 (x, a, b, c);

//
//  function : 3 input exclusive or gate
//
    output x;
    input  a, b, c;

// functional block for macro exor3_3

        xor x1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor3_4 (delay model)
FUNCTION       :  EXCLUSIVE OR 4X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXOR3_4 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     L
                     L   L   H     H
                     L   H   L     H
                     L   H   H     L
                     H   L   L     H
                     H   L   H     L
                     H   H   L     L
                     H   H   H     H
                    -----------------

This model was copied from EXOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.120 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor3_4 (x, a, b, c);

//
//  function : 3 input exclusive or gate
//
    output x;
    input  a, b, c;

// functional block for macro exor3_4

        xor x1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  exor3_5 (delay model)
FUNCTION       :  EXCLUSIVE OR 5X DRIVE  
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       :
@(#)  EXOR3_5 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------
                     A   B   C     X
                    -----------------
                     L   L   L     L
                     L   L   H     H
                     L   H   L     H
                     L   H   H     L
                     H   L   L     H
                     H   L   H     L
                     H   H   L     L
                     H   H   H     H
                    -----------------

This model was copied from EXOR3H 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.120 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module exor3_5 (x, a, b, c);

//
//  function : 3 input exclusive or gate
//
    output x;
    input  a, b, c;

// functional block for macro exor3_5

        xor x1 (x, a, b, c);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : inv_0                        
FUNCTION      : INVERTER 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from inv_1 12-2-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_0( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_1                        
FUNCTION      : INVERTER 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_1( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_10                        
FUNCTION      : INVERTER 10X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_10 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_10( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_12                        
FUNCTION      : INVERTER 12X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_12 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_12( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_14                        
FUNCTION      : INVERTER 14X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_14 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_14( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_16                        
FUNCTION      : INVERTER 16X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_16 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_16( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_2                        
FUNCTION      : INVERTER 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_2( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_3                        
FUNCTION      : INVERTER 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_3( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_4                        
FUNCTION      : INVERTER 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_4( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_5                        
FUNCTION      : INVERTER 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_5( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_6                        
FUNCTION      : INVERTER 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_6( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_7                        
FUNCTION      : INVERTER 7X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) INV_7 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_7( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : inv_8                        
FUNCTION      : INVERTER 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) INV_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMIN10 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.125   (Date Printed  6/21/1988)	

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module inv_8( x, a );
	input a;
	output x;

//	functional section.

	not ( x, a );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latn_1  (delay  model)
FUNCTION        :   D-TYPE LATCH, NEGATIVE GATE LATCHED 1X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
REVISION        :   2.00
@(#) LATN_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :

                  D   G   Q   QB
                  --------------
                  L   H   L   H

                  H   H   H   L

                  X   L   Q   QB
                  --------------


This model was copied from CMLA00 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.143 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latn_1 (q, qb, d, g);

    input   d, g;

    output   q, qb;

    reg notify_reg;
    wire dD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (qint, dD, gD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not (qb, qint);

    specify

     // specify path delays

    if (g)
        (d +=> q) = (1, 1);
    if (g)
        (d -=> qb) = (1, 1);

        (posedge g => (q  +: d)) = (1, 1);
        (posedge g => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, d, 0, 0, notify_reg, , , gD, dD );
        `else
            $setuphold( negedge g, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latn_2  (delay  model)
FUNCTION        :   D-TYPE LATCH, NEGATIVE GATE LATCHED 2X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
REVISION        :   2.00
@(#) LATN_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :

                  D   G   Q   QB
                  --------------
                  L   H   L   H

                  H   H   H   L

                  X   L   Q   QB
                  --------------


This model was copied from CMLA00 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.143 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latn_2 (q, qb, d, g);

    input   d, g;

    output   q, qb;

    reg notify_reg;
    wire dD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (qint, dD, gD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not (qb, qint);

    specify

     // specify path delays

    if (g)
        (d +=> q) = (1, 1);
    if (g)
        (d -=> qb) = (1, 1);

        (posedge g => (q  +: d)) = (1, 1);
        (posedge g => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, d, 0, 0, notify_reg, , , gD, dD );
        `else
            $setuphold( negedge g, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latn_4  (delay  model)
FUNCTION        :   D-TYPE LATCH, NEGATIVE GATE LATCHED 4X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
REVISION        :   2.00
@(#) LATN_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :

                  D   G   Q   QB
                  --------------
                  L   H   L   H

                  H   H   H   L

                  X   L   Q   QB
                  --------------


This model was copied from CMLA00 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.143 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latn_4 (q, qb, d, g);

    input   d, g;

    output   q, qb;

    reg notify_reg;
    wire dD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (qint, dD, gD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not (qb, qint);

    specify

     // specify path delays

    if (g)
        (d +=> q) = (1, 1);
    if (g)
        (d -=> qb) = (1, 1);

        (posedge g => (q  +: d)) = (1, 1);
        (posedge g => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, d, 0, 0, notify_reg, , , gD, dD );
        `else
            $setuphold( negedge g, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latn_8  (delay  model)
FUNCTION        :   D-TYPE LATCH, NEGATIVE GATE LATCHED 8X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
REVISION        :   2.00
@(#) LATN_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :

                  D   G   Q   QB
                  --------------
                  L   H   L   H

                  H   H   H   L

                  X   L   Q   QB
                  --------------


This model was copied from CMLA00 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.143 (Date Printed 6/21/88)


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latn_8 (q, qb, d, g);

    input   d, g;

    output   q, qb;

    reg notify_reg;
    wire dD, gD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (qint, dD, gD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not (qb, qint);

    specify

     // specify path delays

    if (g)
        (d +=> q) = (1, 1);
    if (g)
        (d -=> qb) = (1, 1);

        (posedge g => (q  +: d)) = (1, 1);
        (posedge g => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, d, 0, 0, notify_reg, , , gD, dD );
        `else
            $setuphold( negedge g, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latnr_1 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, NEGATIVE GATE LATCHED 1X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATNR_1 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                   -----------------------
                    D   G  RB   |  Q   QB
                   -----------------------
                    L   H   H   |  L   H

                    H   H   H   |  H   L

                    X   L   H   |  Q   QB

                    X   X   L   |  L   H
                   -----------------------

This model was copied from LATRN 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.147 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latnr_1 (q, qb, rb, d, g);

    input   rb, d, g;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (iq, dD, gD, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && g)
        (d +=> q) = (1, 1);
	if (rb && g)
        (d -=> qb) = (1, 1);

	if (rb)
        (posedge g => (q +: d)) = (1, 1);
	if (rb)
        (posedge g => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg, , , gD, rbD );
            $setuphold( negedge g, d, 0, 0, notify_reg, , rb, gD, dD );
        `else
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg );
            $setuphold( negedge g &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latnr_2 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, NEGATIVE GATE LATCHED 2X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATNR_2 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                   -----------------------
                    D   G  RB   |  Q   QB
                   -----------------------
                    L   H   H   |  L   H

                    H   H   H   |  H   L

                    X   L   H   |  Q   QB

                    X   X   L   |  L   H
                   -----------------------

This model was copied from LATRN 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.147 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latnr_2 (q, qb, rb, d, g);

    input   rb, d, g;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (iq, dD, gD, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && g)
        (d +=> q) = (1, 1);
	if (rb && g)
        (d -=> qb) = (1, 1);

	if (rb)
        (posedge g => (q +: d)) = (1, 1);
	if (rb)
        (posedge g => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg, , , gD, rbD );
            $setuphold( negedge g, d, 0, 0, notify_reg, , rb, gD, dD );
        `else
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg );
            $setuphold( negedge g &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latnr_4 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, NEGATIVE GATE LATCHED 4X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATNR_4 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                   -----------------------
                    D   G  RB   |  Q   QB
                   -----------------------
                    L   H   H   |  L   H

                    H   H   H   |  H   L

                    X   L   H   |  Q   QB

                    X   X   L   |  L   H
                   -----------------------

This model was copied from LATRN 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.147 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latnr_4 (q, qb, rb, d, g);

    input   rb, d, g;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (iq, dD, gD, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && g)
        (d +=> q) = (1, 1);
	if (rb && g)
        (d -=> qb) = (1, 1);

	if (rb)
        (posedge g => (q +: d)) = (1, 1);
	if (rb)
        (posedge g => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg, , , gD, rbD );
            $setuphold( negedge g, d, 0, 0, notify_reg, , rb, gD, dD );
        `else
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg );
            $setuphold( negedge g &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latnr_8 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, NEGATIVE GATE LATCHED 8X DRIVE
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATNR_8 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                   -----------------------
                    D   G  RB   |  Q   QB
                   -----------------------
                    L   H   H   |  L   H

                    H   H   H   |  H   L

                    X   L   H   |  Q   QB

                    X   X   L   |  L   H
                   -----------------------

This model was copied from LATRN 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.147 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latnr_8 (q, qb, rb, d, g);

    input   rb, d, g;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gD, g );
    `endif

    n_lat_rs r (iq, dD, gD, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && g)
        (d +=> q) = (1, 1);
	if (rb && g)
        (d -=> qb) = (1, 1);

	if (rb)
        (posedge g => (q +: d)) = (1, 1);
	if (rb)
        (posedge g => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg, , , gD, rbD );
            $setuphold( negedge g, d, 0, 0, notify_reg, , rb, gD, dD );
        `else
            $setuphold( negedge g, posedge rb, 0, 0, notify_reg );
            $setuphold( negedge g &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[01] g &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  latp_1
FUNCTION       :  D LATCH POSITIVE GATE LATCHED 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) LATP_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                ----------------
                 D   GB  Q   QB
                ----------------
                 L   L   L   H

                 H   L   H   L

                 X   H   Q   QB
                ----------------
REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.145 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:59 1989


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latp_1 (q, qb, d, gb);

    input   d, gb;

    output   q, qb;

    reg notify_reg;
    wire dD, gbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, 1'b1, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

    if (!gb)
        (d +=> q) = (1, 1);
    if (!gb)
        (d -=> qb) = (1, 1);

        (negedge gb => (q  +: d)) = (1, 1);
        (negedge gb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, d, 0, 0, notify_reg, , , gbD, dD );
        `else
            $setuphold( posedge gb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  latp_2
FUNCTION       :  D LATCH POSITIVE GATE LATCHED 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) LATP_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                ----------------
                 D   GB  Q   QB
                ----------------
                 L   L   L   H

                 H   L   H   L

                 X   H   Q   QB
                ----------------
REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.145 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:59 1989


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latp_2 (q, qb, d, gb);

    input   d, gb;

    output   q, qb;

    reg notify_reg;
    wire dD, gbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, 1'b1, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

    if (!gb)
        (d +=> q) = (1, 1);
    if (!gb)
        (d -=> qb) = (1, 1);

        (negedge gb => (q  +: d)) = (1, 1);
        (negedge gb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, d, 0, 0, notify_reg, , , gbD, dD );
        `else
            $setuphold( posedge gb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  latp_4
FUNCTION       :  D LATCH POSITIVE GATE LATCHED 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) LATP_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                ----------------
                 D   GB  Q   QB
                ----------------
                 L   L   L   H

                 H   L   H   L

                 X   H   Q   QB
                ----------------
REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.145 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:59 1989


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latp_4 (q, qb, d, gb);

    input   d, gb;

    output   q, qb;

    reg notify_reg;
    wire dD, gbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, 1'b1, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

    if (!gb)
        (d +=> q) = (1, 1);
    if (!gb)
        (d -=> qb) = (1, 1);

        (negedge gb => (q  +: d)) = (1, 1);
        (negedge gb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, d, 0, 0, notify_reg, , , gbD, dD );
        `else
            $setuphold( posedge gb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  latp_8
FUNCTION       :  D LATCH POSITIVE GATE LATCHED 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#) LATP_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                ----------------
                 D   GB  Q   QB
                ----------------
                 L   L   L   H

                 H   L   H   L

                 X   H   Q   QB
                ----------------
REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.145 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:59 1989


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latp_8 (q, qb, d, gb);

    input   d, gb;

    output   q, qb;

    reg notify_reg;
    wire dD, gbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, 1'b1, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

    if (!gb)
        (d +=> q) = (1, 1);
    if (!gb)
        (d -=> qb) = (1, 1);

        (negedge gb => (q  +: d)) = (1, 1);
        (negedge gb => (qb -: d)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, d, 0, 0, notify_reg, , , gbD, dD );
        `else
            $setuphold( posedge gb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latpr_1 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, POSITIVE GATE LATCHED 1X DRIVE
COMPANY         :   MOTOROLA
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATPR_1 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                    ---------------------
                    D   GB  RB  |  Q   QB
                    ---------------------
                    L   L   H   |  L   H

                    H   L   H   |  H   L

                    X   H   H   |  Q   QB

                    X   X   L   |  L   H
                    ---------------------

This model was copied from LATRP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.149 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latpr_1 (q, qb, rb, d, gb);

    input   rb, d, gb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && !gb)
        (d +=> q) = (1, 1);
	if (rb && !gb)
        (d -=> qb) = (1, 1);

	if (rb)
        (negedge gb => (q +: d)) = (1, 1);
	if (rb)
        (negedge gb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg, , , gbD, rbD );
            $setuphold( posedge gb, d, 0, 0, notify_reg, , rb, gbD, dD );
        `else
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg );
            $setuphold( posedge gb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latpr_2 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, POSITIVE GATE LATCHED 2X DRIVE
COMPANY         :   MOTOROLA
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATPR_2 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                    ---------------------
                    D   GB  RB  |  Q   QB
                    ---------------------
                    L   L   H   |  L   H

                    H   L   H   |  H   L

                    X   H   H   |  Q   QB

                    X   X   L   |  L   H
                    ---------------------

This model was copied from LATRP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.149 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latpr_2 (q, qb, rb, d, gb);

    input   rb, d, gb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && !gb)
        (d +=> q) = (1, 1);
	if (rb && !gb)
        (d -=> qb) = (1, 1);

	if (rb)
        (negedge gb => (q +: d)) = (1, 1);
	if (rb)
        (negedge gb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg, , , gbD, rbD );
            $setuphold( posedge gb, d, 0, 0, notify_reg, , rb, gbD, dD );
        `else
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg );
            $setuphold( posedge gb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latpr_4 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, POSITIVE GATE LATCHED 4X DRIVE
COMPANY         :   MOTOROLA
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATPR_4 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                    ---------------------
                    D   GB  RB  |  Q   QB
                    ---------------------
                    L   L   H   |  L   H

                    H   L   H   |  H   L

                    X   H   H   |  Q   QB

                    X   X   L   |  L   H
                    ---------------------

This model was copied from LATRP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.149 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latpr_4 (q, qb, rb, d, gb);

    input   rb, d, gb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && !gb)
        (d +=> q) = (1, 1);
	if (rb && !gb)
        (d -=> qb) = (1, 1);

	if (rb)
        (negedge gb => (q +: d)) = (1, 1);
	if (rb)
        (negedge gb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg, , , gbD, rbD );
            $setuphold( posedge gb, d, 0, 0, notify_reg, , rb, gbD, dD );
        `else
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg );
            $setuphold( posedge gb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES           :
MACROCELL NAME :   latpr_8 (delay model)
FUNCTION        :   D-TYPE LATCH WITH RESET, POSITIVE GATE LATCHED 8X DRIVE
COMPANY         :   MOTOROLA
DESIGNED BY     :
TESTED BY       :
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  LATPR_8 Veritool Model Rev. 3.0 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
                    ---------------------
                    D   GB  RB  |  Q   QB
                    ---------------------
                    L   L   H   |  L   H

                    H   L   H   |  H   L

                    X   H   H   |  Q   QB

                    X   X   L   |  L   H
                    ---------------------

This model was copied from LATRP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.149 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module latpr_8 (q, qb, rb, d, gb);

    input   rb, d, gb;

    output   q, qb;

    reg notify_reg;
    wire rbD, dD, gbD;

    `ifdef cadence
    `else
        buf( rbD, rb );
        buf( dD, d );
        buf( gbD, gb );
    `endif

    not inv1 (gbnot, gbD);
    n_lat_rs r (iq, dD, gbnot, rbD, 1'b1, notify_reg);

    buf (q, iq);
    not (qb, iq);

    specify

     // specify path delays

	if (rb && !gb)
        (d +=> q) = (1, 1);
	if (rb && !gb)
        (d -=> qb) = (1, 1);

	if (rb)
        (negedge gb => (q +: d)) = (1, 1);
	if (rb)
        (negedge gb => (qb -: d)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg, , , gbD, rbD );
            $setuphold( posedge gb, d, 0, 0, notify_reg, , rb, gbD, dD );
        `else
            $setuphold( posedge gb, posedge rb, 0, 0, notify_reg );
            $setuphold( posedge gb &&& rb, d, 0, 0, notify_reg);
        `endif

        $width (edge[10] gb &&& rb, 0, 0, notify_reg);
        $width (negedge rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_1			
FUNCTION      : 2-INPUT MULTIPLEXER 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_1( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_2			
FUNCTION      : 2-INPUT MULTIPLEXER 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_2( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_3			
FUNCTION      : 2-INPUT MULTIPLEXER 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_3( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_4			
FUNCTION      : 2-INPUT MULTIPLEXER 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_4( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_5			
FUNCTION      : 2-INPUT MULTIPLEXER 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_5( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_6			
FUNCTION      : 2-INPUT MULTIPLEXER 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) MUX2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_6( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	mux2_8			
FUNCTION      : 2-INPUT MULTIPLEXER 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :
TESTED BY     :
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 


@(#) MUX2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		       ---------------
			D0 D1 SL |  X
                       ---------------
			L  X  L  |  L
			H  X  L  |  H
			X  L  H  |  L
			X  H  H  |  H
                       ---------------

This model was copied from CMMX21 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.159 (Date Printed 6/21/88)

NOTES  :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2_8( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( x, d0, d1, sl );

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_1 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 1X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_1( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_2 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 2X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_2( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_3 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 3X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_3 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_3( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_4 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 4X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_4( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_5 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 5X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_5 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_5( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_6 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 6X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_6 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_6( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux2i_8 (delay model)  	
FUNCTION        : 2-Input Multiplexer, Inverted Output 8X DRIVE
COMPANY         : 
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        :
@(#)  MUX2I_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.
		        890620 1.00 DPK
		       	Made port names uppercase.
TRUTH TABLE     :
		   ---------------
                    D0 D1 SL | X
                   ---------------
                    L  X  L  | H
                    H  X  L  | L
                    X  L  H  | H
                    X  H  H  | L
                   ---------------


REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.160 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux2i_8( x, d0, sl, d1 );
	input d0, sl, d1;
	output x;

//	functional section.

	mux2_udp_1 ( xint, d0, d1, sl );
        not (x, xint);

//	timing section.

	specify

     // specify path delays

		( d0 => x ) = ( 1, 1 );
		( d1 => x ) = ( 1, 1 );
		( sl => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : mux4_1 (delay model) 	
FUNCTION        : 4-Input Multiplexer 1X DRIVE
DESIGNED BY     :                  	
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        : 
@(#) MUX4_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
		     ---------------------------
                     D0 D1 D2 D3 SL1  SL0  |  X
                     ---------------------------
                     L  X  X  X   L    L   |  L
                     H  X  X  X   L    L   |  H
                     X  L  X  X   L    H   |  L
                     X  H  X  X   L    H   |  H
                     X  X  L  X   H    L   |  L
                     X  X  H  X   H    L   |  H
                     X  X  X  L   H    H   |  L
                     X  X  X  H   H    H   |  H
                     ---------------------------

This model was copied from CMMX41 8-13-96

REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.161 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux4_1 (x, d0, d1, d2, d3, sl0, sl1);

    output x;
    input d0, d1, d2, d3, sl0, sl1;                 // select inputs

    wire x, d0, d1, d2, d3, sl0, sl1, m1, m2;       // outputs of mux2_udp_1's

//module description
   mux2_udp_1   mux21 (m1, d0, d1, sl0);
   mux2_udp_1   mux22 (m2, d2, d3, sl0);
   mux2_udp_1   mux23 (x, m1, m2, sl1);

// delay block
    specify

     // specify path delays

        (d0  => x)  = (1,   1);
        (d1  => x)  = (1,   1);
        (d2  => x)  = (1,   1);
        (d3  => x)  = (1,   1);

        (sl0 => x) = (1, 1);
        (sl1 => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : mux4_2 (delay model) 	
FUNCTION        : 4-Input Multiplexer 2X DRIVE
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        : 
@(#) MUX4_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
		     ---------------------------
                     D0 D1 D2 D3 SL1  SL0  |  X
                     ---------------------------
                     L  X  X  X   L    L   |  L
                     H  X  X  X   L    L   |  H
                     X  L  X  X   L    H   |  L
                     X  H  X  X   L    H   |  H
                     X  X  L  X   H    L   |  L
                     X  X  H  X   H    L   |  H
                     X  X  X  L   H    H   |  L
                     X  X  X  H   H    H   |  H
                     ---------------------------

This model was copied from CMMX41 8-13-96

REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.161 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux4_2 (x, d0, d1, d2, d3, sl0, sl1);

    output x;
    input d0, d1, d2, d3, sl0, sl1;               // select inputs

    wire x, d0, d1, d2, d3, sl0, sl1, m1, m2;     // outputs of mux2_udp_1's

//module description
   mux2_udp_1   mux21 (m1, d0, d1, sl0);
   mux2_udp_1   mux22 (m2, d2, d3, sl0);
   mux2_udp_1   mux23 (x, m1, m2, sl1);

// delay block
    specify

     // specify path delays

        (d0  => x)  = (1,   1);
        (d1  => x)  = (1,   1);
        (d2  => x)  = (1,   1);
        (d3  => x)  = (1,   1);

        (sl0 => x) = (1, 1);
        (sl1 => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : mux4_3 (delay model) 	
FUNCTION        : 4-Input Multiplexer 3X DRIVE
DESIGNED BY     :                  	
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        : 
@(#) MUX4_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
		     ---------------------------
                     D0 D1 D2 D3 SL1  SL0  |  X
                     ---------------------------
                     L  X  X  X   L    L   |  L
                     H  X  X  X   L    L   |  H
                     X  L  X  X   L    H   |  L
                     X  H  X  X   L    H   |  H
                     X  X  L  X   H    L   |  L
                     X  X  H  X   H    L   |  H
                     X  X  X  L   H    H   |  L
                     X  X  X  H   H    H   |  H
                     ---------------------------

This model was copied from CMMX41 8-13-96

REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.161 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux4_3 (x, d0, d1, d2, d3, sl0, sl1);

    output x;
    input d0, d1, d2, d3, sl0, sl1;                     // select inputs

    wire x, d0, d1, d2, d3, sl0, sl1, m1, m2;        // outputs of mux2_udp_1's

//module description
   mux2_udp_1   mux21 (m1, d0, d1, sl0);
   mux2_udp_1   mux22 (m2, d2, d3, sl0);
   mux2_udp_1   mux23 (x, m1, m2, sl1);

// delay block
    specify

     // specify path delays

        (d0  => x)  = (1,   1);
        (d1  => x)  = (1,   1);
        (d2  => x)  = (1,   1);
        (d3  => x)  = (1,   1);

        (sl0 => x) = (1, 1);
        (sl1 => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : mux4_4 (delay model) 	
FUNCTION        : 4-Input Multiplexer 4X DRIVE
DESIGNED BY     : 
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        : 
@(#) MUX4_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
		     ---------------------------
                     D0 D1 D2 D3 SL1  SL0  |  X
                     ---------------------------
                     L  X  X  X   L    L   |  L
                     H  X  X  X   L    L   |  H
                     X  L  X  X   L    H   |  L
                     X  H  X  X   L    H   |  H
                     X  X  L  X   H    L   |  L
                     X  X  H  X   H    L   |  H
                     X  X  X  L   H    H   |  L
                     X  X  X  H   H    H   |  H
                     ---------------------------

This model was copied from CMMX41 8-13-96

REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.161 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux4_4 (x, d0, d1, d2, d3, sl0, sl1);

    output x;
    input d0, d1, d2, d3, sl0, sl1;                     // select inputs

    wire x, d0, d1, d2, d3, sl0, sl1, m1, m2;     // outputs of mux2_udp_1's

//module description
   mux2_udp_1   mux21 (m1, d0, d1, sl0);
   mux2_udp_1   mux22 (m2, d2, d3, sl0);
   mux2_udp_1   mux23 (x, m1, m2, sl1);

// delay block
    specify

     // specify path delays

        (d0  => x)  = (1,   1);
        (d1  => x)  = (1,   1);
        (d2  => x)  = (1,   1);
        (d3  => x)  = (1,   1);

        (sl0 => x) = (1, 1);
        (sl1 => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : mux4_5 (delay model) 	
FUNCTION        : 4-Input Multiplexer 5X DRIVE
DESIGNED BY     :                  	
TESTED BY       : 
VERIFIED BY     :
VERSION         : 2.00
REVISION        : 
@(#) MUX4_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE     :
		     ---------------------------
                     D0 D1 D2 D3 SL1  SL0  |  X
                     ---------------------------
                     L  X  X  X   L    L   |  L
                     H  X  X  X   L    L   |  H
                     X  L  X  X   L    H   |  L
                     X  H  X  X   L    H   |  H
                     X  X  L  X   H    L   |  L
                     X  X  H  X   H    L   |  H
                     X  X  X  L   H    H   |  L
                     X  X  X  H   H    H   |  H
                     ---------------------------

This model was copied from CMMX41 8-13-96

REFERENCES      :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.161 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mux4_5 (x, d0, d1, d2, d3, sl0, sl1);

    output x;
    input d0, d1, d2, d3, sl0, sl1;                 // select inputs

    wire x, d0, d1, d2, d3, sl0, sl1, m1, m2;      // outputs of mux2_udp_1's

//module description
   mux2_udp_1   mux21 (m1, d0, d1, sl0);
   mux2_udp_1   mux22 (m2, d2, d3, sl0);
   mux2_udp_1   mux23 (x, m1, m2, sl1);

// delay block
    specify

     // specify path delays

        (d0  => x)  = (1,   1);
        (d1  => x)  = (1,   1);
        (d2  => x)  = (1,   1);
        (d3  => x)  = (1,   1);

        (sl0 => x) = (1, 1);
        (sl1 => x) = (1, 1);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : mx4_1			     
FUNCTION       : 4-INPUT MULTIPLExER WITH INDIVIDUAL SELECTS 1X DRIVE
COMPANY        : MOTOROLA
TEST FILE      :				
TEST d2IRCUIT  :
DESIGNED d1Y   :	
TESTED d1Y     :
VERIFIED d1Y   :
VERSION        : 2.00
REVISION       :

@(#)  mx4_1 Veritool Model Rev. 2.00 d2opyright 1991, Motorola Inc.

REFERENCES    :
               1. Motorola High d3ensity d0rray Preliminary
                  d3esign Manual p.162 (Date Printed 6/21/88)

*/
/******************************************************************
 * d2opyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mx4_1 (x, d0, sl0, d1, sl1, d2, sl2, d3, sl3);

	output	x;
	input	d0, sl0, d1, sl1, d2, sl2, d3, sl3;

//	functional section.

	aoi22_udp_1 ( aoi1, d0, sl0, d1, sl1 );
	aoi22_udp_1 ( aoi2, d2, sl2, d3, sl3 );
	nand ( x, aoi1, aoi2 );

//	timing section.

	specify

     // specify path delays

		(d0 => x) = (1, 1);
		(sl0 => x) = (1, 1);
		(d1 => x) = (1, 1);
		(sl1 => x) = (1, 1);
		(d2 => x) = (1, 1);
		(sl2 => x) = (1, 1);
		(d3 => x) = (1, 1);
		(sl3 => x) = (1, 1);
	endspecify
endmodule // mx4_1
`endcelldefine
/*
MACROCELL NAME : mx4_2			     
FUNCTION       : 4-INPUT MULTIPLExER WITH INDIVIDUAL SELECTS 2X DRIVE
COMPANY        : MOTOROLA
TEST FILE      :				
TEST d2IRCUIT  :
DESIGNED d1Y   :	
TESTED d1Y     :
VERIFIED d1Y   :
VERSION        : 2.00
REVISION       :

@(#)  mx4_2 Veritool Model Rev. 2.00 d2opyright 1991, Motorola Inc.

REFERENCES    :
               1. Motorola High d3ensity d0rray Preliminary
                  d3esign Manual p.162 (Date Printed 6/21/88)

*/
/******************************************************************
 * d2opyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mx4_2 (x, d0, sl0, d1, sl1, d2, sl2, d3, sl3);

	output	x;
	input	d0, sl0, d1, sl1, d2, sl2, d3, sl3;

//	functional section.

	aoi22_udp_1 ( aoi1, d0, sl0, d1, sl1 );
	aoi22_udp_1 ( aoi2, d2, sl2, d3, sl3 );
	nand ( x, aoi1, aoi2 );

//	timing section.

	specify

     // specify path delays

		(d0 => x) = (1, 1);
		(sl0 => x) = (1, 1);
		(d1 => x) = (1, 1);
		(sl1 => x) = (1, 1);
		(d2 => x) = (1, 1);
		(sl2 => x) = (1, 1);
		(d3 => x) = (1, 1);
		(sl3 => x) = (1, 1);
	endspecify
endmodule // mx4_2
`endcelldefine
/*
MACROCELL NAME : mx4_3			     
FUNCTION       : 4-INPUT MULTIPLExER WITH INDIVIDUAL SELECTS 3X DRIVE
COMPANY        : MOTOROLA
TEST FILE      :				
TEST d2IRCUIT  :
DESIGNED d1Y   :	
TESTED d1Y     :
VERIFIED d1Y   :
VERSION        : 2.00
REVISION       :

@(#)  mx4_3 Veritool Model Rev. 2.00 d2opyright 1991, Motorola Inc.

REFERENCES    :
               1. Motorola High d3ensity d0rray Preliminary
                  d3esign Manual p.162 (Date Printed 6/21/88)

*/
/******************************************************************
 * d2opyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mx4_3 (x, d0, sl0, d1, sl1, d2, sl2, d3, sl3);

	output	x;
	input	d0, sl0, d1, sl1, d2, sl2, d3, sl3;

//	functional section.

	aoi22_udp_1 ( aoi1, d0, sl0, d1, sl1 );
	aoi22_udp_1 ( aoi2, d2, sl2, d3, sl3 );
	nand ( x, aoi1, aoi2 );

//	timing section.

	specify

     // specify path delays

		(d0 => x) = (1, 1);
		(sl0 => x) = (1, 1);
		(d1 => x) = (1, 1);
		(sl1 => x) = (1, 1);
		(d2 => x) = (1, 1);
		(sl2 => x) = (1, 1);
		(d3 => x) = (1, 1);
		(sl3 => x) = (1, 1);
	endspecify
endmodule // mx4_3
`endcelldefine
/*
MACROCELL NAME : mx4_4			     
FUNCTION       : 4-INPUT MULTIPLExER WITH INDIVIDUAL SELECTS 4X DRIVE
COMPANY        : MOTOROLA
TEST FILE      :				
TEST d2IRCUIT  :
DESIGNED d1Y   :	
TESTED d1Y     :
VERIFIED d1Y   :
VERSION        : 2.00
REVISION       :

@(#)  mx4_4 Veritool Model Rev. 2.00 d2opyright 1991, Motorola Inc.

REFERENCES    :
               1. Motorola High d3ensity d0rray Preliminary
                  d3esign Manual p.162 (Date Printed 6/21/88)

*/
/******************************************************************
 * d2opyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mx4_4 (x, d0, sl0, d1, sl1, d2, sl2, d3, sl3);

	output	x;
	input	d0, sl0, d1, sl1, d2, sl2, d3, sl3;

//	functional section.

	aoi22_udp_1 ( aoi1, d0, sl0, d1, sl1 );
	aoi22_udp_1 ( aoi2, d2, sl2, d3, sl3 );
	nand ( x, aoi1, aoi2 );

//	timing section.

	specify

     // specify path delays

		(d0 => x) = (1, 1);
		(sl0 => x) = (1, 1);
		(d1 => x) = (1, 1);
		(sl1 => x) = (1, 1);
		(d2 => x) = (1, 1);
		(sl2 => x) = (1, 1);
		(d3 => x) = (1, 1);
		(sl3 => x) = (1, 1);
	endspecify
endmodule // mx4_4
`endcelldefine
/*
MACROCELL NAME : mx4_5			     
FUNCTION       : 4-INPUT MULTIPLExER WITH INDIVIDUAL SELECTS 5X DRIVE
COMPANY        : MOTOROLA
TEST FILE      :				
TEST d2IRCUIT  :
DESIGNED d1Y   :	
TESTED d1Y     :
VERIFIED d1Y   :
VERSION        : 2.00
REVISION       :

@(#)  mx4_5 Veritool Model Rev. 2.00 d2opyright 1991, Motorola Inc.

REFERENCES    :
               1. Motorola High d3ensity d0rray Preliminary
                  d3esign Manual p.162 (Date Printed 6/21/88)

*/
/******************************************************************
 * d2opyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module mx4_5 (x, d0, sl0, d1, sl1, d2, sl2, d3, sl3);

	output	x;
	input	d0, sl0, d1, sl1, d2, sl2, d3, sl3;

//	functional section.

	aoi22_udp_1 ( aoi1, d0, sl0, d1, sl1 );
	aoi22_udp_1 ( aoi2, d2, sl2, d3, sl3 );
	nand ( x, aoi1, aoi2 );

//	timing section.

	specify

     // specify path delays

		(d0 => x) = (1, 1);
		(sl0 => x) = (1, 1);
		(d1 => x) = (1, 1);
		(sl1 => x) = (1, 1);
		(d2 => x) = (1, 1);
		(sl2 => x) = (1, 1);
		(d3 => x) = (1, 1);
		(sl3 => x) = (1, 1);
	endspecify
endmodule // mx4_5
`endcelldefine
/*
MACROCELL NAME : nand2_0			     
FUNCTION      : 2-INPUT NAND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from nand2_1 12-2-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_0( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_1			     
FUNCTION      : 2-INPUT NAND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_1( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_2			     
FUNCTION      : 2-INPUT NAND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      :
@(#) NAND2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_2( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_3			     
FUNCTION      : 2-INPUT NAND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_3( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_4			     
FUNCTION      : 2-INPUT NAND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_4( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_5			     
FUNCTION      : 2-INPUT NAND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_5( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_6			     
FUNCTION      : 2-INPUT NAND GATE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_6( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2_8			     
FUNCTION      : 2-INPUT NAND GATE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 


@(#) NAND2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND20 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.167 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2_8( x, a, b );
	input a, b;
	output x;

//	functional section.

	nand ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_0                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_0 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_1                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_1 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_2                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_2 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_3                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_3 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_4                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_4 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_5                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_5 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_6                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND2I_6 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_6 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand2i_8                      
FUNCTION      : 2 INPUT NAND, WITH 1 INVERTED INPUT, 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 


@(#) NAND2I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			L  H  L
			L  L  H
			H  H  H
			H  L  H
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand2i_8 (x, a, b);

	output	x;
	input	a, b;

// functional block for nand2i (nand2i 1 1)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_0			
FUNCTION      : 3-INPUT NAND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_0( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_1			
FUNCTION      : 3-INPUT NAND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_1( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_2			
FUNCTION      : 3-INPUT NAND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND3_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_2( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_3			
FUNCTION      : 3-INPUT NAND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND3_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_3( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_4			
FUNCTION      : 3-INPUT NAND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) NAND3_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_4( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3_5			
FUNCTION      : 3-INPUT NAND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND3_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND30 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.168 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3_5( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nand ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_0                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_0 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_1                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_1 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_2                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_2 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_3                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_3 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_4                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_4 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand3i_5                      
FUNCTION      : 3 INPUT NAND, WITH 1 INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND3I_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			L  H  H  L
			H  X  X  H
			X  L  X  H
			X  X  L  H
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand3i_5 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nand3i (nand3i 1 2)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4_1			
FUNCTION      : 4-INPUT NAND GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) NAND4_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND40 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.169 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4_1( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	nand ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4_2			
FUNCTION      : 4-INPUT NAND GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND4_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND40 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.169 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4_2( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	nand ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4_3			
FUNCTION      : 4-INPUT NAND GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) NAND4_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND40 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.169 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4_3( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	nand ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4_4			
FUNCTION      : 4-INPUT NAND GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :	
VERSION       : 2.00
REVISION      : 
@(#) NAND4_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND40 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.169 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4_4( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	nand ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4_5			
FUNCTION      : 4-INPUT NAND GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY   :	
TESTED BY     :	
VERIFIED BY   :
VERSION       : 2.00
REVISION      : 
@(#) NAND4_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMND40 8-13-96

REFERENCES    :
               1. Motorola High Density Array Preliminary
                  Design Manual p.169 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4_5( x, a, b, c, d );
	input a, b, c, d;
	output x;

//	functional section.

	nand ( x, a, b, c, d );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );
		( d => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4i_1                      
FUNCTION      : 4 INPUT NAND, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND4I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			L  H  H  H  L
			H  X  X  X  H
			X  L  X  X  H
			X  X  L  X  H
			X  X  X  L  H
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4i_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for nand4i (nand4i 1 3)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4i_2                      
FUNCTION      : 4 INPUT NAND, WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND4I_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			L  H  H  H  L
			H  X  X  X  H
			X  L  X  X  H
			X  X  L  X  H
			X  X  X  L  H
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4i_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for nand4i (nand4i 1 3)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4i_3                      
FUNCTION      : 4 INPUT NAND, WITH 1 INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND4I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			L  H  H  H  L
			H  X  X  X  H
			X  L  X  X  H
			X  X  L  X  H
			X  X  X  L  H
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4i_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for nand4i (nand4i 1 3)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4i_4                      
FUNCTION      : 4 INPUT NAND, WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND4I_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			L  H  H  H  L
			H  X  X  X  H
			X  L  X  X  H
			X  X  L  X  H
			X  X  X  L  H
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4i_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for nand4i (nand4i 1 3)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nand4i_5                      
FUNCTION      : 4 INPUT NAND, WITH 1 INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NAND4I_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			L  H  H  H  L
			H  X  X  X  H
			X  L  X  X  H
			X  X  L  X  H
			X  X  X  L  H
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nand4i_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

// functional block for nand4i (nand4i 1 3)

	not ( inv_a, a) ;
  	nand ( x, inv_a, b, c, d );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_0                         
FUNCTION      : 2-INPUT NOR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_0( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_1                         
FUNCTION      : 2-INPUT NOR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_1( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_2                         
FUNCTION      : 2-INPUT NOR GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_2( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_3                         
FUNCTION      : 2-INPUT NOR GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_3( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_4                         
FUNCTION      : 2-INPUT NOR GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_4( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_5                         
FUNCTION      : 2-INPUT NOR GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_5( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_6                         
FUNCTION      : 2-INPUT NOR GATE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_6( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2_8                         
FUNCTION      : 2-INPUT NOR GATE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 


@(#) NOR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.173 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2_8( x, a, b );
	input a, b;
	output x;

//	functional section.

	nor ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_0                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_0 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_1                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_1 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_2                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_2 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_3                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_3 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_4                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_4 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_5                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_5 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_6                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR2I_6 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_6 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor2i_8                      
FUNCTION      : 2 INPUT NOR, WITH 1 INVERTED INPUT, 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 


@(#) NOR2I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  X
			-------
			H  L  H
			L  X  L
			X  H  L
                        -------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor2i_8 (x, a, b);

	output	x;
	input	a, b;

// functional block for nor2i (nor2i 1 1)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_0                         
FUNCTION      : 3-INPUT NOR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_0( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_1                         
FUNCTION      : 3-INPUT NOR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_1( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_2                         
FUNCTION      : 3-INPUT NOR GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_2( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_3                         
FUNCTION      : 3-INPUT NOR GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_3( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_4                         
FUNCTION      : 3-INPUT NOR GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_4( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3_5                         
FUNCTION      : 3-INPUT NOR GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) NOR3_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMNR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.174 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3_5( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	nor ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_0                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_0 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_1                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_1 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_2                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_2 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_3                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_3 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_4                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_4 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : nor3i_5                      
FUNCTION      : 3 INPUT NOR, WITH 1 INVERTED INPUT, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) NOR3I_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  X
			----------
			H  L  L  H
			L  X  X  L
			X  H  X  L  
			X  X  H  L
                        ----------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module nor3i_5 (x, a, b, c);

	output	x;
	input	a, b, c;

// functional block for nor3i (nor3i 1 2)

	not ( inv_a, a) ;
  	nor ( x, inv_a, b, c );


//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa211_1			
FUNCTION       : 2-INPUT OR, 2-WIDE, INTO 3-INPUT AND, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA211_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  --------------
                   A  B  C  D  X
                  --------------
		   X  X  X  L  L
		   X  X  L  X  L
                   H  X  H  H  H
                   X  H  H  H  H
		   L  L  X  L  L
		   L  L  L  X  L
                  -------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa211_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa211_2			
FUNCTION       : 2-INPUT OR, 2-WIDE, INTO 3-INPUT AND, 2X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA211_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  --------------
                   A  B  C  D  X
                  --------------
		   X  X  X  L  L
		   X  X  L  X  L
                   H  X  H  H  H
                   X  H  H  H  H
		   L  L  X  L  L
		   L  L  L  X  L
                  -------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa211_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa211_3			
FUNCTION       : 2-INPUT OR, 2-WIDE, INTO 3-INPUT AND, 3X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA211_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  --------------
                   A  B  C  D  X
                  --------------
		   X  X  X  L  L
		   X  X  L  X  L
                   H  X  H  H  H
                   X  H  H  H  H
		   L  L  X  L  L
		   L  L  L  X  L
                  -------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa211_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa211_4			
FUNCTION       : 2-INPUT OR, 2-WIDE, INTO 3-INPUT AND, 4X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA211_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  --------------
                   A  B  C  D  X
                  --------------
		   X  X  X  L  L
		   X  X  L  X  L
                   H  X  H  H  H
                   X  H  H  H  H
		   L  L  X  L  L
		   L  L  L  X  L
                  -------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa211_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa211_5			
FUNCTION       : 2-INPUT OR, 2-WIDE, INTO 3-INPUT AND, 5X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA211_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  --------------
                   A  B  C  D  X
                  --------------
		   X  X  X  L  L
		   X  X  L  X  L
                   H  X  H  H  H
                   X  H  H  H  H
		   L  L  X  L  L
		   L  L  L  X  L
                  -------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa211_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c, d );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_1			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_1 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_2			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_2 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_3			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_3 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_4			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_4 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_5			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_5 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa21_6			
FUNCTION      : 2-INPUT OR, 1-WIDE, INTO 2-INPUT AND, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA21_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------
                   A  B  C   X
                  -------------
		   X  X  L   L
		   H  X  H   H
		   X  H  H   H
		   L  L  X   L
                  -------------


This model was copied from CMOA13 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa21_6 (x, a, b, c);

	output	x;
	input	a, b, c;

//	functional section.

	or ( a_or_b, a, b );
	and ( x, a_or_b, c );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa221_1			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E)
                  ------------------
                   A  B  C  D  E  X
                  ------------------
                   X  X  X  X  L  L
		   X  X  L  L  X  L
		   L  L  X  X  X  L
                   X  H  X  H  H  H
                   X  H  H  X  H  H
                   H  X  H  X  H  H
                   H  X  X  H  H  H
                  ------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa221_1 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	and ( x, a_or_b, c_or_d, e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa221_2			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 2X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E)
                  ------------------
                   A  B  C  D  E  X
                  ------------------
                   X  X  X  X  L  L
		   X  X  L  L  X  L
		   L  L  X  X  X  L
                   X  H  X  H  H  H
                   X  H  H  X  H  H
                   H  X  H  X  H  H
                   H  X  X  H  H  H
                  ------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa221_2 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	and ( x, a_or_b, c_or_d, e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa221_3			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 3X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E)
                  ------------------
                   A  B  C  D  E  X
                  ------------------
                   X  X  X  X  L  L
		   X  X  L  L  X  L
		   L  L  X  X  X  L
                   X  H  X  H  H  H
                   X  H  H  X  H  H
                   H  X  H  X  H  H
                   H  X  X  H  H  H
                  ------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa221_3 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	and ( x, a_or_b, c_or_d, e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa221_4			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 4X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E)
                  ------------------
                   A  B  C  D  E  X
                  ------------------
                   X  X  X  X  L  L
		   X  X  L  L  X  L
		   L  L  X  X  X  L
                   X  H  X  H  H  H
                   X  H  H  X  H  H
                   H  X  H  X  H  H
                   H  X  X  H  H  H
                  ------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa221_4 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	and ( x, a_or_b, c_or_d, e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa221_5			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 5X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E)
                  ------------------
                   A  B  C  D  E  X
                  ------------------
                   X  X  X  X  L  L
		   X  X  L  L  X  L
		   L  L  X  X  X  L
                   X  H  X  H  H  H
                   X  H  H  X  H  H
                   H  X  H  X  H  H
                   H  X  X  H  H  H
                  ------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa221_5 (x, a, b, c, d, e);

	output	x;
	input	a, b, c, d, e;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	and ( x, a_or_b, c_or_d, e );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa222_1			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 1X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E+F)
                  -----------------------
                   A  B  C  D  E  F  X
                  -----------------------
                   X  X  X  X  L  L  L
		   X  X  L  L  X  X  L
		   L  L  X  X  X  X  L
                   X  H  X  H  X  H  H
                   X  H  X  H  H  X  H
                   X  H  H  X  H  X  H
		   H  X  X  H  X  H  H
                   H  X  X  H  H  X  H
                   H  X  H  X  X  H  H
                  ----------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa222_1 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
	and ( x, a_or_b, c_or_d, e_or_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa222_2			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 2X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E+F)
                  -----------------------
                   A  B  C  D  E  F  X
                  -----------------------
                   X  X  X  X  L  L  L
		   X  X  L  L  X  X  L
		   L  L  X  X  X  X  L
                   X  H  X  H  X  H  H
                   X  H  X  H  H  X  H
                   X  H  H  X  H  X  H
		   H  X  X  H  X  H  H
                   H  X  X  H  H  X  H
                   H  X  H  X  X  H  H
                  ----------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa222_2 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
	and ( x, a_or_b, c_or_d, e_or_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa222_3			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 3X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E+F)
                  -----------------------
                   A  B  C  D  E  F  X
                  -----------------------
                   X  X  X  X  L  L  L
		   X  X  L  L  X  X  L
		   L  L  X  X  X  X  L
                   X  H  X  H  X  H  H
                   X  H  X  H  H  X  H
                   X  H  H  X  H  X  H
		   H  X  X  H  X  H  H
                   H  X  X  H  H  X  H
                   H  X  H  X  X  H  H
                  ----------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa222_3 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
	and ( x, a_or_b, c_or_d, e_or_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa222_4			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 4X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E+F)
                  -----------------------
                   A  B  C  D  E  F  X
                  -----------------------
                   X  X  X  X  L  L  L
		   X  X  L  L  X  X  L
		   L  L  X  X  X  X  L
                   X  H  X  H  X  H  H
                   X  H  X  H  H  X  H
                   X  H  H  X  H  X  H
		   H  X  X  H  X  H  H
                   H  X  X  H  H  X  H
                   H  X  H  X  X  H  H
                  ----------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa222_4 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
	and ( x, a_or_b, c_or_d, e_or_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oa222_5			
FUNCTION       : 2-INPUT OR, 2-INPUT OR, 2-INPUT OR, INTO 3-INPUT AND, 5X DRIVE
COMPANY        : MOTOROLA
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OA322_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :    (A+B)(C+D)(E+F)
                  -----------------------
                   A  B  C  D  E  F  X
                  -----------------------
                   X  X  X  X  L  L  L
		   X  X  L  L  X  X  L
		   L  L  X  X  X  X  L
                   X  H  X  H  X  H  H
                   X  H  X  H  H  X  H
                   X  H  H  X  H  X  H
		   H  X  X  H  X  H  H
                   H  X  X  H  H  X  H
                   H  X  H  X  X  H  H
                  ----------------------



REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.180 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa222_5 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f;

//	functional section.

	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
	and ( x, a_or_b, c_or_d, e_or_f );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_1			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_2			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_3			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_4			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_5			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa22_6			
FUNCTION      : 2-INPUT OR, 2-WIDE, INTO 2-INPUT AND, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA22_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ----------------
                   A  B  C  D   X
                  ----------------
		   H  X  H  X   H
		   X  H  H  X   H
		   H  X  X  H   H
	   	   X  H  X  H   H
		   L  L  X  X   L
		   X  X  L  L   L
                  ----------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa22_6 (x, a, b, c, d);

	output	x;
	input	a, b, c, d;

//	functional section.

	oai22_udp_1 ( xb, a, b, c, d );
	not ( x, xb );

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_1 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_1 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_2 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_2 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_3 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 3X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_3 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_4 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_4 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_5 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 5X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_5 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oa31_6 (delay model)    
FUNCTION       :  3-1 INPUT, OR-AND 6X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OA31_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D               0 - logic zero
     output - X                        1 - logic one
   A   B   C   D       X       x - don't care state
 -------------------------
   x   x   x   0       0
   0   0   0   x       0
   x   x   1   1       1
   x   1   x   1       1
   1   x   x   1       1
 -------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa31_6 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
     or (i1, a, b, c);
    and (x, i1, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_1			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_1 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_2			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_2 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_3			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_3 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_4			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_4 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_5			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_5 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa33_6			
FUNCTION      : 3-3-INPUT OR, INTO 2-INPUT AND, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA33_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------
                  A  B  C  D  E  F  X            
		  -------------------
		  H  X  X  H  X  X  H
		  H  X  X  X  H  X  H
		  H  X  X  X  X  H  H
		  X  H  X  H  X  X  H
		  X  H  X  X  H  X  H
		  X  H  X  X  X  H  H
		  X  X  H  H  X  X  H
		  X  X  H  X  H  X  H
		  X  X  H  X  X  H  H
		  L  L  L  X  X  X  L
                  X  X  X  L  L  L  L
		  -------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa33_6 (x, a, b, c, d, e, f);

	output	x;
	input	a, b, c, d, e, f ;

//	functional section.

	or ( a_or_b_or_c, a, b, c );
	or ( d_or_e_or_f, d, e, f );
	and ( x, a_or_b_or_c, d_or_e_or_f);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_1			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_1 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_2			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_2 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_3			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_3 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_4			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_4 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_5			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_5 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME :	oa44_6			
FUNCTION      : 4-4-INPUT OR, INTO 2-INPUT AND, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :				DATE         :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      : 
@(#) OA44_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  -------------------------
                  A  B  C  D  E  F  G  H  X      
		  -------------------------
		  H  X  X  X  H  X  X  X  H
		  H  X  X  X  X  H  X  X  H
		  H  X  X  X  X  X  H  X  H
		  H  X  X  X  X  X  X  H  H
		  X  H  X  X  H  X  X  X  H
		  X  H  X  X  X  H  X  X  H
		  X  H  X  X  X  X  H  X  H
		  X  H  X  X  X  X  X  H  H
		  X  X  H  X  H  X  X  X  H
	          X  X  H  X  X  H  X  X  H
		  X  X  H  X  X  X  H  X  H
  		  X  X  H  X  X  X  X  H  H
		  X  X  X  H  H  X  X  X  H
		  X  X  X  H  X  H  X  X  H
  		  X  X  X  H  X  X  H  X  H
  		  X  X  X  H  X  X  X  H  H
		  L  L  L  L  X  X  X  X  L
                  X  X  X  X  L  L  L  L  L
		  -------------------------


This model was copied from CMOA14 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.181 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oa44_6 (x, a, b, c, d, e, f, g, h);

	output	x;
	input	a, b, c, d, e, f, g, h ;

//	functional section.

	or ( a_or_b_or_c_or_d, a, b, c, d );
	or ( e_or_f_or_g_or_h, e, f, g, h );
	and ( x, a_or_b_or_c_or_d, e_or_f_or_g_or_h);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
		(e => x) = (1, 1);
		(f => x) = (1, 1);
		(g => x) = (1, 1);
		(h => x) = (1, 1);
	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME :  oai211_1 (delay model)   
FUNCTION       :  2-1-1 INPUT, OR-AND-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OAI211_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    X   X   X   0       1
                    X   X   0   X       1
                    0   0   X   X       1
                    0   1   1   1       0
                    1   0   1   1       0
                    1   1   1   1       0
               ----------------------------


This model was copied from CMOA03 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.184 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai211_1 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai211_udp_1  m1 (x, a, b, c, d);
                                            // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai211_2 (delay model)   
FUNCTION       :  2-1-1 INPUT, OR-AND-INVERT 2X DRIVE 
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI211_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    X   X   X   0       1
                    X   X   0   X       1
                    0   0   X   X       1
                    0   1   1   1       0
                    1   0   1   1       0
                    1   1   1   1       0
               ----------------------------


This model was copied from CMOA03 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.184 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai211_2 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai211_udp_1  m1 (x, a, b, c, d);
                                            // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai211_3 (delay model)   
FUNCTION       :  2-1-1 INPUT, OR-AND-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OAI211_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    X   X   X   0       1
                    X   X   0   X       1
                    0   0   X   X       1
                    0   1   1   1       0
                    1   0   1   1       0
                    1   1   1   1       0
               ----------------------------


This model was copied from CMOA03 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.184 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai211_3 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai211_udp_1  m1 (x, a, b, c, d);
                                            // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai211_4 (delay model)   
FUNCTION       :  2-1-1 INPUT, OR-AND-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI211_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    X   X   X   0       1
                    X   X   0   X       1
                    0   0   X   X       1
                    0   1   1   1       0
                    1   0   1   1       0
                    1   1   1   1       0
               ----------------------------


This model was copied from CMOA03 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.184 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai211_4 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai211_udp_1  m1 (x, a, b, c, d);
                                            // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai211_5 (delay model)   
FUNCTION       :  2-1-1 INPUT, OR-AND-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OAI211_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    X   X   X   0       1
                    X   X   0   X       1
                    0   0   X   X       1
                    0   1   1   1       0
                    1   0   1   1       0
                    1   1   1   1       0
               ----------------------------


This model was copied from CMOA03 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.184 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai211_5 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai211_udp_1  m1 (x, a, b, c, d);
                                            // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_1 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   X       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_1 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_2 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   x       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_2 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_3 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   X       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_3 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_4 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   x       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_4 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_5 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   X       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_5 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oai21_6 (delay model)     
FUNCTION       :  2 - 1 Input, OR-AND-INVERT, 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAI21_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C            0 - logic zero
                    output - X                  1 - logic one
                    A   B   C       X           x - don't care state
               ----------------------------
                    x   x   0       1
                    0   0   X       1
                    0   1   1       0
                    1   0   1       0
                    1   1   1       0
               ----------------------------


This model was copied from CMOA00 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.183 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai21_6 (x, a, b, c);
    output  x;
    input   a,b,c;

// functional block
    oai211_udp_1   m1 (x, a, b, c, 1'b1);
                                           // fourth input is inactive.

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai221_1 (delay model)    
FUNCTION       :  2-2-1 Input, OR-AND-INVERT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI221_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E                  0 - logic zero
     output - X                              1 - logic one
   A   B   C   D   E       X                x - don't care state
 -----------------------------
   x   x   x   x   0       1
   x   x   0   0   x       1
   0   0   x   x   x       1
   x   1   x   1   1       0
   x   1   1   x   1       0
   1   x   x   1   1       0
   1   x   1   x   1       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai221_1 (x, a, b, c, d, e);

    output  x;
    input   a,b,c,d,e;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
       and ( xint, a_or_b, c_or_d, e );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai221_2 (delay model)    
FUNCTION       :  2-2-1 Input, OR-AND-INVERT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI221_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E                  0 - logic zero
     output - X                              1 - logic one
   A   B   C   D   E       X                x - don't care state
 -----------------------------
   x   x   x   x   0       1
   x   x   0   0   x       1
   0   0   x   x   x       1
   x   1   x   1   1       0
   x   1   1   x   1       0
   1   x   x   1   1       0
   1   x   1   x   1       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai221_2 (x, a, b, c, d, e);

    output  x;
    input   a,b,c,d,e;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
       and ( xint, a_or_b, c_or_d, e );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai221_3 (delay model)    
FUNCTION       :  2-2-1 Input, OR-AND-INVERT 3X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI221_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E                  0 - logic zero
     output - X                              1 - logic one
   A   B   C   D   E       X                x - don't care state
 -----------------------------
   x   x   x   x   0       1
   x   x   0   0   x       1
   0   0   x   x   x       1
   x   1   x   1   1       0
   x   1   1   x   1       0
   1   x   x   1   1       0
   1   x   1   x   1       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai221_3 (x, a, b, c, d, e);

    output  x;
    input   a,b,c,d,e;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
       and ( xint, a_or_b, c_or_d, e );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai221_4 (delay model)    
FUNCTION       :  2-2-1 Input, OR-AND-INVERT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI221_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E                  0 - logic zero
     output - X                              1 - logic one
   A   B   C   D   E       X                x - don't care state
 -----------------------------
   x   x   x   x   0       1
   x   x   0   0   x       1
   0   0   x   x   x       1
   x   1   x   1   1       0
   x   1   1   x   1       0
   1   x   x   1   1       0
   1   x   1   x   1       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai221_4 (x, a, b, c, d, e);

    output  x;
    input   a,b,c,d,e;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
       and ( xint, a_or_b, c_or_d, e );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai221_5 (delay model)    
FUNCTION       :  2-2-1 Input, OR-AND-INVERT 5X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI221_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E                  0 - logic zero
     output - X                              1 - logic one
   A   B   C   D   E       X                x - don't care state
 -----------------------------
   x   x   x   x   0       1
   x   x   0   0   x       1
   0   0   x   x   x       1
   x   1   x   1   1       0
   x   1   1   x   1       0
   1   x   x   1   1       0
   1   x   1   x   1       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai221_5 (x, a, b, c, d, e);

    output  x;
    input   a,b,c,d,e;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
       and ( xint, a_or_b, c_or_d, e );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai222_1 (delay model)    
FUNCTION       :  2-2-2 Input, OR-AND-INVERT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI222_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E, F                  0 - logic zero
     output - X                                 1 - logic one
   A   B   C   D   E   F       X                x - don't care state
 ---------------------------------
   x   x   x   x   0   0       1
   x   x   0   0   x   x       1
   0   0   x   x   x   x       1
   x   1   x   1   x   1       0
   x   1   x   1   1   x       0
   x   1   1   x   x   1       0
   x   1   1   x   1   x       0
   1   x   x   1   x   1       0
   1   x   x   1   1   x       0
   1   x   1   x   x   1       0
   1   x   1   x   1   x       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai222_1 (x, a, b, c, d, e, f);

    output  x;
    input   a,b,c,d,e,f;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
       and ( xint, a_or_b, c_or_d, e_or_f );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai222_2 (delay model)    
FUNCTION       :  2-2-2 Input, OR-AND-INVERT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI222_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E, F                  0 - logic zero
     output - X                                 1 - logic one
   A   B   C   D   E   F       X                x - don't care state
 ---------------------------------
   x   x   x   x   0   0       1
   x   x   0   0   x   x       1
   0   0   x   x   x   x       1
   x   1   x   1   x   1       0
   x   1   x   1   1   x       0
   x   1   1   x   x   1       0
   x   1   1   x   1   x       0
   1   x   x   1   x   1       0
   1   x   x   1   1   x       0
   1   x   1   x   x   1       0
   1   x   1   x   1   x       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai222_2 (x, a, b, c, d, e, f);

    output  x;
    input   a,b,c,d,e,f;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
       and ( xint, a_or_b, c_or_d, e_or_f );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai222_3 (delay model)    
FUNCTION       :  2-2-2 Input, OR-AND-INVERT 3X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI222_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E, F                  0 - logic zero
     output - X                                 1 - logic one
   A   B   C   D   E   F       X                x - don't care state
 ---------------------------------
   x   x   x   x   0   0       1
   x   x   0   0   x   x       1
   0   0   x   x   x   x       1
   x   1   x   1   x   1       0
   x   1   x   1   1   x       0
   x   1   1   x   x   1       0
   x   1   1   x   1   x       0
   1   x   x   1   x   1       0
   1   x   x   1   1   x       0
   1   x   1   x   x   1       0
   1   x   1   x   1   x       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai222_3 (x, a, b, c, d, e, f);

    output  x;
    input   a,b,c,d,e,f;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
       and ( xint, a_or_b, c_or_d, e_or_f );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai222_4 (delay model)    
FUNCTION       :  2-2-2 Input, OR-AND-INVERT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI222_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E, F                  0 - logic zero
     output - X                                 1 - logic one
   A   B   C   D   E   F       X                x - don't care state
 ---------------------------------
   x   x   x   x   0   0       1
   x   x   0   0   x   x       1
   0   0   x   x   x   x       1
   x   1   x   1   x   1       0
   x   1   x   1   1   x       0
   x   1   1   x   x   1       0
   x   1   1   x   1   x       0
   1   x   x   1   x   1       0
   1   x   x   1   1   x       0
   1   x   1   x   x   1       0
   1   x   1   x   1   x       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai222_4 (x, a, b, c, d, e, f);

    output  x;
    input   a,b,c,d,e,f;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
       and ( xint, a_or_b, c_or_d, e_or_f );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai222_5 (delay model)    
FUNCTION       :  2-2-2 Input, OR-AND-INVERT 5X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 
REVISION      : 
@(#) OAI222_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
     inputs - A, B, C, D, E, F                  0 - logic zero
     output - X                                 1 - logic one
   A   B   C   D   E   F       X                x - don't care state
 ---------------------------------
   x   x   x   x   0   0       1
   x   x   0   0   x   x       1
   0   0   x   x   x   x       1
   x   1   x   1   x   1       0
   x   1   x   1   1   x       0
   x   1   1   x   x   1       0
   x   1   1   x   1   x       0
   1   x   x   1   x   1       0
   1   x   x   1   1   x       0
   1   x   1   x   x   1       0
   1   x   1   x   1   x       0
 ---------------------------------



REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai222_5 (x, a, b, c, d, e, f);

    output  x;
    input   a,b,c,d,e,f;

// functional block
	or ( a_or_b, a, b );
	or ( c_or_d, c, d );
	or ( e_or_f, e, f );
       and ( xint, a_or_b, c_or_d, e_or_f );
       not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_1 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_1 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_2 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_2 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_3 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 3X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_3 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_4 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_4 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_5 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 5X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_5 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai22_6 (delay model)    
FUNCTION       :  2-INPUT, 2-WIDE, OR-AND-INVERT 6X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI22_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A   B   C   D       X       x - don't care state
               ----------------------------
                    x   x   0   0       1
                    0   0   x   x       1
                    1   x   x   1       0
                    1   x   x   1       0
                    x   1   1   x       0
                    x   1   x   1       0
               ----------------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai22_6 (x, a, b, c, d);

    output  x;
    input   a,b,c,d;

// functional block
    oai22_udp_1   m1 (x, a, b, c, d);

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_1                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_1 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_1 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_2                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_2 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_2 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_3                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_3 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_3 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_4                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_4 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_4 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_5                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_5 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_5 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : oai31_6                      
FUNCTION      : 3-1 INPUT OAI, 3 INPUT OR, INTO 2 INPUT NAND, 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI31_6 Ravi Shankar, Copyright 1991, Motorola Inc.

TRUTH TABLE   :
			A  B  C  D  X
			-------------
			X  X  X  L  H
			L  L  L  X  H
			H  X  X  H  L
			X  H  X  H  L
			X  X  H  H  L
                        -------------


This model was copied from AO21 8-25-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p. 73  (Date Printed  6/21/1988)	

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai31_6 (x, a, b, c, d);

	output	x;
	input	a, b, c, d ;

// functional block for oa31i (or-and 3-1)

	or ( a_or_b_or_c, a, b, c) ;
  	nand (x, a_or_b_or_c, d);

//	timing section.

	specify

     // specify path delays

		(a => x) = (1, 1);
		(b => x) = (1, 1);
		(c => x) = (1, 1);
		(d => x) = (1, 1);
	endspecify
endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_1 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_1 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_2 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_2 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_3 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 3X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_3 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_4 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_4 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_5 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 5X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_5 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine

/*
MACROCELL NAME :  oai33_6 (delay model)    
FUNCTION       :  3-3-INPUT, 2-WIDE, OR-AND-INVERT 6X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OAI33_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D         0 - logic zero
                    output - X                  1 - logic one
                    A  B  C  D  E  F  X         x - don't care state
                    -------------------
		    H  X  X  H  X  X  L
		    H  X  X  X  H  X  L
		    H  X  X  X  X  H  L
		    X  H  X  H  X  X  L
		    X  H  X  X  H  X  L
		    X  H  X  X  X  H  L
		    X  X  H  H  X  X  L
		    X  X  H  X  H  X  L
		    X  X  H  X  X  H  L
		    L  L  L  X  X  X  H
                    X  X  X  L  L  L  H
		    -------------------


This model was copied from CMOA01 8-13-96

REFERENCES     :
                 1. Motorola High Density Array Preliminary
                    Design Manual p.185 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oai33_6 (x, a, b, c, d, e, f);

    output  x;
    input   a, b, c, d, e, f;

// functional block

    or ( a_or_b_or_c, a, b, c );
    or ( d_or_e_or_f, d, e, f );
    and ( xint, a_or_b_or_c, d_or_e_or_f );
    not ( x, xint );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;
        (e => x) = 1, 1;
        (f => x) = 1, 1;

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oaoi211_1 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, OR-AND-OR-INVERT 1X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAOI211_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   L   L   H
                    L   L   X   L   H
                    X   X   X   H   L
                    X   H   H   X   L
                    H   X   H   X   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oaoi211_1 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    or ( a_or_b, a, b );
    and ( a_or_b_and_c, a_or_b, c );
    nor ( x, a_or_b_and_c, d );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oaoi211_2 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, OR-AND-OR-INVERT 2X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAOI211_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   L   L   H
                    L   L   X   L   H
                    X   X   X   H   L
                    X   H   H   X   L
                    H   X   H   X   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oaoi211_2 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    or ( a_or_b, a, b );
    and ( a_or_b_and_c, a_or_b, c );
    nor ( x, a_or_b_and_c, d );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oaoi211_3 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, OR-AND-OR-INVERT 3X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAOI211_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   L   L   H
                    L   L   X   L   H
                    X   X   X   H   L
                    X   H   H   X   L
                    H   X   H   X   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oaoi211_3 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    or ( a_or_b, a, b );
    and ( a_or_b_and_c, a_or_b, c );
    nor ( x, a_or_b_and_c, d );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oaoi211_4 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, OR-AND-OR-INVERT 4X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAOI211_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   L   L   H
                    L   L   X   L   H
                    X   X   X   H   L
                    X   H   H   X   L
                    H   X   H   X   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oaoi211_4 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    or ( a_or_b, a, b );
    and ( a_or_b_and_c, a_or_b, c );
    nor ( x, a_or_b_and_c, d );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME :  oaoi211_5 (delay model)        
FUNCTION       :  2 - 1 - 1  Input, OR-AND-OR-INVERT 5X DRIVE
DESIGNED BY    :
TESTED   BY    :
VERIFIED BY    :
VERSION        : 2.00
REVISION       : 
@(#) OAOI211_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :
                    inputs - A, B, C, D          L - logic zero
                    output - X                   H - logic one
                    A   B   C   D   X            x - don't care state
                   -------------------
                    X   X   L   L   H
                    L   L   X   L   H
                    X   X   X   H   L
                    X   H   H   X   L
                    H   X   H   X   L
                   -------------------


REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.76 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module oaoi211_5 (x, a, b, c, d);

    output  x;
    input   a, b, c, d;

// delay model

    or ( a_or_b, a, b );
    and ( a_or_b_and_c, a_or_b, c );
    nor ( x, a_or_b_and_c, d );

// delay block
    specify

     // specify path delays

        (a => x) = 1, 1;
        (b => x) = 1, 1;
        (c => x) = 1, 1;
        (d => x) = 1, 1;


    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : or2_1                       
FUNCTION      : 2-INPUT OR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR2_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_1( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_2                       
FUNCTION      : 2-INPUT OR GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR2_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_2( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_3                       
FUNCTION      : 2-INPUT OR GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_3( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_4                       
FUNCTION      : 2-INPUT OR GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR2_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_4( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_5                       
FUNCTION      : 2-INPUT OR GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR2_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_5( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_6                       
FUNCTION      : 2-INPUT OR GATE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR2_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_6( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or2_8                       
FUNCTION      : 2-INPUT OR GATE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 


@(#) OR2_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR20 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or2_8( x, a, b);
	input a, b;
	output x;

//	functional section.

	or ( x, a, b );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3_1                        
FUNCTION      : 3-INPUT OR GATE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR3_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.188 (Date Printed 6/21/88)
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3_1( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	or ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3_2                        
FUNCTION      : 3-INPUT OR GATE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR3_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.188 (Date Printed 6/21/88)
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3_2( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	or ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3_3                        
FUNCTION      : 3-INPUT OR GATE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR3_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.188 (Date Printed 6/21/88)
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3_3( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	or ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3_4                        
FUNCTION      : 3-INPUT OR GATE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR3_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.188 (Date Printed 6/21/88)
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3_4( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	or ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3_5                        
FUNCTION      : 3-INPUT OR GATE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      : 
@(#) OR3_5 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from CMOR30 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.188 (Date Printed 6/21/88)
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3_5( x, a, b, c );
	input a, b, c;
	output x;

//	functional section.

	or ( x, a, b, c );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3i_1                       
FUNCTION      : 3-INPUT OR , WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR3I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from or2i_1 8-29-96

TRUTH TABLE   :
                        A  B  C  X
                        -------------
                        H  L  L  L
                        L  X  X  H
                        X  H  X  H
                        X  X  H  H
                        -------------


REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3i_1( x, a, b, c);
	input a, b, c;
	output x;

//	functional section.

        not ( inv_a, a) ;
	or ( x, inv_a, b, c);

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3i_2                       
FUNCTION      : 3-INPUT OR , WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR3I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from or2i_2 8-29-96

TRUTH TABLE   :
                        A  B  C  X
                        -------------
                        H  L  L  L
                        L  X  X  H
                        X  H  X  H
                        X  X  H  H
                        -------------


REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3i_2( x, a, b, c);
	input a, b, c;
	output x;

//	functional section.

        not ( inv_a, a) ;
	or ( x, inv_a, b, c);

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3i_3                       
FUNCTION      : 3-INPUT OR , WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR3I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from or2i_1 8-29-96

TRUTH TABLE   :
                        A  B  C  X
                        -------------
                        H  L  L  L
                        L  X  X  H
                        X  H  X  H
                        X  X  H  H
                        -------------


REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3i_3( x, a, b, c);
	input a, b, c;
	output x;

//	functional section.

        not ( inv_a, a) ;
	or ( x, inv_a, b, c);

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3i_4                       
FUNCTION      : 3-INPUT OR , WITH 1 INVERTED INPUT, 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR3I_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from or2i_4 8-29-96

TRUTH TABLE   :
                        A  B  C  X
                        -------------
                        H  L  L  L
                        L  X  X  H
                        X  H  X  H
                        X  X  H  H
                        -------------


REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3i_4( x, a, b, c);
	input a, b, c;
	output x;

//	functional section.

        not ( inv_a, a) ;
	or ( x, inv_a, b, c);

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : or3i_5                       
FUNCTION      : 3-INPUT OR , WITH 1 INVERTED INPUT, 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#) OR3I_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

This model was copied from or2i_1 8-29-96

TRUTH TABLE   :
                        A  B  C  X
                        -------------
                        H  L  L  L
                        L  X  X  H
                        X  H  X  H
                        X  X  H  H
                        -------------


REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.187 (Date Printed 6/21/88)
*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module or3i_5( x, a, b, c);
	input a, b, c;
	output x;

//	functional section.

        not ( inv_a, a) ;
	or ( x, inv_a, b, c);

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( b => x ) = ( 1, 1 );
		( c => x ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_1 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_1 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_2 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_2 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_3 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_3 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_4 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_4 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_6 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_6 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffn_8 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffn_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CKB     Q   QB
                    -----------------------------
                                   _
                     L   X    L     \_    L   H
                                   _
                     H   X    L     \_    H   L
                                   _
                     X   L    H     \_    L   H
                                   _
                     X   H    H     \_    H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffn_8 (q, qb, d, ckb, sdi, se);

    input   d, ckb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ck, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (negedge ckb => (q +: d)) = (1, 1);
    if (!se)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , seb, ckbD, dD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb, 0, 0, notify_reg);
        $width (edge[10] ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_1 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_1 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_2 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_2 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_3 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_3 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_4 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_4 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_6 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_6 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnh_8 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFNH_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnh_8 (q, qb, d, ckb, sdi, se, g);
input d, ckb, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckbD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckbD, ckb );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        not (ck, ckbD);
    	p_lat_rs lat1 ( qint, wd, ck, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ck, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (negedge ckb => (q +: d)) = (1, 1);
    if (g_and_seb)
        (negedge ckb => (qb -: d)) = (1, 1);
    if (se)
        (negedge ckb => (q +: sdi)) = (1, 1);
    if (se)
        (negedge ckb => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , g_and_seb, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , se, ckbD, sdiD );
            $setuphold( negedge ckb, g, 0, 0, notify_reg, , seb, ckbD, gD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , , ckbD, seD );
        `else
            $setuphold( negedge ckb &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& se, sdi, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& seb, g, 0, 0, notify_reg);
            $setuphold( negedge ckb, se, 0, 0, notify_reg);
        `endif

        $width (posedge ckb, 0, 0, notify_reg);
        $width (negedge ckb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_1 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_2 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_3 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_4 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_6 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffnr_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFNR_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CKB    RB    Q   QB
                    ----------------------------------
                                   _
                     L   X    L     \_    H     L   H
                                   _
                     H   X    L     \_    H     H   L
                                   _
                     X   L    H     \_    H     L   H
                                   _
                     X   H    H     \_    H     H   L
                                     _
                     X   X    X    _/     H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffnr_8 (q, qb, d, ckb, sdi, se, rb);

    input   d, ckb, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckbD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckbD, ckb );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);
    not (ck, ckbD);
    p_lat_rs lat1 (iq, data, ck, rbD, 1'b1);
    n_lat_rs r (qint, iq, ck, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(negedge ckb => (q +: d)) = (1, 1);
        if (!se && rb)
     		(negedge ckb => (qb -: d)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(negedge ckb => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg, , , ckbD, rbD );
            $setuphold( negedge ckb, se, 0, 0, notify_reg, , rb, ckbD, seD );
            $setuphold( negedge ckb, d, 0, 0, notify_reg, , rbse, ckbD, dD );
            $setuphold( negedge ckb, sdi, 0, 0, notify_reg, , rse, ckbD, sdiD );
        `else
            $setuphold( negedge ckb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( negedge ckb &&& rb, se, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rbse, d, 0, 0, notify_reg);
            $setuphold( negedge ckb &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] ckb &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_1 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_1 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_2 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_2 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_3 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_3 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_4 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_4 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_6 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_6 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffp_8 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffp_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    -----------------------------
                     D  SDI  SE    CK     Q   QB
                    -----------------------------
                                     _
                     L   X    L    _/     L   H
                                     _
                     H   X    L    _/     H   L
                                     _
                     X   L    H    _/     L   H
                                     _
                     X   H    H    _/     H   L

                    -----------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffp_8 (q, qb, d, ck, sdi, se);

    input   d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    not (seb, seD);

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    specify

     // specify path delays

    if (!se)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , seb, ckD, dD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_1 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_1 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_2 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_2 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_3 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_3 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_4 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_4 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_6 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_6 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpc_8 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpc_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    --------------------------------
                     CLB D  SDI  SE    CK     Q   QB
                    --------------------------------
                                         _
                     L   X   X    L    _/     L   H
                                         _
                     X   L   X    L    _/     L   H
                                         _
                     H   H   X    L    _/     H   L
                                         _
                     X   X   L    H    _/     L   H
                                         _
                     X   X   H    H    _/     H   L
                                       _
                     X   X   X    X     \_    Q   QB

                    --------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpc_8 (q, qb, d, ck, clb, sdi, se);

    input   d, ck, clb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, clbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( clbD, clb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    and (di, dD, clbD);
    scaninp_udp_1 mx1 (data, di, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

  // Signals for conditioning timing checks
    not n2 (seb, seD);            
    and a1 (ensebclb, seb, clbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && clb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebclb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , ensebd, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& ensebclb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_1 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_1 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_2 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_2 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_3 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_3 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_4 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_4 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_6 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_6 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffph_8 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPH_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :  SE  SDI  G   D  |  Qn+1  QBn+1
                 -----------------|--------------
                  1    0   X   X  |   0      1     Scan
                  1    1   X   X  |   1      0     Scan
                  0    X   1   0  |   0      1     Normal
                  0    X   1   1  |   1      0     Normal
                  0    X   0   X  |   Qn    QBn    Hold
                       else       |   X      X


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffph_8 (q, qb, d, ck, sdi, se, g);
input d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (wd1, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);
    not  ( seb, seD );
    and  ( g_and_seb, gD, seb );

    specify

     // specify path delays

    if (g_and_seb)
        (posedge ck => (q +: d)) = (1, 1);
    if (g_and_seb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_1 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_1 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_2 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_2 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_3 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_3 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_4 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_4 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_6 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_6 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffphc_8 (delay model)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) INPUT
		  with HOLD function WITH SYNCHRONOUS CLEAR 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPHC_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.



TRUTH TABLE    :    ------------------------------------
                     CLB  G  D  SDI  SE    CK     Q   QB
                    ------------------------------------
                                             _
                     L    X  X   X    L    _/     L   H
                                             _
                     H    L  X   X    L    _/     Q   QB
                                             _
                     H    H  L   X    L    _/     L   H
                                             _
                     H    H  H   X    L    _/     H   L
                                             _
                     X    X  X   L    H    _/     L   H
                                             _
                     X    X  X   H    H    _/     H   L
                                           _
                     X    X  X   X    X     \_    Q   QB

                    ------------------------------------


This model was copied from DFFGLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Change History:  1/29/97 Sarkis Oundjian
                 Changed pin functionality of SDIB from inverting
                 to non-inverting. to -> SDI

                1/29/97 Sarkis Oundjian
                Got rid of the two bufs that I had originally changed
                the inverters to buffers.


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffphc_8 (q, qb, clb, d, ck, sdi, se, g);
input clb, d, ck, sdi, se, g;
output q, qb;

reg notify_reg;
wire clbD, dD, ckD, sdiD, seD, gD;

`ifdef cadence
`else
    buf( clbD, clb );
    buf( dD, d );
    buf( ckD, ck );
    buf( sdiD, sdi );
    buf( seD, se );
    buf( gD, g );
`endif
wire wq, wd, wd1;

        and a1 (wd1, dint, clbD);     
    	p_lat_rs lat1 ( qint, wd, ckD, 1'b1, 1'b1 );
	n_lat_rs r ( wq, qint, ckD, 1'b1, 1'b1, notify_reg );



    scaninp_udp_1 (dint, wq, dD, gD);
    scaninp_udp_1 (wd, wd1, sdiD, seD);
    buf  i4 (q, wq);
    not  i5 (qb, wq);

  // Signals for conditioning timing checks
    not  ( seb, seD );
    and  ( g_and_seb_and_clb, gD, seb, clbD );
    and  ( g_and_seb_and_d, gD, seb, dD );

    specify

     // specify path delays

    if (!se && clb && g)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (q +: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && clb && g)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !clb && g)
        (posedge ck => (qb -: 1'b0)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, d, 0, 0, notify_reg, , g_and_seb_and_clb, ckD, dD );
            $setuphold( posedge ck, clb, 0, 0, notify_reg, , g_and_seb_and_d, ckD, clbD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, g, 0, 0, notify_reg, , seb, ckD, gD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& g_and_seb_and_clb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& g_and_seb_and_d, clb, 0, 0, notify_reg);
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& seb, g, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (posedge ck, 0, 0, notify_reg);
        $width (negedge ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_1 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_2 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_3 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_4 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_6 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpr_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH RESET, MULTIPLEXED (OR SCAN) INPUT 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
REVISION       :  2.00
@(#)  SDFFPR_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     RB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     L   H

                    ----------------------------------


This model was copied from CMDF07 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.102 (Date Printed 6/21/88)

DATE GENERATED : Sun Feb 26 15:41:06 1989


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpr_8 (q, qb, d, ck, sdi, se, rb);

    input   d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    p_lat_rs lat1 (iq, data, ckD, rbD, 1'b1);
    n_lat_rs r (qint, iq, ckD, rbD, 1'b1, notify_reg);
    buf (q, qint);

    not n1 (qb, qint);

    not    n4 (bse, seD);
    and    a1 (rse, rbD, seD),
           a2 (rbse, rbD, bse);

    specify

     // specify path delays

        if (!se && rb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge rb => (q +: 1'b0)) = (1, 1);
        (negedge rb => (qb +: 1'b1)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , , ckD, rbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb, ckD, seD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rbse, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rse, ckD, sdiD );
        `else
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rbse, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rse, sdi, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_1
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_1 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_2
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_2 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_3
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_3 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_4
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_4 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_6
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_6 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES         :
MACROCELL NAME : sdffprs_8
FUNCTION      : D FIP-FLOP WITH SET AND RESET, MULTIPLEXED INPUT 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
REVISION      :
@(#)  SDFFPRS_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :

  		D  SDI  SE  CK  RB  SB    Q  QB
		-------------------------------
                      _
		L  X    L   _/  H   H     L  H
                      _
		H  X    L   _/  H   H     H  L
                      _
		X  L    H   _/  H   H     L  H
                      _
		X  H    H   _/  H   H     H  L
                    _
		X  X    X    \_ H   H     Q  QB

		X  X    X    X  L   H     L  H

		X  X    X    X  H   L     H  L

		X  X    X    X  L   L     L  L


This model was copied from DFFRSLPB 8-13-96

REFERENCES    :
		1. Motorola High Density Array Preliminary
		   Design Manual p.106   (Date Printed  6/21/1988)	


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffprs_8 (q, qb, sb, d, ck, sdi, se, rb);

    input   sb, d, ck, sdi, se, rb;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD, rbD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
        buf( rbD, rb );
    `endif
	wire w1, qib, q1;

	scaninp_udp_1 ( w1, dD, sdiD, seD );
	p_lat_rs lat1 ( qint, w1, ckD, rbD, sbD );
	n_lat_rs r (iq, qint, ckD, rbD, sbD, notify_reg );

        buf (q, iq);
	not ( qib, iq );
	
	and (qb, qib, sbD);
	
	not ( seb, seD );
	and ( rb_and_sb_and_seb, rbD, sbD, seb );
	and ( rb_and_sb_and_se, rbD, sbD, seD );
	and ( rb_and_sb, rbD, sbD );

    specify

     // specify path delays

        if (!se && rb && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && rb && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && rb && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        if (sb)
           (negedge rb => (qb -: 1'b0)) = (1, 1);
        if (rb)
           (negedge sb => (qb -: 1'b1)) = (1, 1);
        if (!rb)
           (sb => qb) = (1, 1);

        if (rb)
           (negedge sb => (q +: 1'b1)) = (1, 1);
        if (sb)
           (negedge rb => (q +: 1'b0)) = (1, 1);
        if (!sb)
           (rb => q) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] rb, 0, 0, notify_reg, , sb, ckD, rbD );
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , rb, ckD, sbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , rb_and_sb, ckD, seD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , rb_and_sb_and_se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , rb_and_sb_and_seb, ckD, dD );
        `else
            $setuphold( posedge ck &&& sb, edge[01] rb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb, edge[01] sb, 0, 0, notify_reg );
            $setuphold( posedge ck &&& rb_and_sb, se, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& rb_and_sb_and_seb, d, 0, 0, notify_reg);
        `endif

        $hold( edge[01] sb, edge[01] rb, 0, notify_reg );
        $hold( edge[01] rb, edge[01] sb, 0, notify_reg );

        $width (edge[01] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& rb_and_sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);
        $width (edge[10] rb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_1 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_1 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_1 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_2 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_2 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_2 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_3 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_3 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_3 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_4 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 4X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_4 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_4 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_6 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 2X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_6 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_6 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffps_8 (delay model)
FUNCTION       :  D FLIP-FLOP WITH SET, MULTIPLEXED (OR SCAN) INPUT 8X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
VERSION        :  2.00
REVISION       :
@(#)  SDFFPS_8 Veritool Model Rev. 3.00 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     D  SDI  SE    CK     SB    Q   QB
                    ----------------------------------
                                     _
                     L   X    L    _/     H     L   H
                                     _
                     H   X    L    _/     H     H   L
                                     _
                     X   L    H    _/     H     L   H
                                     _
                     X   H    H    _/     H     H   L
                                   _
                     X   X    X     \_    H     Q   QB

                     X   X    X     X     L     H   L

                    ----------------------------------


This model was copied from DFFSLP 8-13-96

REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.111 (Date Printed 6/21/88)


  02/28/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffps_8 (q, qb, sb, d, ck, sdi, se);

    input   sb, d, ck, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire sbD, dD, ckD, sdiD, seD;

    `ifdef cadence
    `else
        buf( sbD, sb );
        buf( dD, d );
        buf( ckD, ck );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dD, sdiD, seD);

    	p_lat_rs lat1 ( qint, data, ckD, 1'b1, sbD );
	n_lat_rs r (iq, qint, ckD, 1'b1, sbD, notify_reg );



    not (qb, iq);
buf (q, iq);

    not (bse, seD);
    and (enckd, bse, sbD),
        (encksdi, seD, sbD);

    specify

     // specify path delays

        if (!se && sb)
     		(posedge ck => (q +: d)) = (1, 1);
        if (!se && sb)
     		(posedge ck => (qb -: d)) = (1, 1);
        if (se && sb)
     		(posedge ck => (q +: sdi)) = (1, 1);
        if (se && sb)
     		(posedge ck => (qb -: sdi)) = (1, 1);

        (negedge sb => (q +: 1'b1)) = (1, 1);
        (negedge sb => (qb +: 1'b0)) = (1, 1);


        `ifdef cadence
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg, , , ckD, sbD );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg, , , sbD, ckD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , enckd, ckD, dD );
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , encksdi, ckD, sdiD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , sb, ckD, seD );
        `else
            $setuphold( posedge ck, edge[01] sb, 0, 0, notify_reg );
            $setuphold( edge[01] sb, posedge ck, 0, 0, notify_reg );
            $setuphold( posedge ck &&& enckd, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& encksdi, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& sb, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] ck &&& sb, 0, 0, notify_reg);
        $width (edge[10] sb, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_1 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_1 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_1 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_2 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_2 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_2 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_3 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_3 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_3 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_4 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_4 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_4 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_6 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_6 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_6 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*

NOTES          :
MACROCELL NAME :  sdffpt_8 (DELAY MODEL)
FUNCTION       :  D FLIP-FLOP, MULTIPLEXED (OR SCAN) WITH SYNCHRONOU PRESET 1X DRIVE
COMPANY        :
DESIGNED BY    :
TESTED BY      :
VERIFIED BY    :
@(#) sdffpt_8 Veritool Model Rev. 3.01 Copyright 1991, Motorola Inc.

TRUTH TABLE    :    ----------------------------------
                     SETB  D  SDI  SE    CK     Q   QB
                    ----------------------------------
                                           _
                     L     X   X    L    _/     H   L
                                           _
                     H     L   X    L    _/     L   H
                                           _
                     X     H   X    L    _/     H   L
                                           _
                     X     X   L    H    _/     L   H
                                           _
                     X     X   H    H    _/     H   L
                                         _
                     X     X   X    X     \_    Q   QB

                    ----------------------------------
REFERENCES     :
                1. Motorola High Density Array Preliminary
                   Design Manual p.97 (Date Printed 6/21/88)

Copied from CMDF02.V 8-26-96


  02/16/98 (R.Weintritt) Split $setup/$hold and $recovery converted to
           combined $setuphold in both 'standard' and Cadence 'delayed'
           format.  Conditional compilation ('ifdef cadence) added to
           enable selection of the delayed format.  This must not be set
           for non-cadence products!  Much thanks to Anne Harris for this
           suggestion and other invaluable assistance.
*/

`celldefine
module sdffpt_8 (q, qb, d, ck, setb, sdi, se);

    input   d, ck, setb, sdi, se;

    output   q, qb;

    reg notify_reg;
    wire dD, ckD, setbD, sdiD, seD;

    `ifdef cadence
    `else
        buf( dD, d );
        buf( ckD, ck );
        buf( setbD, setb );
        buf( sdiD, sdi );
        buf( seD, se );
    `endif

    scaninp_udp_1 mx1 (data, dint, sdiD, seD);

    not n1 (set, setbD);
    or o1 (dint, set, dD);
    p_lat_rs lat1 (iq, data, ckD, 1'b1, 1'b1);
    n_lat_rs r (qint, iq, ckD, 1'b1, 1'b1, notify_reg);
    buf (q, qint);

    not n3 (qb, qint);

  // Signals for conditioning timing checks
  
    not n2 (seb, seD);
    and a1 (ensebsetb, seb, setbD);
    and a3 (ensebd, seb, dD);

    specify

     // specify path delays

    if (!se && setb)
        (posedge ck => (q +: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (q +: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (q +: sdi)) = (1, 1);

    if (!se && setb)
        (posedge ck => (qb -: d)) = (1, 1);
    if (!se && !setb)
        (posedge ck => (qb -: 1'b1)) = (1, 1);
    if (se)
        (posedge ck => (qb -: sdi)) = (1, 1);

        `ifdef cadence
            $setuphold( posedge ck, sdi, 0, 0, notify_reg, , se, ckD, sdiD );
            $setuphold( posedge ck, d, 0, 0, notify_reg, , ensebsetb, ckD, dD );
            $setuphold( posedge ck, setb, 0, 0, notify_reg, , ensebd, ckD, setbD );
            $setuphold( posedge ck, se, 0, 0, notify_reg, , , ckD, seD );
        `else
            $setuphold( posedge ck &&& se, sdi, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebsetb, d, 0, 0, notify_reg);
            $setuphold( posedge ck &&& ensebd, setb, 0, 0, notify_reg);
            $setuphold( posedge ck, se, 0, 0, notify_reg);
        `endif

        $width (edge[01] ck, 0, 0, notify_reg);
        $width (edge[10] ck, 0, 0, notify_reg);

    endspecify

endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_1         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_1( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_10         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 10X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_10( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_12         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 12X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_12 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_12( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_14         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 14X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_14( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_16         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 12X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_16 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_16( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_2         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_2 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_2( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_3         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_3( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_4         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_4 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_4( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_5         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_5( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_6         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_6( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_7         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 7X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_7( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tbufh_8         		
FUNCTION      : NON-INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY   :				DATE         :
VERSION       : 2.00
REVISION      :
@(#)  TBUFH_8 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
                  ------------
                   A   EN   X
                  ------------
                   L   H    L
                   H   H    H
                   X   L    Z
                  ------------


This model was copied from TBUFP 8-13-96

REFERENCES  :
               1. Motorola High Density Array Preliminary
                  Design Manual p.197 (Date Printed 6/21/88)

NOTES    :

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tbufh_8( x, a, en );
	input a,en;
	output x;

//	functional section.

	bufif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_1                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 1X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_1( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_10                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 10X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_10( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_12                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 12X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_12 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_12( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_14                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 14X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_14( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_16                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 16X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_16 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_16( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_2                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 2X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_2 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_2( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_3                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 3X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_3( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_4                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 4X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_4 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_4( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_5                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 5X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_5( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_6                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 6X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_6( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_7                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 7X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_1 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_7( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME : tinvh_8                      
FUNCTION      : INVERTING TRI-STATE BUFFER, ACTIVE HIGH ENABLE 8X DRIVE
COMPANY       : MOTOROLA
DESIGNED BY    :
TESTED BY     :
VERIFIED BY    :
VERSION       : 2.00
REVISION      :
@(#)  TINVH_8 Veritool Model Rev. 2.00 Copyright 1991, Motorola Inc.

TRUTH TABLE   :
		A	EN	X
		------------------
		L	H	H
		H	H	L	
		X	L	Z

This model was copied from INVTP 8-13-96

REFERENCES  :
                1. Motorola High Density Array Preliminary
                   Design Manual p.131 (Date Printed 6/21/88)

*/
/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module tinvh_8( x, a, en );
	input a,en;
	output x;

//	functional section.

	notif1 ( x, a, en );

//	timing section.

	specify

     // specify path delays

		( a => x ) = ( 1, 1 );
		( en => x ) = ( 1, 1,
				1, 1,
				1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf2_16
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf2_16( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf2_16pd
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf2_16pd( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf2_16pu
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf2_16pu( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf3_16
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 /9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf3_16( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf3_16pd
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf3_16pd( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbuf3_16pu
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbuf3_16pu( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs2_16
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs2_16( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs2_16pd
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs2_16pd( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs2_16pu
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs2_16pu( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs3_16
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs3_16( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs3_16pd
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs3_16pd( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: inbufs3_16pu
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : BARRY SIEGWART            DATE         : 19 Oct, 1992
VERSION       : 2.00
REVISION      :
This model was copied from ibufc5t_16_80 9/28/98
michael shieh

*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/
 
`celldefine
module inbufs3_16pu( di, pad );
	input pad;
	output di;

//	functional section.

	buf ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf2_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf2_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobuf3_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobuf3_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufdv_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufdv_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs2_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs2_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufs3_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufs3_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pd_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pd_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pd_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pd_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pd_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pd_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pu_12
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pu_12( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pu_4
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pu_4( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
/*
MACROCELL NAME: iobufsdv_16pu_8
FUNCTION      :
COMPANY       : MOTOROLA
TEST FILE     :                           TEST CIRCUIT :
DESIGNED BY   : GERRY WALCOTT             DATE         : 23 May, 1995
VERSION       : 2.00
REVISION      :
This model was copied from iobuft5t_16_4_80 9/28/98
michael shieh

              
*/

/******************************************************************
 * Copyright (c) 1988  MOTOROLA, Inc.                             *
 * NOTICE: The information contained in this file is proprietary  *
 * to MOTOROLA, INC. and is being made available  to MOTOROLA'S   *
 * customers under strict non-disclosure agreements.              *
 * Use or disclosure of this information is permissible only      *
 * under the terms of the existing non-disclosure agreement.      *
 ******************************************************************/

`celldefine
module iobufsdv_16pu_8( pad, di, do, en );
	input do,en;
        inout pad;
	output di;
	wire int;

//	functional section.

	bufif1 ( int, do, en );
	bufif1 ( pad, int, en );
	buf    ( di, pad );

//	timing section.

	specify

     // Specify Path Delays

		( do => pad ) = ( 1, 1 );
		( en => pad ) = ( 1, 1,
				1, 1,
				1, 1 );
		( pad => di ) = ( 1, 1 );

	endspecify
endmodule
`endcelldefine
